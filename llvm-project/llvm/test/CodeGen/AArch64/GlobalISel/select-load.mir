# RUN: llc -mtriple=aarch64-- -run-pass=instruction-select -verify-machineinstrs -global-isel %s -o - | FileCheck %s

--- |
  target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"

  define void @load_s64_gpr(i64* %addr) { ret void }
  define void @load_s32_gpr(i32* %addr) { ret void }
  define void @load_s16_gpr(i16* %addr) { ret void }
  define void @load_s8_gpr(i8* %addr) { ret void }
  define void @load_s64_fpr(i64* %addr) { ret void }
  define void @load_s32_fpr(i32* %addr) { ret void }
  define void @load_s16_fpr(i16* %addr) { ret void }
  define void @load_s8_fpr(i8* %addr) { ret void }
...

---
# CHECK-LABEL: name: load_s64_gpr
name:            load_s64_gpr
legalized:       true
regBankSelected: true

# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gpr64sp }
# CHECK-NEXT:  - { id: 1, class: gpr64 }
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }

# CHECK:  body:
# CHECK: %0 = COPY %x0
# CHECK: %1 = LDRXui %0, 0 :: (load 8 from %ir.addr)
body:             |
  bb.0:
    liveins: %x0

    %0(p0) = COPY %x0
    %1(s64) = G_LOAD  %0 :: (load 8 from %ir.addr)

...

---
# CHECK-LABEL: name: load_s32_gpr
name:            load_s32_gpr
legalized:       true
regBankSelected: true

# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gpr64sp }
# CHECK-NEXT:  - { id: 1, class: gpr32 }
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }

# CHECK:  body:
# CHECK: %0 = COPY %x0
# CHECK: %1 = LDRWui %0, 0 :: (load 4 from %ir.addr)
body:             |
  bb.0:
    liveins: %x0

    %0(p0) = COPY %x0
    %1(s32) = G_LOAD  %0 :: (load 4 from %ir.addr)

...

---
# CHECK-LABEL: name: load_s16_gpr
name:            load_s16_gpr
legalized:       true
regBankSelected: true

# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gpr64sp }
# CHECK-NEXT:  - { id: 1, class: gpr32 }
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }

# CHECK:  body:
# CHECK: %0 = COPY %x0
# CHECK: %1 = LDRHHui %0, 0 :: (load 2 from %ir.addr)
body:             |
  bb.0:
    liveins: %x0

    %0(p0) = COPY %x0
    %1(s16) = G_LOAD  %0 :: (load 2 from %ir.addr)

...

---
# CHECK-LABEL: name: load_s8_gpr
name:            load_s8_gpr
legalized:       true
regBankSelected: true

# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gpr64sp }
# CHECK-NEXT:  - { id: 1, class: gpr32 }
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: gpr }

# CHECK:  body:
# CHECK: %0 = COPY %x0
# CHECK: %1 = LDRBBui %0, 0 :: (load 1 from %ir.addr)
body:             |
  bb.0:
    liveins: %x0

    %0(p0) = COPY %x0
    %1(s8) = G_LOAD  %0 :: (load 1 from %ir.addr)

...

---
# CHECK-LABEL: name: load_s64_fpr
name:            load_s64_fpr
legalized:       true
regBankSelected: true

# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gpr64sp }
# CHECK-NEXT:  - { id: 1, class: fpr64 }
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: fpr }

# CHECK:  body:
# CHECK: %0 = COPY %x0
# CHECK: %1 = LDRDui %0, 0 :: (load 8 from %ir.addr)
body:             |
  bb.0:
    liveins: %x0

    %0(p0) = COPY %x0
    %1(s64) = G_LOAD  %0 :: (load 8 from %ir.addr)

...

---
# CHECK-LABEL: name: load_s32_fpr
name:            load_s32_fpr
legalized:       true
regBankSelected: true

# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gpr64sp }
# CHECK-NEXT:  - { id: 1, class: fpr32 }
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: fpr }

# CHECK:  body:
# CHECK: %0 = COPY %x0
# CHECK: %1 = LDRSui %0, 0 :: (load 4 from %ir.addr)
body:             |
  bb.0:
    liveins: %x0

    %0(p0) = COPY %x0
    %1(s32) = G_LOAD  %0 :: (load 4 from %ir.addr)

...

---
# CHECK-LABEL: name: load_s16_fpr
name:            load_s16_fpr
legalized:       true
regBankSelected: true

# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gpr64sp }
# CHECK-NEXT:  - { id: 1, class: fpr16 }
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: fpr }

# CHECK:  body:
# CHECK: %0 = COPY %x0
# CHECK: %1 = LDRHui %0, 0 :: (load 2 from %ir.addr)
body:             |
  bb.0:
    liveins: %x0

    %0(p0) = COPY %x0
    %1(s16) = G_LOAD  %0 :: (load 2 from %ir.addr)

...

---
# CHECK-LABEL: name: load_s8_fpr
name:            load_s8_fpr
legalized:       true
regBankSelected: true

# CHECK:      registers:
# CHECK-NEXT:  - { id: 0, class: gpr64sp }
# CHECK-NEXT:  - { id: 1, class: fpr8 }
registers:
  - { id: 0, class: gpr }
  - { id: 1, class: fpr }

# CHECK:  body:
# CHECK: %0 = COPY %x0
# CHECK: %1 = LDRBui %0, 0 :: (load 1 from %ir.addr)
body:             |
  bb.0:
    liveins: %x0

    %0(p0) = COPY %x0
    %1(s8) = G_LOAD  %0 :: (load 1 from %ir.addr)

...
