/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace PPC {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    FENTRY_CALL	= 18,
    PATCHPOINT	= 19,
    LOAD_STACK_GUARD	= 20,
    STATEPOINT	= 21,
    LOCAL_ESCAPE	= 22,
    FAULTING_OP	= 23,
    PATCHABLE_OP	= 24,
    PATCHABLE_FUNCTION_ENTER	= 25,
    PATCHABLE_RET	= 26,
    PATCHABLE_FUNCTION_EXIT	= 27,
    PATCHABLE_TAIL_CALL	= 28,
    G_ADD	= 29,
    G_SUB	= 30,
    G_MUL	= 31,
    G_SDIV	= 32,
    G_UDIV	= 33,
    G_SREM	= 34,
    G_UREM	= 35,
    G_AND	= 36,
    G_OR	= 37,
    G_XOR	= 38,
    G_FRAME_INDEX	= 39,
    G_GLOBAL_VALUE	= 40,
    G_EXTRACT	= 41,
    G_UNMERGE_VALUES	= 42,
    G_INSERT	= 43,
    G_SEQUENCE	= 44,
    G_MERGE_VALUES	= 45,
    G_PTRTOINT	= 46,
    G_INTTOPTR	= 47,
    G_BITCAST	= 48,
    G_LOAD	= 49,
    G_STORE	= 50,
    G_BRCOND	= 51,
    G_BRINDIRECT	= 52,
    G_INTRINSIC	= 53,
    G_INTRINSIC_W_SIDE_EFFECTS	= 54,
    G_ANYEXT	= 55,
    G_TRUNC	= 56,
    G_CONSTANT	= 57,
    G_FCONSTANT	= 58,
    G_VASTART	= 59,
    G_VAARG	= 60,
    G_SEXT	= 61,
    G_ZEXT	= 62,
    G_SHL	= 63,
    G_LSHR	= 64,
    G_ASHR	= 65,
    G_ICMP	= 66,
    G_FCMP	= 67,
    G_SELECT	= 68,
    G_UADDE	= 69,
    G_USUBE	= 70,
    G_SADDO	= 71,
    G_SSUBO	= 72,
    G_UMULO	= 73,
    G_SMULO	= 74,
    G_UMULH	= 75,
    G_SMULH	= 76,
    G_FADD	= 77,
    G_FSUB	= 78,
    G_FMUL	= 79,
    G_FDIV	= 80,
    G_FREM	= 81,
    G_FPOW	= 82,
    G_FNEG	= 83,
    G_FPEXT	= 84,
    G_FPTRUNC	= 85,
    G_FPTOSI	= 86,
    G_FPTOUI	= 87,
    G_SITOFP	= 88,
    G_UITOFP	= 89,
    G_GEP	= 90,
    G_PTR_MASK	= 91,
    G_BR	= 92,
    G_INSERT_VECTOR_ELT	= 93,
    G_EXTRACT_VECTOR_ELT	= 94,
    ADD4	= 95,
    ADD4TLS	= 96,
    ADD4o	= 97,
    ADD8	= 98,
    ADD8TLS	= 99,
    ADD8TLS_	= 100,
    ADD8o	= 101,
    ADDC	= 102,
    ADDC8	= 103,
    ADDC8o	= 104,
    ADDCo	= 105,
    ADDE	= 106,
    ADDE8	= 107,
    ADDE8o	= 108,
    ADDEo	= 109,
    ADDI	= 110,
    ADDI8	= 111,
    ADDIC	= 112,
    ADDIC8	= 113,
    ADDICo	= 114,
    ADDIS	= 115,
    ADDIS8	= 116,
    ADDISdtprelHA	= 117,
    ADDISdtprelHA32	= 118,
    ADDISgotTprelHA	= 119,
    ADDIStlsgdHA	= 120,
    ADDIStlsldHA	= 121,
    ADDIStocHA	= 122,
    ADDIdtprelL	= 123,
    ADDIdtprelL32	= 124,
    ADDItlsgdL	= 125,
    ADDItlsgdL32	= 126,
    ADDItlsgdLADDR	= 127,
    ADDItlsgdLADDR32	= 128,
    ADDItlsldL	= 129,
    ADDItlsldL32	= 130,
    ADDItlsldLADDR	= 131,
    ADDItlsldLADDR32	= 132,
    ADDItocL	= 133,
    ADDME	= 134,
    ADDME8	= 135,
    ADDME8o	= 136,
    ADDMEo	= 137,
    ADDZE	= 138,
    ADDZE8	= 139,
    ADDZE8o	= 140,
    ADDZEo	= 141,
    ADJCALLSTACKDOWN	= 142,
    ADJCALLSTACKUP	= 143,
    AND	= 144,
    AND8	= 145,
    AND8o	= 146,
    ANDC	= 147,
    ANDC8	= 148,
    ANDC8o	= 149,
    ANDCo	= 150,
    ANDISo	= 151,
    ANDISo8	= 152,
    ANDIo	= 153,
    ANDIo8	= 154,
    ANDIo_1_EQ_BIT	= 155,
    ANDIo_1_EQ_BIT8	= 156,
    ANDIo_1_GT_BIT	= 157,
    ANDIo_1_GT_BIT8	= 158,
    ANDo	= 159,
    ATOMIC_CMP_SWAP_I16	= 160,
    ATOMIC_CMP_SWAP_I32	= 161,
    ATOMIC_CMP_SWAP_I64	= 162,
    ATOMIC_CMP_SWAP_I8	= 163,
    ATOMIC_LOAD_ADD_I16	= 164,
    ATOMIC_LOAD_ADD_I32	= 165,
    ATOMIC_LOAD_ADD_I64	= 166,
    ATOMIC_LOAD_ADD_I8	= 167,
    ATOMIC_LOAD_AND_I16	= 168,
    ATOMIC_LOAD_AND_I32	= 169,
    ATOMIC_LOAD_AND_I64	= 170,
    ATOMIC_LOAD_AND_I8	= 171,
    ATOMIC_LOAD_MAX_I16	= 172,
    ATOMIC_LOAD_MAX_I32	= 173,
    ATOMIC_LOAD_MAX_I64	= 174,
    ATOMIC_LOAD_MAX_I8	= 175,
    ATOMIC_LOAD_MIN_I16	= 176,
    ATOMIC_LOAD_MIN_I32	= 177,
    ATOMIC_LOAD_MIN_I64	= 178,
    ATOMIC_LOAD_MIN_I8	= 179,
    ATOMIC_LOAD_NAND_I16	= 180,
    ATOMIC_LOAD_NAND_I32	= 181,
    ATOMIC_LOAD_NAND_I64	= 182,
    ATOMIC_LOAD_NAND_I8	= 183,
    ATOMIC_LOAD_OR_I16	= 184,
    ATOMIC_LOAD_OR_I32	= 185,
    ATOMIC_LOAD_OR_I64	= 186,
    ATOMIC_LOAD_OR_I8	= 187,
    ATOMIC_LOAD_SUB_I16	= 188,
    ATOMIC_LOAD_SUB_I32	= 189,
    ATOMIC_LOAD_SUB_I64	= 190,
    ATOMIC_LOAD_SUB_I8	= 191,
    ATOMIC_LOAD_UMAX_I16	= 192,
    ATOMIC_LOAD_UMAX_I32	= 193,
    ATOMIC_LOAD_UMAX_I64	= 194,
    ATOMIC_LOAD_UMAX_I8	= 195,
    ATOMIC_LOAD_UMIN_I16	= 196,
    ATOMIC_LOAD_UMIN_I32	= 197,
    ATOMIC_LOAD_UMIN_I64	= 198,
    ATOMIC_LOAD_UMIN_I8	= 199,
    ATOMIC_LOAD_XOR_I16	= 200,
    ATOMIC_LOAD_XOR_I32	= 201,
    ATOMIC_LOAD_XOR_I64	= 202,
    ATOMIC_LOAD_XOR_I8	= 203,
    ATOMIC_SWAP_I16	= 204,
    ATOMIC_SWAP_I32	= 205,
    ATOMIC_SWAP_I64	= 206,
    ATOMIC_SWAP_I8	= 207,
    ATTN	= 208,
    B	= 209,
    BA	= 210,
    BC	= 211,
    BCC	= 212,
    BCCA	= 213,
    BCCCTR	= 214,
    BCCCTR8	= 215,
    BCCCTRL	= 216,
    BCCCTRL8	= 217,
    BCCL	= 218,
    BCCLA	= 219,
    BCCLR	= 220,
    BCCLRL	= 221,
    BCCTR	= 222,
    BCCTR8	= 223,
    BCCTR8n	= 224,
    BCCTRL	= 225,
    BCCTRL8	= 226,
    BCCTRL8n	= 227,
    BCCTRLn	= 228,
    BCCTRn	= 229,
    BCDCFNo	= 230,
    BCDCFSQo	= 231,
    BCDCFZo	= 232,
    BCDCPSGNo	= 233,
    BCDCTNo	= 234,
    BCDCTSQo	= 235,
    BCDCTZo	= 236,
    BCDSETSGNo	= 237,
    BCDSRo	= 238,
    BCDSo	= 239,
    BCDTRUNCo	= 240,
    BCDUSo	= 241,
    BCDUTRUNCo	= 242,
    BCL	= 243,
    BCLR	= 244,
    BCLRL	= 245,
    BCLRLn	= 246,
    BCLRn	= 247,
    BCLalways	= 248,
    BCLn	= 249,
    BCTR	= 250,
    BCTR8	= 251,
    BCTRL	= 252,
    BCTRL8	= 253,
    BCTRL8_LDinto_toc	= 254,
    BCn	= 255,
    BDNZ	= 256,
    BDNZ8	= 257,
    BDNZA	= 258,
    BDNZAm	= 259,
    BDNZAp	= 260,
    BDNZL	= 261,
    BDNZLA	= 262,
    BDNZLAm	= 263,
    BDNZLAp	= 264,
    BDNZLR	= 265,
    BDNZLR8	= 266,
    BDNZLRL	= 267,
    BDNZLRLm	= 268,
    BDNZLRLp	= 269,
    BDNZLRm	= 270,
    BDNZLRp	= 271,
    BDNZLm	= 272,
    BDNZLp	= 273,
    BDNZm	= 274,
    BDNZp	= 275,
    BDZ	= 276,
    BDZ8	= 277,
    BDZA	= 278,
    BDZAm	= 279,
    BDZAp	= 280,
    BDZL	= 281,
    BDZLA	= 282,
    BDZLAm	= 283,
    BDZLAp	= 284,
    BDZLR	= 285,
    BDZLR8	= 286,
    BDZLRL	= 287,
    BDZLRLm	= 288,
    BDZLRLp	= 289,
    BDZLRm	= 290,
    BDZLRp	= 291,
    BDZLm	= 292,
    BDZLp	= 293,
    BDZm	= 294,
    BDZp	= 295,
    BL	= 296,
    BL8	= 297,
    BL8_NOP	= 298,
    BL8_NOP_TLS	= 299,
    BL8_TLS	= 300,
    BL8_TLS_	= 301,
    BLA	= 302,
    BLA8	= 303,
    BLA8_NOP	= 304,
    BLR	= 305,
    BLR8	= 306,
    BLRL	= 307,
    BL_TLS	= 308,
    BPERMD	= 309,
    BRINC	= 310,
    CLRBHRB	= 311,
    CLRLSLDI	= 312,
    CLRLSLDIo	= 313,
    CLRLSLWI	= 314,
    CLRLSLWIo	= 315,
    CLRRDI	= 316,
    CLRRDIo	= 317,
    CLRRWI	= 318,
    CLRRWIo	= 319,
    CMPB	= 320,
    CMPB8	= 321,
    CMPD	= 322,
    CMPDI	= 323,
    CMPEQB	= 324,
    CMPLD	= 325,
    CMPLDI	= 326,
    CMPLW	= 327,
    CMPLWI	= 328,
    CMPRB	= 329,
    CMPRB8	= 330,
    CMPW	= 331,
    CMPWI	= 332,
    CNTLZD	= 333,
    CNTLZDo	= 334,
    CNTLZW	= 335,
    CNTLZW8	= 336,
    CNTLZW8o	= 337,
    CNTLZWo	= 338,
    CNTTZD	= 339,
    CNTTZDo	= 340,
    CNTTZW	= 341,
    CNTTZW8	= 342,
    CNTTZW8o	= 343,
    CNTTZWo	= 344,
    CP_ABORT	= 345,
    CP_COPY	= 346,
    CP_COPY8	= 347,
    CP_COPY_FIRST	= 348,
    CP_COPYx	= 349,
    CP_PASTE	= 350,
    CP_PASTE8	= 351,
    CP_PASTE8o	= 352,
    CP_PASTE_LAST	= 353,
    CP_PASTEo	= 354,
    CP_PASTEx	= 355,
    CR6SET	= 356,
    CR6UNSET	= 357,
    CRAND	= 358,
    CRANDC	= 359,
    CREQV	= 360,
    CRNAND	= 361,
    CRNOR	= 362,
    CROR	= 363,
    CRORC	= 364,
    CRSET	= 365,
    CRUNSET	= 366,
    CRXOR	= 367,
    DCBA	= 368,
    DCBF	= 369,
    DCBFL	= 370,
    DCBFLP	= 371,
    DCBFx	= 372,
    DCBI	= 373,
    DCBST	= 374,
    DCBT	= 375,
    DCBTCT	= 376,
    DCBTDS	= 377,
    DCBTST	= 378,
    DCBTSTCT	= 379,
    DCBTSTDS	= 380,
    DCBTSTT	= 381,
    DCBTSTx	= 382,
    DCBTT	= 383,
    DCBTx	= 384,
    DCBZ	= 385,
    DCBZL	= 386,
    DCCCI	= 387,
    DFLOADf32	= 388,
    DFLOADf64	= 389,
    DFSTOREf32	= 390,
    DFSTOREf64	= 391,
    DIVD	= 392,
    DIVDE	= 393,
    DIVDEU	= 394,
    DIVDEUo	= 395,
    DIVDEo	= 396,
    DIVDU	= 397,
    DIVDUo	= 398,
    DIVDo	= 399,
    DIVW	= 400,
    DIVWE	= 401,
    DIVWEU	= 402,
    DIVWEUo	= 403,
    DIVWEo	= 404,
    DIVWU	= 405,
    DIVWUo	= 406,
    DIVWo	= 407,
    DSS	= 408,
    DSSALL	= 409,
    DST	= 410,
    DST64	= 411,
    DSTST	= 412,
    DSTST64	= 413,
    DSTSTT	= 414,
    DSTSTT64	= 415,
    DSTT	= 416,
    DSTT64	= 417,
    DYNALLOC	= 418,
    DYNALLOC8	= 419,
    DYNAREAOFFSET	= 420,
    DYNAREAOFFSET8	= 421,
    EH_SjLj_LongJmp32	= 422,
    EH_SjLj_LongJmp64	= 423,
    EH_SjLj_SetJmp32	= 424,
    EH_SjLj_SetJmp64	= 425,
    EH_SjLj_Setup	= 426,
    EQV	= 427,
    EQV8	= 428,
    EQV8o	= 429,
    EQVo	= 430,
    EVABS	= 431,
    EVADDIW	= 432,
    EVADDSMIAAW	= 433,
    EVADDSSIAAW	= 434,
    EVADDUMIAAW	= 435,
    EVADDUSIAAW	= 436,
    EVADDW	= 437,
    EVAND	= 438,
    EVANDC	= 439,
    EVCMPEQ	= 440,
    EVCMPGTS	= 441,
    EVCMPGTU	= 442,
    EVCMPLTS	= 443,
    EVCMPLTU	= 444,
    EVCNTLSW	= 445,
    EVCNTLZW	= 446,
    EVDIVWS	= 447,
    EVDIVWU	= 448,
    EVEQV	= 449,
    EVEXTSB	= 450,
    EVEXTSH	= 451,
    EVLDD	= 452,
    EVLDDX	= 453,
    EVLDH	= 454,
    EVLDHX	= 455,
    EVLDW	= 456,
    EVLDWX	= 457,
    EVLHHESPLAT	= 458,
    EVLHHESPLATX	= 459,
    EVLHHOSSPLAT	= 460,
    EVLHHOSSPLATX	= 461,
    EVLHHOUSPLAT	= 462,
    EVLHHOUSPLATX	= 463,
    EVLWHE	= 464,
    EVLWHEX	= 465,
    EVLWHOS	= 466,
    EVLWHOSX	= 467,
    EVLWHOU	= 468,
    EVLWHOUX	= 469,
    EVLWHSPLAT	= 470,
    EVLWHSPLATX	= 471,
    EVLWWSPLAT	= 472,
    EVLWWSPLATX	= 473,
    EVMERGEHI	= 474,
    EVMERGEHILO	= 475,
    EVMERGELO	= 476,
    EVMERGELOHI	= 477,
    EVMHEGSMFAA	= 478,
    EVMHEGSMFAN	= 479,
    EVMHEGSMIAA	= 480,
    EVMHEGSMIAN	= 481,
    EVMHEGUMIAA	= 482,
    EVMHEGUMIAN	= 483,
    EVMHESMF	= 484,
    EVMHESMFA	= 485,
    EVMHESMFAAW	= 486,
    EVMHESMFANW	= 487,
    EVMHESMI	= 488,
    EVMHESMIA	= 489,
    EVMHESMIAAW	= 490,
    EVMHESMIANW	= 491,
    EVMHESSF	= 492,
    EVMHESSFA	= 493,
    EVMHESSFAAW	= 494,
    EVMHESSFANW	= 495,
    EVMHESSIAAW	= 496,
    EVMHESSIANW	= 497,
    EVMHEUMI	= 498,
    EVMHEUMIA	= 499,
    EVMHEUMIAAW	= 500,
    EVMHEUMIANW	= 501,
    EVMHEUSIAAW	= 502,
    EVMHEUSIANW	= 503,
    EVMHOGSMFAA	= 504,
    EVMHOGSMFAN	= 505,
    EVMHOGSMIAA	= 506,
    EVMHOGSMIAN	= 507,
    EVMHOGUMIAA	= 508,
    EVMHOGUMIAN	= 509,
    EVMHOSMF	= 510,
    EVMHOSMFA	= 511,
    EVMHOSMFAAW	= 512,
    EVMHOSMFANW	= 513,
    EVMHOSMI	= 514,
    EVMHOSMIA	= 515,
    EVMHOSMIAAW	= 516,
    EVMHOSMIANW	= 517,
    EVMHOSSF	= 518,
    EVMHOSSFA	= 519,
    EVMHOSSFAAW	= 520,
    EVMHOSSFANW	= 521,
    EVMHOSSIAAW	= 522,
    EVMHOSSIANW	= 523,
    EVMHOUMI	= 524,
    EVMHOUMIA	= 525,
    EVMHOUMIAAW	= 526,
    EVMHOUMIANW	= 527,
    EVMHOUSIAAW	= 528,
    EVMHOUSIANW	= 529,
    EVMRA	= 530,
    EVMWHSMF	= 531,
    EVMWHSMFA	= 532,
    EVMWHSMI	= 533,
    EVMWHSMIA	= 534,
    EVMWHSSF	= 535,
    EVMWHSSFA	= 536,
    EVMWHUMI	= 537,
    EVMWHUMIA	= 538,
    EVMWLSMIAAW	= 539,
    EVMWLSMIANW	= 540,
    EVMWLSSIAAW	= 541,
    EVMWLSSIANW	= 542,
    EVMWLUMI	= 543,
    EVMWLUMIA	= 544,
    EVMWLUMIAAW	= 545,
    EVMWLUMIANW	= 546,
    EVMWLUSIAAW	= 547,
    EVMWLUSIANW	= 548,
    EVMWSMF	= 549,
    EVMWSMFA	= 550,
    EVMWSMFAA	= 551,
    EVMWSMFAN	= 552,
    EVMWSMI	= 553,
    EVMWSMIA	= 554,
    EVMWSMIAA	= 555,
    EVMWSMIAN	= 556,
    EVMWSSF	= 557,
    EVMWSSFA	= 558,
    EVMWSSFAA	= 559,
    EVMWSSFAN	= 560,
    EVMWUMI	= 561,
    EVMWUMIA	= 562,
    EVMWUMIAA	= 563,
    EVMWUMIAN	= 564,
    EVNAND	= 565,
    EVNEG	= 566,
    EVNOR	= 567,
    EVOR	= 568,
    EVORC	= 569,
    EVRLW	= 570,
    EVRLWI	= 571,
    EVRNDW	= 572,
    EVSLW	= 573,
    EVSLWI	= 574,
    EVSPLATFI	= 575,
    EVSPLATI	= 576,
    EVSRWIS	= 577,
    EVSRWIU	= 578,
    EVSRWS	= 579,
    EVSRWU	= 580,
    EVSTDD	= 581,
    EVSTDDX	= 582,
    EVSTDH	= 583,
    EVSTDHX	= 584,
    EVSTDW	= 585,
    EVSTDWX	= 586,
    EVSTWHE	= 587,
    EVSTWHEX	= 588,
    EVSTWHO	= 589,
    EVSTWHOX	= 590,
    EVSTWWE	= 591,
    EVSTWWEX	= 592,
    EVSTWWO	= 593,
    EVSTWWOX	= 594,
    EVSUBFSMIAAW	= 595,
    EVSUBFSSIAAW	= 596,
    EVSUBFUMIAAW	= 597,
    EVSUBFUSIAAW	= 598,
    EVSUBFW	= 599,
    EVSUBIFW	= 600,
    EVXOR	= 601,
    EXTLDI	= 602,
    EXTLDIo	= 603,
    EXTLWI	= 604,
    EXTLWIo	= 605,
    EXTRDI	= 606,
    EXTRDIo	= 607,
    EXTRWI	= 608,
    EXTRWIo	= 609,
    EXTSB	= 610,
    EXTSB8	= 611,
    EXTSB8_32_64	= 612,
    EXTSB8o	= 613,
    EXTSBo	= 614,
    EXTSH	= 615,
    EXTSH8	= 616,
    EXTSH8_32_64	= 617,
    EXTSH8o	= 618,
    EXTSHo	= 619,
    EXTSW	= 620,
    EXTSW_32_64	= 621,
    EXTSW_32_64o	= 622,
    EXTSWo	= 623,
    EnforceIEIO	= 624,
    FABSD	= 625,
    FABSDo	= 626,
    FABSS	= 627,
    FABSSo	= 628,
    FADD	= 629,
    FADDS	= 630,
    FADDSo	= 631,
    FADDo	= 632,
    FADDrtz	= 633,
    FCFID	= 634,
    FCFIDS	= 635,
    FCFIDSo	= 636,
    FCFIDU	= 637,
    FCFIDUS	= 638,
    FCFIDUSo	= 639,
    FCFIDUo	= 640,
    FCFIDo	= 641,
    FCMPUD	= 642,
    FCMPUS	= 643,
    FCPSGND	= 644,
    FCPSGNDo	= 645,
    FCPSGNS	= 646,
    FCPSGNSo	= 647,
    FCTID	= 648,
    FCTIDU	= 649,
    FCTIDUZ	= 650,
    FCTIDUZo	= 651,
    FCTIDUo	= 652,
    FCTIDZ	= 653,
    FCTIDZo	= 654,
    FCTIDo	= 655,
    FCTIW	= 656,
    FCTIWU	= 657,
    FCTIWUZ	= 658,
    FCTIWUZo	= 659,
    FCTIWUo	= 660,
    FCTIWZ	= 661,
    FCTIWZo	= 662,
    FCTIWo	= 663,
    FDIV	= 664,
    FDIVS	= 665,
    FDIVSo	= 666,
    FDIVo	= 667,
    FMADD	= 668,
    FMADDS	= 669,
    FMADDSo	= 670,
    FMADDo	= 671,
    FMR	= 672,
    FMRo	= 673,
    FMSUB	= 674,
    FMSUBS	= 675,
    FMSUBSo	= 676,
    FMSUBo	= 677,
    FMUL	= 678,
    FMULS	= 679,
    FMULSo	= 680,
    FMULo	= 681,
    FNABSD	= 682,
    FNABSDo	= 683,
    FNABSS	= 684,
    FNABSSo	= 685,
    FNEGD	= 686,
    FNEGDo	= 687,
    FNEGS	= 688,
    FNEGSo	= 689,
    FNMADD	= 690,
    FNMADDS	= 691,
    FNMADDSo	= 692,
    FNMADDo	= 693,
    FNMSUB	= 694,
    FNMSUBS	= 695,
    FNMSUBSo	= 696,
    FNMSUBo	= 697,
    FRE	= 698,
    FRES	= 699,
    FRESo	= 700,
    FREo	= 701,
    FRIMD	= 702,
    FRIMDo	= 703,
    FRIMS	= 704,
    FRIMSo	= 705,
    FRIND	= 706,
    FRINDo	= 707,
    FRINS	= 708,
    FRINSo	= 709,
    FRIPD	= 710,
    FRIPDo	= 711,
    FRIPS	= 712,
    FRIPSo	= 713,
    FRIZD	= 714,
    FRIZDo	= 715,
    FRIZS	= 716,
    FRIZSo	= 717,
    FRSP	= 718,
    FRSPo	= 719,
    FRSQRTE	= 720,
    FRSQRTES	= 721,
    FRSQRTESo	= 722,
    FRSQRTEo	= 723,
    FSELD	= 724,
    FSELDo	= 725,
    FSELS	= 726,
    FSELSo	= 727,
    FSQRT	= 728,
    FSQRTS	= 729,
    FSQRTSo	= 730,
    FSQRTo	= 731,
    FSUB	= 732,
    FSUBS	= 733,
    FSUBSo	= 734,
    FSUBo	= 735,
    FTDIV	= 736,
    FTSQRT	= 737,
    GETtlsADDR	= 738,
    GETtlsADDR32	= 739,
    GETtlsldADDR	= 740,
    GETtlsldADDR32	= 741,
    HRFID	= 742,
    ICBI	= 743,
    ICBLC	= 744,
    ICBLQ	= 745,
    ICBT	= 746,
    ICBTLS	= 747,
    ICCCI	= 748,
    INSLWI	= 749,
    INSLWIo	= 750,
    INSRDI	= 751,
    INSRDIo	= 752,
    INSRWI	= 753,
    INSRWIo	= 754,
    ISEL	= 755,
    ISEL8	= 756,
    ISYNC	= 757,
    LA	= 758,
    LAx	= 759,
    LBARX	= 760,
    LBARXL	= 761,
    LBZ	= 762,
    LBZ8	= 763,
    LBZCIX	= 764,
    LBZU	= 765,
    LBZU8	= 766,
    LBZUX	= 767,
    LBZUX8	= 768,
    LBZX	= 769,
    LBZX8	= 770,
    LD	= 771,
    LDARX	= 772,
    LDARXL	= 773,
    LDAT	= 774,
    LDBRX	= 775,
    LDCIX	= 776,
    LDMX	= 777,
    LDU	= 778,
    LDUX	= 779,
    LDX	= 780,
    LDgotTprelL	= 781,
    LDgotTprelL32	= 782,
    LDtoc	= 783,
    LDtocBA	= 784,
    LDtocCPT	= 785,
    LDtocJTI	= 786,
    LDtocL	= 787,
    LFD	= 788,
    LFDU	= 789,
    LFDUX	= 790,
    LFDX	= 791,
    LFIWAX	= 792,
    LFIWZX	= 793,
    LFS	= 794,
    LFSU	= 795,
    LFSUX	= 796,
    LFSX	= 797,
    LHA	= 798,
    LHA8	= 799,
    LHARX	= 800,
    LHARXL	= 801,
    LHAU	= 802,
    LHAU8	= 803,
    LHAUX	= 804,
    LHAUX8	= 805,
    LHAX	= 806,
    LHAX8	= 807,
    LHBRX	= 808,
    LHBRX8	= 809,
    LHZ	= 810,
    LHZ8	= 811,
    LHZCIX	= 812,
    LHZU	= 813,
    LHZU8	= 814,
    LHZUX	= 815,
    LHZUX8	= 816,
    LHZX	= 817,
    LHZX8	= 818,
    LI	= 819,
    LI8	= 820,
    LIS	= 821,
    LIS8	= 822,
    LMW	= 823,
    LSWI	= 824,
    LVEBX	= 825,
    LVEHX	= 826,
    LVEWX	= 827,
    LVSL	= 828,
    LVSR	= 829,
    LVX	= 830,
    LVXL	= 831,
    LWA	= 832,
    LWARX	= 833,
    LWARXL	= 834,
    LWAT	= 835,
    LWAUX	= 836,
    LWAX	= 837,
    LWAX_32	= 838,
    LWA_32	= 839,
    LWBRX	= 840,
    LWBRX8	= 841,
    LWZ	= 842,
    LWZ8	= 843,
    LWZCIX	= 844,
    LWZU	= 845,
    LWZU8	= 846,
    LWZUX	= 847,
    LWZUX8	= 848,
    LWZX	= 849,
    LWZX8	= 850,
    LWZtoc	= 851,
    LXSD	= 852,
    LXSDX	= 853,
    LXSIBZX	= 854,
    LXSIHZX	= 855,
    LXSIWAX	= 856,
    LXSIWZX	= 857,
    LXSSP	= 858,
    LXSSPX	= 859,
    LXV	= 860,
    LXVB16X	= 861,
    LXVD2X	= 862,
    LXVDSX	= 863,
    LXVH8X	= 864,
    LXVL	= 865,
    LXVLL	= 866,
    LXVW4X	= 867,
    LXVWSX	= 868,
    LXVX	= 869,
    MBAR	= 870,
    MCRF	= 871,
    MCRFS	= 872,
    MCRXRX	= 873,
    MFBHRBE	= 874,
    MFCR	= 875,
    MFCR8	= 876,
    MFCTR	= 877,
    MFCTR8	= 878,
    MFDCR	= 879,
    MFFS	= 880,
    MFFSo	= 881,
    MFLR	= 882,
    MFLR8	= 883,
    MFMSR	= 884,
    MFOCRF	= 885,
    MFOCRF8	= 886,
    MFPMR	= 887,
    MFSPR	= 888,
    MFSPR8	= 889,
    MFSR	= 890,
    MFSRIN	= 891,
    MFTB	= 892,
    MFTB8	= 893,
    MFVRD	= 894,
    MFVRSAVE	= 895,
    MFVRSAVEv	= 896,
    MFVSCR	= 897,
    MFVSRD	= 898,
    MFVSRLD	= 899,
    MFVSRWZ	= 900,
    MSGSYNC	= 901,
    MSYNC	= 902,
    MTCRF	= 903,
    MTCRF8	= 904,
    MTCTR	= 905,
    MTCTR8	= 906,
    MTCTR8loop	= 907,
    MTCTRloop	= 908,
    MTDCR	= 909,
    MTFSB0	= 910,
    MTFSB1	= 911,
    MTFSF	= 912,
    MTFSFI	= 913,
    MTFSFIo	= 914,
    MTFSFb	= 915,
    MTFSFo	= 916,
    MTLR	= 917,
    MTLR8	= 918,
    MTMSR	= 919,
    MTMSRD	= 920,
    MTOCRF	= 921,
    MTOCRF8	= 922,
    MTPMR	= 923,
    MTSPR	= 924,
    MTSPR8	= 925,
    MTSR	= 926,
    MTSRIN	= 927,
    MTVRSAVE	= 928,
    MTVRSAVEv	= 929,
    MTVSCR	= 930,
    MTVSRD	= 931,
    MTVSRDD	= 932,
    MTVSRWA	= 933,
    MTVSRWS	= 934,
    MTVSRWZ	= 935,
    MULHD	= 936,
    MULHDU	= 937,
    MULHDUo	= 938,
    MULHDo	= 939,
    MULHW	= 940,
    MULHWU	= 941,
    MULHWUo	= 942,
    MULHWo	= 943,
    MULLD	= 944,
    MULLDo	= 945,
    MULLI	= 946,
    MULLI8	= 947,
    MULLW	= 948,
    MULLWo	= 949,
    MoveGOTtoLR	= 950,
    MovePCtoLR	= 951,
    MovePCtoLR8	= 952,
    NAND	= 953,
    NAND8	= 954,
    NAND8o	= 955,
    NANDo	= 956,
    NAP	= 957,
    NEG	= 958,
    NEG8	= 959,
    NEG8o	= 960,
    NEGo	= 961,
    NOP	= 962,
    NOP_GT_PWR6	= 963,
    NOP_GT_PWR7	= 964,
    NOR	= 965,
    NOR8	= 966,
    NOR8o	= 967,
    NORo	= 968,
    OR	= 969,
    OR8	= 970,
    OR8o	= 971,
    ORC	= 972,
    ORC8	= 973,
    ORC8o	= 974,
    ORCo	= 975,
    ORI	= 976,
    ORI8	= 977,
    ORIS	= 978,
    ORIS8	= 979,
    ORo	= 980,
    POPCNTD	= 981,
    POPCNTW	= 982,
    PPC32GOT	= 983,
    PPC32PICGOT	= 984,
    QVALIGNI	= 985,
    QVALIGNIb	= 986,
    QVALIGNIs	= 987,
    QVESPLATI	= 988,
    QVESPLATIb	= 989,
    QVESPLATIs	= 990,
    QVFABS	= 991,
    QVFABSs	= 992,
    QVFADD	= 993,
    QVFADDS	= 994,
    QVFADDSs	= 995,
    QVFCFID	= 996,
    QVFCFIDS	= 997,
    QVFCFIDU	= 998,
    QVFCFIDUS	= 999,
    QVFCFIDb	= 1000,
    QVFCMPEQ	= 1001,
    QVFCMPEQb	= 1002,
    QVFCMPEQbs	= 1003,
    QVFCMPGT	= 1004,
    QVFCMPGTb	= 1005,
    QVFCMPGTbs	= 1006,
    QVFCMPLT	= 1007,
    QVFCMPLTb	= 1008,
    QVFCMPLTbs	= 1009,
    QVFCPSGN	= 1010,
    QVFCPSGNs	= 1011,
    QVFCTID	= 1012,
    QVFCTIDU	= 1013,
    QVFCTIDUZ	= 1014,
    QVFCTIDZ	= 1015,
    QVFCTIDb	= 1016,
    QVFCTIW	= 1017,
    QVFCTIWU	= 1018,
    QVFCTIWUZ	= 1019,
    QVFCTIWZ	= 1020,
    QVFLOGICAL	= 1021,
    QVFLOGICALb	= 1022,
    QVFLOGICALs	= 1023,
    QVFMADD	= 1024,
    QVFMADDS	= 1025,
    QVFMADDSs	= 1026,
    QVFMR	= 1027,
    QVFMRb	= 1028,
    QVFMRs	= 1029,
    QVFMSUB	= 1030,
    QVFMSUBS	= 1031,
    QVFMSUBSs	= 1032,
    QVFMUL	= 1033,
    QVFMULS	= 1034,
    QVFMULSs	= 1035,
    QVFNABS	= 1036,
    QVFNABSs	= 1037,
    QVFNEG	= 1038,
    QVFNEGs	= 1039,
    QVFNMADD	= 1040,
    QVFNMADDS	= 1041,
    QVFNMADDSs	= 1042,
    QVFNMSUB	= 1043,
    QVFNMSUBS	= 1044,
    QVFNMSUBSs	= 1045,
    QVFPERM	= 1046,
    QVFPERMs	= 1047,
    QVFRE	= 1048,
    QVFRES	= 1049,
    QVFRESs	= 1050,
    QVFRIM	= 1051,
    QVFRIMs	= 1052,
    QVFRIN	= 1053,
    QVFRINs	= 1054,
    QVFRIP	= 1055,
    QVFRIPs	= 1056,
    QVFRIZ	= 1057,
    QVFRIZs	= 1058,
    QVFRSP	= 1059,
    QVFRSPs	= 1060,
    QVFRSQRTE	= 1061,
    QVFRSQRTES	= 1062,
    QVFRSQRTESs	= 1063,
    QVFSEL	= 1064,
    QVFSELb	= 1065,
    QVFSELbb	= 1066,
    QVFSELbs	= 1067,
    QVFSUB	= 1068,
    QVFSUBS	= 1069,
    QVFSUBSs	= 1070,
    QVFTSTNAN	= 1071,
    QVFTSTNANb	= 1072,
    QVFTSTNANbs	= 1073,
    QVFXMADD	= 1074,
    QVFXMADDS	= 1075,
    QVFXMUL	= 1076,
    QVFXMULS	= 1077,
    QVFXXCPNMADD	= 1078,
    QVFXXCPNMADDS	= 1079,
    QVFXXMADD	= 1080,
    QVFXXMADDS	= 1081,
    QVFXXNPMADD	= 1082,
    QVFXXNPMADDS	= 1083,
    QVGPCI	= 1084,
    QVLFCDUX	= 1085,
    QVLFCDUXA	= 1086,
    QVLFCDX	= 1087,
    QVLFCDXA	= 1088,
    QVLFCSUX	= 1089,
    QVLFCSUXA	= 1090,
    QVLFCSX	= 1091,
    QVLFCSXA	= 1092,
    QVLFCSXs	= 1093,
    QVLFDUX	= 1094,
    QVLFDUXA	= 1095,
    QVLFDX	= 1096,
    QVLFDXA	= 1097,
    QVLFDXb	= 1098,
    QVLFIWAX	= 1099,
    QVLFIWAXA	= 1100,
    QVLFIWZX	= 1101,
    QVLFIWZXA	= 1102,
    QVLFSUX	= 1103,
    QVLFSUXA	= 1104,
    QVLFSX	= 1105,
    QVLFSXA	= 1106,
    QVLFSXb	= 1107,
    QVLFSXs	= 1108,
    QVLPCLDX	= 1109,
    QVLPCLSX	= 1110,
    QVLPCLSXint	= 1111,
    QVLPCRDX	= 1112,
    QVLPCRSX	= 1113,
    QVSTFCDUX	= 1114,
    QVSTFCDUXA	= 1115,
    QVSTFCDUXI	= 1116,
    QVSTFCDUXIA	= 1117,
    QVSTFCDX	= 1118,
    QVSTFCDXA	= 1119,
    QVSTFCDXI	= 1120,
    QVSTFCDXIA	= 1121,
    QVSTFCSUX	= 1122,
    QVSTFCSUXA	= 1123,
    QVSTFCSUXI	= 1124,
    QVSTFCSUXIA	= 1125,
    QVSTFCSX	= 1126,
    QVSTFCSXA	= 1127,
    QVSTFCSXI	= 1128,
    QVSTFCSXIA	= 1129,
    QVSTFCSXs	= 1130,
    QVSTFDUX	= 1131,
    QVSTFDUXA	= 1132,
    QVSTFDUXI	= 1133,
    QVSTFDUXIA	= 1134,
    QVSTFDX	= 1135,
    QVSTFDXA	= 1136,
    QVSTFDXI	= 1137,
    QVSTFDXIA	= 1138,
    QVSTFDXb	= 1139,
    QVSTFIWX	= 1140,
    QVSTFIWXA	= 1141,
    QVSTFSUX	= 1142,
    QVSTFSUXA	= 1143,
    QVSTFSUXI	= 1144,
    QVSTFSUXIA	= 1145,
    QVSTFSUXs	= 1146,
    QVSTFSX	= 1147,
    QVSTFSXA	= 1148,
    QVSTFSXI	= 1149,
    QVSTFSXIA	= 1150,
    QVSTFSXs	= 1151,
    RESTORE_CR	= 1152,
    RESTORE_CRBIT	= 1153,
    RESTORE_VRSAVE	= 1154,
    RFCI	= 1155,
    RFDI	= 1156,
    RFEBB	= 1157,
    RFI	= 1158,
    RFID	= 1159,
    RFMCI	= 1160,
    RLDCL	= 1161,
    RLDCLo	= 1162,
    RLDCR	= 1163,
    RLDCRo	= 1164,
    RLDIC	= 1165,
    RLDICL	= 1166,
    RLDICL_32_64	= 1167,
    RLDICLo	= 1168,
    RLDICR	= 1169,
    RLDICRo	= 1170,
    RLDICo	= 1171,
    RLDIMI	= 1172,
    RLDIMIo	= 1173,
    RLWIMI	= 1174,
    RLWIMI8	= 1175,
    RLWIMI8o	= 1176,
    RLWIMIbm	= 1177,
    RLWIMIo	= 1178,
    RLWIMIobm	= 1179,
    RLWINM	= 1180,
    RLWINM8	= 1181,
    RLWINM8o	= 1182,
    RLWINMbm	= 1183,
    RLWINMo	= 1184,
    RLWINMobm	= 1185,
    RLWNM	= 1186,
    RLWNM8	= 1187,
    RLWNM8o	= 1188,
    RLWNMbm	= 1189,
    RLWNMo	= 1190,
    RLWNMobm	= 1191,
    ROTRDI	= 1192,
    ROTRDIo	= 1193,
    ROTRWI	= 1194,
    ROTRWIo	= 1195,
    ReadTB	= 1196,
    SC	= 1197,
    SELECT_CC_F4	= 1198,
    SELECT_CC_F8	= 1199,
    SELECT_CC_I4	= 1200,
    SELECT_CC_I8	= 1201,
    SELECT_CC_QBRC	= 1202,
    SELECT_CC_QFRC	= 1203,
    SELECT_CC_QSRC	= 1204,
    SELECT_CC_VRRC	= 1205,
    SELECT_CC_VSFRC	= 1206,
    SELECT_CC_VSRC	= 1207,
    SELECT_CC_VSSRC	= 1208,
    SELECT_F4	= 1209,
    SELECT_F8	= 1210,
    SELECT_I4	= 1211,
    SELECT_I8	= 1212,
    SELECT_QBRC	= 1213,
    SELECT_QFRC	= 1214,
    SELECT_QSRC	= 1215,
    SELECT_VRRC	= 1216,
    SELECT_VSFRC	= 1217,
    SELECT_VSRC	= 1218,
    SELECT_VSSRC	= 1219,
    SLBIA	= 1220,
    SLBIE	= 1221,
    SLBIEG	= 1222,
    SLBMFEE	= 1223,
    SLBMFEV	= 1224,
    SLBMTE	= 1225,
    SLBSYNC	= 1226,
    SLD	= 1227,
    SLDI	= 1228,
    SLDIo	= 1229,
    SLDo	= 1230,
    SLW	= 1231,
    SLW8	= 1232,
    SLW8o	= 1233,
    SLWI	= 1234,
    SLWIo	= 1235,
    SLWo	= 1236,
    SPILL_CR	= 1237,
    SPILL_CRBIT	= 1238,
    SPILL_VRSAVE	= 1239,
    SRAD	= 1240,
    SRADI	= 1241,
    SRADIo	= 1242,
    SRADo	= 1243,
    SRAW	= 1244,
    SRAWI	= 1245,
    SRAWIo	= 1246,
    SRAWo	= 1247,
    SRD	= 1248,
    SRDI	= 1249,
    SRDIo	= 1250,
    SRDo	= 1251,
    SRW	= 1252,
    SRW8	= 1253,
    SRW8o	= 1254,
    SRWI	= 1255,
    SRWIo	= 1256,
    SRWo	= 1257,
    STB	= 1258,
    STB8	= 1259,
    STBCIX	= 1260,
    STBCX	= 1261,
    STBU	= 1262,
    STBU8	= 1263,
    STBUX	= 1264,
    STBUX8	= 1265,
    STBX	= 1266,
    STBX8	= 1267,
    STD	= 1268,
    STDAT	= 1269,
    STDBRX	= 1270,
    STDCIX	= 1271,
    STDCX	= 1272,
    STDU	= 1273,
    STDUX	= 1274,
    STDX	= 1275,
    STFD	= 1276,
    STFDU	= 1277,
    STFDUX	= 1278,
    STFDX	= 1279,
    STFIWX	= 1280,
    STFS	= 1281,
    STFSU	= 1282,
    STFSUX	= 1283,
    STFSX	= 1284,
    STH	= 1285,
    STH8	= 1286,
    STHBRX	= 1287,
    STHCIX	= 1288,
    STHCX	= 1289,
    STHU	= 1290,
    STHU8	= 1291,
    STHUX	= 1292,
    STHUX8	= 1293,
    STHX	= 1294,
    STHX8	= 1295,
    STMW	= 1296,
    STOP	= 1297,
    STSWI	= 1298,
    STVEBX	= 1299,
    STVEHX	= 1300,
    STVEWX	= 1301,
    STVX	= 1302,
    STVXL	= 1303,
    STW	= 1304,
    STW8	= 1305,
    STWAT	= 1306,
    STWBRX	= 1307,
    STWCIX	= 1308,
    STWCX	= 1309,
    STWU	= 1310,
    STWU8	= 1311,
    STWUX	= 1312,
    STWUX8	= 1313,
    STWX	= 1314,
    STWX8	= 1315,
    STXSD	= 1316,
    STXSDX	= 1317,
    STXSIBX	= 1318,
    STXSIBXv	= 1319,
    STXSIHX	= 1320,
    STXSIHXv	= 1321,
    STXSIWX	= 1322,
    STXSSP	= 1323,
    STXSSPX	= 1324,
    STXV	= 1325,
    STXVB16X	= 1326,
    STXVD2X	= 1327,
    STXVH8X	= 1328,
    STXVL	= 1329,
    STXVLL	= 1330,
    STXVW4X	= 1331,
    STXVX	= 1332,
    SUBF	= 1333,
    SUBF8	= 1334,
    SUBF8o	= 1335,
    SUBFC	= 1336,
    SUBFC8	= 1337,
    SUBFC8o	= 1338,
    SUBFCo	= 1339,
    SUBFE	= 1340,
    SUBFE8	= 1341,
    SUBFE8o	= 1342,
    SUBFEo	= 1343,
    SUBFIC	= 1344,
    SUBFIC8	= 1345,
    SUBFME	= 1346,
    SUBFME8	= 1347,
    SUBFME8o	= 1348,
    SUBFMEo	= 1349,
    SUBFZE	= 1350,
    SUBFZE8	= 1351,
    SUBFZE8o	= 1352,
    SUBFZEo	= 1353,
    SUBFo	= 1354,
    SUBI	= 1355,
    SUBIC	= 1356,
    SUBICo	= 1357,
    SUBIS	= 1358,
    SYNC	= 1359,
    TABORT	= 1360,
    TABORTDC	= 1361,
    TABORTDCI	= 1362,
    TABORTWC	= 1363,
    TABORTWCI	= 1364,
    TAILB	= 1365,
    TAILB8	= 1366,
    TAILBA	= 1367,
    TAILBA8	= 1368,
    TAILBCTR	= 1369,
    TAILBCTR8	= 1370,
    TBEGIN	= 1371,
    TCHECK	= 1372,
    TCHECK_RET	= 1373,
    TCRETURNai	= 1374,
    TCRETURNai8	= 1375,
    TCRETURNdi	= 1376,
    TCRETURNdi8	= 1377,
    TCRETURNri	= 1378,
    TCRETURNri8	= 1379,
    TD	= 1380,
    TDI	= 1381,
    TEND	= 1382,
    TLBIA	= 1383,
    TLBIE	= 1384,
    TLBIEL	= 1385,
    TLBIVAX	= 1386,
    TLBLD	= 1387,
    TLBLI	= 1388,
    TLBRE	= 1389,
    TLBRE2	= 1390,
    TLBSX	= 1391,
    TLBSX2	= 1392,
    TLBSX2D	= 1393,
    TLBSYNC	= 1394,
    TLBWE	= 1395,
    TLBWE2	= 1396,
    TRAP	= 1397,
    TRECHKPT	= 1398,
    TRECLAIM	= 1399,
    TSR	= 1400,
    TW	= 1401,
    TWI	= 1402,
    UPDATE_VRSAVE	= 1403,
    UpdateGBR	= 1404,
    VABSDUB	= 1405,
    VABSDUH	= 1406,
    VABSDUW	= 1407,
    VADDCUQ	= 1408,
    VADDCUW	= 1409,
    VADDECUQ	= 1410,
    VADDEUQM	= 1411,
    VADDFP	= 1412,
    VADDSBS	= 1413,
    VADDSHS	= 1414,
    VADDSWS	= 1415,
    VADDUBM	= 1416,
    VADDUBS	= 1417,
    VADDUDM	= 1418,
    VADDUHM	= 1419,
    VADDUHS	= 1420,
    VADDUQM	= 1421,
    VADDUWM	= 1422,
    VADDUWS	= 1423,
    VAND	= 1424,
    VANDC	= 1425,
    VAVGSB	= 1426,
    VAVGSH	= 1427,
    VAVGSW	= 1428,
    VAVGUB	= 1429,
    VAVGUH	= 1430,
    VAVGUW	= 1431,
    VBPERMD	= 1432,
    VBPERMQ	= 1433,
    VCFSX	= 1434,
    VCFSX_0	= 1435,
    VCFUX	= 1436,
    VCFUX_0	= 1437,
    VCIPHER	= 1438,
    VCIPHERLAST	= 1439,
    VCLZB	= 1440,
    VCLZD	= 1441,
    VCLZH	= 1442,
    VCLZLSBB	= 1443,
    VCLZW	= 1444,
    VCMPBFP	= 1445,
    VCMPBFPo	= 1446,
    VCMPEQFP	= 1447,
    VCMPEQFPo	= 1448,
    VCMPEQUB	= 1449,
    VCMPEQUBo	= 1450,
    VCMPEQUD	= 1451,
    VCMPEQUDo	= 1452,
    VCMPEQUH	= 1453,
    VCMPEQUHo	= 1454,
    VCMPEQUW	= 1455,
    VCMPEQUWo	= 1456,
    VCMPGEFP	= 1457,
    VCMPGEFPo	= 1458,
    VCMPGTFP	= 1459,
    VCMPGTFPo	= 1460,
    VCMPGTSB	= 1461,
    VCMPGTSBo	= 1462,
    VCMPGTSD	= 1463,
    VCMPGTSDo	= 1464,
    VCMPGTSH	= 1465,
    VCMPGTSHo	= 1466,
    VCMPGTSW	= 1467,
    VCMPGTSWo	= 1468,
    VCMPGTUB	= 1469,
    VCMPGTUBo	= 1470,
    VCMPGTUD	= 1471,
    VCMPGTUDo	= 1472,
    VCMPGTUH	= 1473,
    VCMPGTUHo	= 1474,
    VCMPGTUW	= 1475,
    VCMPGTUWo	= 1476,
    VCMPNEB	= 1477,
    VCMPNEBo	= 1478,
    VCMPNEH	= 1479,
    VCMPNEHo	= 1480,
    VCMPNEW	= 1481,
    VCMPNEWo	= 1482,
    VCMPNEZB	= 1483,
    VCMPNEZBo	= 1484,
    VCMPNEZH	= 1485,
    VCMPNEZHo	= 1486,
    VCMPNEZW	= 1487,
    VCMPNEZWo	= 1488,
    VCTSXS	= 1489,
    VCTSXS_0	= 1490,
    VCTUXS	= 1491,
    VCTUXS_0	= 1492,
    VCTZB	= 1493,
    VCTZD	= 1494,
    VCTZH	= 1495,
    VCTZLSBB	= 1496,
    VCTZW	= 1497,
    VEQV	= 1498,
    VEXPTEFP	= 1499,
    VEXTRACTD	= 1500,
    VEXTRACTUB	= 1501,
    VEXTRACTUH	= 1502,
    VEXTRACTUW	= 1503,
    VEXTSB2D	= 1504,
    VEXTSB2Ds	= 1505,
    VEXTSB2W	= 1506,
    VEXTSB2Ws	= 1507,
    VEXTSH2D	= 1508,
    VEXTSH2Ds	= 1509,
    VEXTSH2W	= 1510,
    VEXTSH2Ws	= 1511,
    VEXTSW2D	= 1512,
    VEXTSW2Ds	= 1513,
    VEXTUBLX	= 1514,
    VEXTUBRX	= 1515,
    VEXTUHLX	= 1516,
    VEXTUHRX	= 1517,
    VEXTUWLX	= 1518,
    VEXTUWRX	= 1519,
    VGBBD	= 1520,
    VINSERTB	= 1521,
    VINSERTD	= 1522,
    VINSERTH	= 1523,
    VINSERTW	= 1524,
    VLOGEFP	= 1525,
    VMADDFP	= 1526,
    VMAXFP	= 1527,
    VMAXSB	= 1528,
    VMAXSD	= 1529,
    VMAXSH	= 1530,
    VMAXSW	= 1531,
    VMAXUB	= 1532,
    VMAXUD	= 1533,
    VMAXUH	= 1534,
    VMAXUW	= 1535,
    VMHADDSHS	= 1536,
    VMHRADDSHS	= 1537,
    VMINFP	= 1538,
    VMINSB	= 1539,
    VMINSD	= 1540,
    VMINSH	= 1541,
    VMINSW	= 1542,
    VMINUB	= 1543,
    VMINUD	= 1544,
    VMINUH	= 1545,
    VMINUW	= 1546,
    VMLADDUHM	= 1547,
    VMRGEW	= 1548,
    VMRGHB	= 1549,
    VMRGHH	= 1550,
    VMRGHW	= 1551,
    VMRGLB	= 1552,
    VMRGLH	= 1553,
    VMRGLW	= 1554,
    VMRGOW	= 1555,
    VMSUMMBM	= 1556,
    VMSUMSHM	= 1557,
    VMSUMSHS	= 1558,
    VMSUMUBM	= 1559,
    VMSUMUHM	= 1560,
    VMSUMUHS	= 1561,
    VMUL10CUQ	= 1562,
    VMUL10ECUQ	= 1563,
    VMUL10EUQ	= 1564,
    VMUL10UQ	= 1565,
    VMULESB	= 1566,
    VMULESH	= 1567,
    VMULESW	= 1568,
    VMULEUB	= 1569,
    VMULEUH	= 1570,
    VMULEUW	= 1571,
    VMULOSB	= 1572,
    VMULOSH	= 1573,
    VMULOSW	= 1574,
    VMULOUB	= 1575,
    VMULOUH	= 1576,
    VMULOUW	= 1577,
    VMULUWM	= 1578,
    VNAND	= 1579,
    VNCIPHER	= 1580,
    VNCIPHERLAST	= 1581,
    VNEGD	= 1582,
    VNEGW	= 1583,
    VNMSUBFP	= 1584,
    VNOR	= 1585,
    VOR	= 1586,
    VORC	= 1587,
    VPERM	= 1588,
    VPERMR	= 1589,
    VPERMXOR	= 1590,
    VPKPX	= 1591,
    VPKSDSS	= 1592,
    VPKSDUS	= 1593,
    VPKSHSS	= 1594,
    VPKSHUS	= 1595,
    VPKSWSS	= 1596,
    VPKSWUS	= 1597,
    VPKUDUM	= 1598,
    VPKUDUS	= 1599,
    VPKUHUM	= 1600,
    VPKUHUS	= 1601,
    VPKUWUM	= 1602,
    VPKUWUS	= 1603,
    VPMSUMB	= 1604,
    VPMSUMD	= 1605,
    VPMSUMH	= 1606,
    VPMSUMW	= 1607,
    VPOPCNTB	= 1608,
    VPOPCNTD	= 1609,
    VPOPCNTH	= 1610,
    VPOPCNTW	= 1611,
    VPRTYBD	= 1612,
    VPRTYBQ	= 1613,
    VPRTYBW	= 1614,
    VREFP	= 1615,
    VRFIM	= 1616,
    VRFIN	= 1617,
    VRFIP	= 1618,
    VRFIZ	= 1619,
    VRLB	= 1620,
    VRLD	= 1621,
    VRLDMI	= 1622,
    VRLDNM	= 1623,
    VRLH	= 1624,
    VRLW	= 1625,
    VRLWMI	= 1626,
    VRLWNM	= 1627,
    VRSQRTEFP	= 1628,
    VSBOX	= 1629,
    VSEL	= 1630,
    VSHASIGMAD	= 1631,
    VSHASIGMAW	= 1632,
    VSL	= 1633,
    VSLB	= 1634,
    VSLD	= 1635,
    VSLDOI	= 1636,
    VSLH	= 1637,
    VSLO	= 1638,
    VSLV	= 1639,
    VSLW	= 1640,
    VSPLTB	= 1641,
    VSPLTBs	= 1642,
    VSPLTH	= 1643,
    VSPLTHs	= 1644,
    VSPLTISB	= 1645,
    VSPLTISH	= 1646,
    VSPLTISW	= 1647,
    VSPLTW	= 1648,
    VSR	= 1649,
    VSRAB	= 1650,
    VSRAD	= 1651,
    VSRAH	= 1652,
    VSRAW	= 1653,
    VSRB	= 1654,
    VSRD	= 1655,
    VSRH	= 1656,
    VSRO	= 1657,
    VSRV	= 1658,
    VSRW	= 1659,
    VSUBCUQ	= 1660,
    VSUBCUW	= 1661,
    VSUBECUQ	= 1662,
    VSUBEUQM	= 1663,
    VSUBFP	= 1664,
    VSUBSBS	= 1665,
    VSUBSHS	= 1666,
    VSUBSWS	= 1667,
    VSUBUBM	= 1668,
    VSUBUBS	= 1669,
    VSUBUDM	= 1670,
    VSUBUHM	= 1671,
    VSUBUHS	= 1672,
    VSUBUQM	= 1673,
    VSUBUWM	= 1674,
    VSUBUWS	= 1675,
    VSUM2SWS	= 1676,
    VSUM4SBS	= 1677,
    VSUM4SHS	= 1678,
    VSUM4UBS	= 1679,
    VSUMSWS	= 1680,
    VUPKHPX	= 1681,
    VUPKHSB	= 1682,
    VUPKHSH	= 1683,
    VUPKHSW	= 1684,
    VUPKLPX	= 1685,
    VUPKLSB	= 1686,
    VUPKLSH	= 1687,
    VUPKLSW	= 1688,
    VXOR	= 1689,
    V_SET0	= 1690,
    V_SET0B	= 1691,
    V_SET0H	= 1692,
    V_SETALLONES	= 1693,
    V_SETALLONESB	= 1694,
    V_SETALLONESH	= 1695,
    WAIT	= 1696,
    WRTEE	= 1697,
    WRTEEI	= 1698,
    XOR	= 1699,
    XOR8	= 1700,
    XOR8o	= 1701,
    XORI	= 1702,
    XORI8	= 1703,
    XORIS	= 1704,
    XORIS8	= 1705,
    XORo	= 1706,
    XSABSDP	= 1707,
    XSABSQP	= 1708,
    XSADDDP	= 1709,
    XSADDQP	= 1710,
    XSADDQPO	= 1711,
    XSADDSP	= 1712,
    XSCMPEQDP	= 1713,
    XSCMPEXPDP	= 1714,
    XSCMPEXPQP	= 1715,
    XSCMPGEDP	= 1716,
    XSCMPGTDP	= 1717,
    XSCMPNEDP	= 1718,
    XSCMPODP	= 1719,
    XSCMPOQP	= 1720,
    XSCMPUDP	= 1721,
    XSCMPUQP	= 1722,
    XSCPSGNDP	= 1723,
    XSCPSGNQP	= 1724,
    XSCVDPHP	= 1725,
    XSCVDPQP	= 1726,
    XSCVDPSP	= 1727,
    XSCVDPSPN	= 1728,
    XSCVDPSXDS	= 1729,
    XSCVDPSXDSs	= 1730,
    XSCVDPSXWS	= 1731,
    XSCVDPSXWSs	= 1732,
    XSCVDPUXDS	= 1733,
    XSCVDPUXDSs	= 1734,
    XSCVDPUXWS	= 1735,
    XSCVDPUXWSs	= 1736,
    XSCVHPDP	= 1737,
    XSCVQPDP	= 1738,
    XSCVQPDPO	= 1739,
    XSCVQPSDZ	= 1740,
    XSCVQPSWZ	= 1741,
    XSCVQPUDZ	= 1742,
    XSCVQPUWZ	= 1743,
    XSCVSDQP	= 1744,
    XSCVSPDP	= 1745,
    XSCVSPDPN	= 1746,
    XSCVSXDDP	= 1747,
    XSCVSXDSP	= 1748,
    XSCVUDQP	= 1749,
    XSCVUXDDP	= 1750,
    XSCVUXDSP	= 1751,
    XSDIVDP	= 1752,
    XSDIVQP	= 1753,
    XSDIVQPO	= 1754,
    XSDIVSP	= 1755,
    XSIEXPDP	= 1756,
    XSIEXPQP	= 1757,
    XSMADDADP	= 1758,
    XSMADDASP	= 1759,
    XSMADDMDP	= 1760,
    XSMADDMSP	= 1761,
    XSMADDQP	= 1762,
    XSMADDQPO	= 1763,
    XSMAXCDP	= 1764,
    XSMAXDP	= 1765,
    XSMAXJDP	= 1766,
    XSMINCDP	= 1767,
    XSMINDP	= 1768,
    XSMINJDP	= 1769,
    XSMSUBADP	= 1770,
    XSMSUBASP	= 1771,
    XSMSUBMDP	= 1772,
    XSMSUBMSP	= 1773,
    XSMSUBQP	= 1774,
    XSMSUBQPO	= 1775,
    XSMULDP	= 1776,
    XSMULQP	= 1777,
    XSMULQPO	= 1778,
    XSMULSP	= 1779,
    XSNABSDP	= 1780,
    XSNABSQP	= 1781,
    XSNEGDP	= 1782,
    XSNEGQP	= 1783,
    XSNMADDADP	= 1784,
    XSNMADDASP	= 1785,
    XSNMADDMDP	= 1786,
    XSNMADDMSP	= 1787,
    XSNMADDQP	= 1788,
    XSNMADDQPO	= 1789,
    XSNMSUBADP	= 1790,
    XSNMSUBASP	= 1791,
    XSNMSUBMDP	= 1792,
    XSNMSUBMSP	= 1793,
    XSNMSUBQP	= 1794,
    XSNMSUBQPO	= 1795,
    XSRDPI	= 1796,
    XSRDPIC	= 1797,
    XSRDPIM	= 1798,
    XSRDPIP	= 1799,
    XSRDPIZ	= 1800,
    XSREDP	= 1801,
    XSRESP	= 1802,
    XSRQPI	= 1803,
    XSRQPIX	= 1804,
    XSRQPXP	= 1805,
    XSRSQRTEDP	= 1806,
    XSRSQRTESP	= 1807,
    XSSQRTDP	= 1808,
    XSSQRTQP	= 1809,
    XSSQRTQPO	= 1810,
    XSSQRTSP	= 1811,
    XSSUBDP	= 1812,
    XSSUBQP	= 1813,
    XSSUBQPO	= 1814,
    XSSUBSP	= 1815,
    XSTDIVDP	= 1816,
    XSTSQRTDP	= 1817,
    XSTSTDCDP	= 1818,
    XSTSTDCQP	= 1819,
    XSTSTDCSP	= 1820,
    XSXEXPDP	= 1821,
    XSXEXPQP	= 1822,
    XSXSIGDP	= 1823,
    XSXSIGQP	= 1824,
    XVABSDP	= 1825,
    XVABSSP	= 1826,
    XVADDDP	= 1827,
    XVADDSP	= 1828,
    XVCMPEQDP	= 1829,
    XVCMPEQDPo	= 1830,
    XVCMPEQSP	= 1831,
    XVCMPEQSPo	= 1832,
    XVCMPGEDP	= 1833,
    XVCMPGEDPo	= 1834,
    XVCMPGESP	= 1835,
    XVCMPGESPo	= 1836,
    XVCMPGTDP	= 1837,
    XVCMPGTDPo	= 1838,
    XVCMPGTSP	= 1839,
    XVCMPGTSPo	= 1840,
    XVCMPNEDP	= 1841,
    XVCMPNEDPo	= 1842,
    XVCMPNESP	= 1843,
    XVCMPNESPo	= 1844,
    XVCPSGNDP	= 1845,
    XVCPSGNSP	= 1846,
    XVCVDPSP	= 1847,
    XVCVDPSXDS	= 1848,
    XVCVDPSXWS	= 1849,
    XVCVDPUXDS	= 1850,
    XVCVDPUXWS	= 1851,
    XVCVHPSP	= 1852,
    XVCVSPDP	= 1853,
    XVCVSPHP	= 1854,
    XVCVSPSXDS	= 1855,
    XVCVSPSXWS	= 1856,
    XVCVSPUXDS	= 1857,
    XVCVSPUXWS	= 1858,
    XVCVSXDDP	= 1859,
    XVCVSXDSP	= 1860,
    XVCVSXWDP	= 1861,
    XVCVSXWSP	= 1862,
    XVCVUXDDP	= 1863,
    XVCVUXDSP	= 1864,
    XVCVUXWDP	= 1865,
    XVCVUXWSP	= 1866,
    XVDIVDP	= 1867,
    XVDIVSP	= 1868,
    XVIEXPDP	= 1869,
    XVIEXPSP	= 1870,
    XVMADDADP	= 1871,
    XVMADDASP	= 1872,
    XVMADDMDP	= 1873,
    XVMADDMSP	= 1874,
    XVMAXDP	= 1875,
    XVMAXSP	= 1876,
    XVMINDP	= 1877,
    XVMINSP	= 1878,
    XVMSUBADP	= 1879,
    XVMSUBASP	= 1880,
    XVMSUBMDP	= 1881,
    XVMSUBMSP	= 1882,
    XVMULDP	= 1883,
    XVMULSP	= 1884,
    XVNABSDP	= 1885,
    XVNABSSP	= 1886,
    XVNEGDP	= 1887,
    XVNEGSP	= 1888,
    XVNMADDADP	= 1889,
    XVNMADDASP	= 1890,
    XVNMADDMDP	= 1891,
    XVNMADDMSP	= 1892,
    XVNMSUBADP	= 1893,
    XVNMSUBASP	= 1894,
    XVNMSUBMDP	= 1895,
    XVNMSUBMSP	= 1896,
    XVRDPI	= 1897,
    XVRDPIC	= 1898,
    XVRDPIM	= 1899,
    XVRDPIP	= 1900,
    XVRDPIZ	= 1901,
    XVREDP	= 1902,
    XVRESP	= 1903,
    XVRSPI	= 1904,
    XVRSPIC	= 1905,
    XVRSPIM	= 1906,
    XVRSPIP	= 1907,
    XVRSPIZ	= 1908,
    XVRSQRTEDP	= 1909,
    XVRSQRTESP	= 1910,
    XVSQRTDP	= 1911,
    XVSQRTSP	= 1912,
    XVSUBDP	= 1913,
    XVSUBSP	= 1914,
    XVTDIVDP	= 1915,
    XVTDIVSP	= 1916,
    XVTSQRTDP	= 1917,
    XVTSQRTSP	= 1918,
    XVTSTDCDP	= 1919,
    XVTSTDCSP	= 1920,
    XVXEXPDP	= 1921,
    XVXEXPSP	= 1922,
    XVXSIGDP	= 1923,
    XVXSIGSP	= 1924,
    XXBRD	= 1925,
    XXBRH	= 1926,
    XXBRQ	= 1927,
    XXBRW	= 1928,
    XXEXTRACTUW	= 1929,
    XXINSERTW	= 1930,
    XXLAND	= 1931,
    XXLANDC	= 1932,
    XXLEQV	= 1933,
    XXLNAND	= 1934,
    XXLNOR	= 1935,
    XXLOR	= 1936,
    XXLORC	= 1937,
    XXLORf	= 1938,
    XXLXOR	= 1939,
    XXLXORdpz	= 1940,
    XXLXORspz	= 1941,
    XXLXORz	= 1942,
    XXMRGHW	= 1943,
    XXMRGLW	= 1944,
    XXPERM	= 1945,
    XXPERMDI	= 1946,
    XXPERMDIs	= 1947,
    XXPERMR	= 1948,
    XXSEL	= 1949,
    XXSLDWI	= 1950,
    XXSPLTIB	= 1951,
    XXSPLTW	= 1952,
    XXSPLTWs	= 1953,
    gBC	= 1954,
    gBCA	= 1955,
    gBCAat	= 1956,
    gBCCTR	= 1957,
    gBCCTRL	= 1958,
    gBCL	= 1959,
    gBCLA	= 1960,
    gBCLAat	= 1961,
    gBCLR	= 1962,
    gBCLRL	= 1963,
    gBCLat	= 1964,
    gBCat	= 1965,
    INSTRUCTION_LIST_END = 1966
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_IntSimple	= 1,
    IIC_IntGeneral	= 2,
    IIC_BrB	= 3,
    IIC_VecFP	= 4,
    IIC_IntCompare	= 5,
    IIC_SprABORT	= 6,
    IIC_LdStCOPY	= 7,
    IIC_LdStPASTE	= 8,
    IIC_BrCR	= 9,
    IIC_LdStDCBF	= 10,
    IIC_LdStLoad	= 11,
    IIC_IntDivD	= 12,
    IIC_IntDivW	= 13,
    IIC_FPGeneral	= 14,
    IIC_FPAddSub	= 15,
    IIC_FPCompare	= 16,
    IIC_FPDivD	= 17,
    IIC_FPDivS	= 18,
    IIC_FPFused	= 19,
    IIC_FPSqrtD	= 20,
    IIC_FPSqrtS	= 21,
    IIC_LdStICBI	= 22,
    IIC_LdStStore	= 23,
    IIC_IntISEL	= 24,
    IIC_SprISYNC	= 25,
    IIC_LdStLWARX	= 26,
    IIC_LdStLoadUpd	= 27,
    IIC_LdStLoadUpdX	= 28,
    IIC_LdStLD	= 29,
    IIC_LdStLDARX	= 30,
    IIC_LdStLDU	= 31,
    IIC_LdStLDUX	= 32,
    IIC_LdStLFD	= 33,
    IIC_LdStLFDU	= 34,
    IIC_LdStLFDUX	= 35,
    IIC_LdStLHA	= 36,
    IIC_LdStLHAU	= 37,
    IIC_LdStLHAUX	= 38,
    IIC_LdStLMW	= 39,
    IIC_LdStLWA	= 40,
    IIC_BrMCR	= 41,
    IIC_BrMCRX	= 42,
    IIC_SprMFCR	= 43,
    IIC_SprMFSPR	= 44,
    IIC_IntMFFS	= 45,
    IIC_SprMFMSR	= 46,
    IIC_SprMFCRF	= 47,
    IIC_SprMFPMR	= 48,
    IIC_SprMFSR	= 49,
    IIC_SprMFTB	= 50,
    IIC_VecGeneral	= 51,
    IIC_SprMSGSYNC	= 52,
    IIC_LdStSync	= 53,
    IIC_SprMTSPR	= 54,
    IIC_IntMTFSB0	= 55,
    IIC_SprMTMSR	= 56,
    IIC_SprMTMSRD	= 57,
    IIC_SprMTPMR	= 58,
    IIC_SprMTSR	= 59,
    IIC_IntMulHW	= 60,
    IIC_IntMulHWU	= 61,
    IIC_IntMulHD	= 62,
    IIC_IntMulLI	= 63,
    IIC_VecPerm	= 64,
    IIC_LdStSTFD	= 65,
    IIC_LdStSTFDU	= 66,
    IIC_SprRFI	= 67,
    IIC_IntRFID	= 68,
    IIC_IntRotateD	= 69,
    IIC_IntRotateDI	= 70,
    IIC_IntRotate	= 71,
    IIC_SprSLBIA	= 72,
    IIC_SprSLBIE	= 73,
    IIC_SprSLBIEG	= 74,
    IIC_SprSLBMFEE	= 75,
    IIC_SprSLBMFEV	= 76,
    IIC_SprSLBMTE	= 77,
    IIC_SprSLBSYNC	= 78,
    IIC_IntShift	= 79,
    IIC_LdStSTWCX	= 80,
    IIC_LdStStoreUpd	= 81,
    IIC_LdStSTD	= 82,
    IIC_LdStSTDCX	= 83,
    IIC_LdStSTDU	= 84,
    IIC_LdStSTDUX	= 85,
    IIC_SprSTOP	= 86,
    IIC_IntTrapD	= 87,
    IIC_SprTLBIA	= 88,
    IIC_SprTLBIE	= 89,
    IIC_SprTLBIEL	= 90,
    IIC_SprTLBSYNC	= 91,
    IIC_IntTrapW	= 92,
    IIC_VecFPCompare	= 93,
    VADDCUW_VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VSUBCUW_VXOR_V_SET0B_V_SET0H_V_SET0_XVABSDP_XVABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP	= 94,
    VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VEXTSB2D_VEXTSB2W_VEXTSH2D_VEXTSH2W_VEXTSW2D_VNAND_VNEGD_VNEGW_VORC_VPOPCNTB_VPOPCNTH_VPOPCNTW_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLEQV_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR	= 95,
    VCMPEQUB_VCMPEQUBo_VCMPEQUD_VCMPEQUDo_VCMPEQUH_VCMPEQUHo_VCMPEQUW_VCMPEQUWo_VCMPGTSB_VCMPGTSBo_VCMPGTSD_VCMPGTSDo_VCMPGTSH_VCMPGTSHo_VCMPGTSW_VCMPGTSWo_VCMPGTUB_VCMPGTUBo_VCMPGTUD_VCMPGTUDo_VCMPGTUH_VCMPGTUHo_VCMPGTUW_VCMPGTUWo_VCMPNEB_VCMPNEBo_VCMPNEH_VCMPNEHo_VCMPNEW_VCMPNEWo_VCMPNEZB_VCMPNEZBo_VCMPNEZH_VCMPNEZHo_VCMPNEZW_VCMPNEZWo	= 96,
    XXSEL	= 97,
    XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP_XSABSDP_XSCPSGNDP_XSIEXPDP_XSNABSDP_XSNEGDP_XSXEXPDP	= 98,
    VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VRLB_VRLD_VRLDMI_VRLDNM_VRLH_VRLW_VRLWMI_VRLWNM_VSHASIGMAD_VSHASIGMAW_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XSCVSPDPN_XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSTSTDCDP_XSTSTDCSP_XSXSIGDP_XVIEXPSP_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXEXPSP_XVXSIGDP_XVXSIGSP	= 99,
    VPOPCNTD_VPRTYBD_VPRTYBW_VSLD_VSRAD_VSRD	= 100,
    XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP_XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP	= 101,
    XVCMPEQDP_XVCMPEQDPo_XVCMPEQSP_XVCMPEQSPo_XVCMPGEDP_XVCMPGEDPo_XVCMPGESP_XVCMPGESPo_XVCMPGTDP_XVCMPGTDPo_XVCMPGTSP_XVCMPGTSPo	= 102,
    VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW	= 103,
    VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VBPERMD_VMAXFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINFP	= 104,
    VCMPBFP_VCMPBFPo_VCMPGTFP_VCMPGTFPo_VCMPEQFP_VCMPEQFPo_VCMPGEFP_VCMPGEFPo	= 105,
    VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS	= 106,
    VSUBFP_VMULUWM	= 107,
    XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP	= 108,
    XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXWS_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN	= 109,
    VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP	= 110,
    VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTB_VINSERTD_VINSERTH_VINSERTW_VPRTYBQ_VADDUQM_VSUBUQM	= 111,
    VSPLTB_VSPLTH_VSPLTISB_VSPLTISH_VSPLTISW_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSPLTIB_XXSPLTW	= 112,
    XSCMPEXPQP_XSCMPOQP_XSCMPUQP	= 113,
    XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPXP_XSSUBQP_XSSUBQPO	= 114,
    XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO	= 115,
    XSDIVQP_XSDIVQPO	= 116,
    XSSQRTQP_XSSQRTQPO	= 117,
    LXSDX_LXVD2X_LXSIWZX_LXV_LXSD	= 118,
    LFIWZX_LFDX_LFD	= 119,
    LXSSPX_LXSIWAX_LXSSP	= 120,
    LFIWAX_LFSX_LFS	= 121,
    LXVDSX_LXVW4X	= 122,
    STFS_STFD_STFIWX_STFSX_STFDX_STXSDX_STXSSPX_STXSIWX	= 123,
    STXVD2X_STXVW4X	= 124,
    DIVW_DIVWU	= 125,
    DIVWE_DIVWEU	= 126,
    DIVD_DIVDU	= 127,
    DIVDE_DIVDEU	= 128,
    DIVWEo_DIVWEUo	= 129,
    DIVDEo_DIVDEUo	= 130,
    SLD_SRD_SRAD	= 131,
    SRADI_RLDIC	= 132,
    RLDCL_RLDCR	= 133,
    RLDIMI_RLDICL_RLDICR_RLDICL_32_64	= 134,
    MTOCRF_MTOCRF8_MTCRF_MTCRF8	= 135,
    MCRF	= 136,
    MCRXRX	= 137,
    MCRFS	= 138,
    FDIV_XSDIVDP	= 139,
    FDIVS_XSDIVSP	= 140,
    XVDIVSP	= 141,
    XVDIVDP	= 142,
    FRSP_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRIMD_FRIMS_FRE_FRES_FRSQRTE_FRSQRTES_FMADDS_FMSUBS_FNMADDS_FNMSUBS_FSELD_FSELS_FADDS_FMULS_FSUBS_FCFID_FCTID_FCTIDZ_FCFIDU_FCFIDS_FCFIDUS_FCTIDUZ_FCTIWUZ_FCTIW_FCTIWZ	= 143,
    FMADD_FMSUB_FNMADD_FNMSUB_FMUL	= 144,
    FMR_FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS	= 145,
    FCMPUS_FCMPUD	= 146,
    LFSU	= 147,
    LFSUX	= 148,
    LFDU	= 149,
    LFDUX	= 150,
    SCHED_LIST_END = 151
  };
} // end Sched namespace
} // end PPC namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { PPC::CR0, 0 };
static const MCPhysReg ImplicitList2[] = { PPC::CARRY, 0 };
static const MCPhysReg ImplicitList3[] = { PPC::CARRY, PPC::CR0, 0 };
static const MCPhysReg ImplicitList4[] = { PPC::X0, PPC::X3, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList5[] = { PPC::R0, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList6[] = { PPC::R1, 0 };
static const MCPhysReg ImplicitList7[] = { PPC::CTR, 0 };
static const MCPhysReg ImplicitList8[] = { PPC::CTR8, 0 };
static const MCPhysReg ImplicitList9[] = { PPC::CTR, PPC::RM, 0 };
static const MCPhysReg ImplicitList10[] = { PPC::LR, 0 };
static const MCPhysReg ImplicitList11[] = { PPC::CTR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList12[] = { PPC::LR8, 0 };
static const MCPhysReg ImplicitList13[] = { PPC::RM, 0 };
static const MCPhysReg ImplicitList14[] = { PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList15[] = { PPC::CR6, 0 };
static const MCPhysReg ImplicitList16[] = { PPC::LR8, PPC::X2, 0 };
static const MCPhysReg ImplicitList17[] = { PPC::CTR, PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList18[] = { PPC::CTR8, PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList19[] = { PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList20[] = { PPC::CR1EQ, 0 };
static const MCPhysReg ImplicitList21[] = { PPC::X1, 0 };
static const MCPhysReg ImplicitList22[] = { PPC::CR1, 0 };
static const MCPhysReg ImplicitList23[] = { PPC::X0, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList24[] = { PPC::R0, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList25[] = { PPC::LR, PPC::CTR, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo92[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo93[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo101[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo105[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo203[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo204[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo207[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo209[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { PPC::CTRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { PPC::CTRRC8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo228[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo268[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };

extern const MCInstrDesc PPCInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #18 = FENTRY_CALL
  { 19,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #19 = PATCHPOINT
  { 20,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #20 = LOAD_STACK_GUARD
  { 21,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #21 = STATEPOINT
  { 22,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #22 = LOCAL_ESCAPE
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #23 = FAULTING_OP
  { 24,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #24 = PATCHABLE_OP
  { 25,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #25 = PATCHABLE_FUNCTION_ENTER
  { 26,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #26 = PATCHABLE_RET
  { 27,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #27 = PATCHABLE_FUNCTION_EXIT
  { 28,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #28 = PATCHABLE_TAIL_CALL
  { 29,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #29 = G_ADD
  { 30,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #30 = G_SUB
  { 31,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #31 = G_MUL
  { 32,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #32 = G_SDIV
  { 33,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #33 = G_UDIV
  { 34,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #34 = G_SREM
  { 35,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #35 = G_UREM
  { 36,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #36 = G_AND
  { 37,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #37 = G_OR
  { 38,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #38 = G_XOR
  { 39,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #39 = G_FRAME_INDEX
  { 40,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #40 = G_GLOBAL_VALUE
  { 41,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #41 = G_EXTRACT
  { 42,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #42 = G_UNMERGE_VALUES
  { 43,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #43 = G_INSERT
  { 44,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #44 = G_SEQUENCE
  { 45,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #45 = G_MERGE_VALUES
  { 46,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #46 = G_PTRTOINT
  { 47,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #47 = G_INTTOPTR
  { 48,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #48 = G_BITCAST
  { 49,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #49 = G_LOAD
  { 50,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #50 = G_STORE
  { 51,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #51 = G_BRCOND
  { 52,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #52 = G_BRINDIRECT
  { 53,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #53 = G_INTRINSIC
  { 54,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #54 = G_INTRINSIC_W_SIDE_EFFECTS
  { 55,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #55 = G_ANYEXT
  { 56,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #56 = G_TRUNC
  { 57,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #57 = G_CONSTANT
  { 58,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #58 = G_FCONSTANT
  { 59,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #59 = G_VASTART
  { 60,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #60 = G_VAARG
  { 61,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #61 = G_SEXT
  { 62,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #62 = G_ZEXT
  { 63,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #63 = G_SHL
  { 64,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #64 = G_LSHR
  { 65,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #65 = G_ASHR
  { 66,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #66 = G_ICMP
  { 67,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #67 = G_FCMP
  { 68,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #68 = G_SELECT
  { 69,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #69 = G_UADDE
  { 70,	5,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #70 = G_USUBE
  { 71,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #71 = G_SADDO
  { 72,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #72 = G_SSUBO
  { 73,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #73 = G_UMULO
  { 74,	4,	2,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #74 = G_SMULO
  { 75,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #75 = G_UMULH
  { 76,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #76 = G_SMULH
  { 77,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #77 = G_FADD
  { 78,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #78 = G_FSUB
  { 79,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #79 = G_FMUL
  { 80,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #80 = G_FDIV
  { 81,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #81 = G_FREM
  { 82,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #82 = G_FPOW
  { 83,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #83 = G_FNEG
  { 84,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #84 = G_FPEXT
  { 85,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #85 = G_FPTRUNC
  { 86,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #86 = G_FPTOSI
  { 87,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #87 = G_FPTOUI
  { 88,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #88 = G_SITOFP
  { 89,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #89 = G_UITOFP
  { 90,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #90 = G_GEP
  { 91,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #91 = G_PTR_MASK
  { 92,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #92 = G_BR
  { 93,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #93 = G_INSERT_VECTOR_ELT
  { 94,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #94 = G_EXTRACT_VECTOR_ELT
  { 95,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #95 = ADD4
  { 96,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #96 = ADD4TLS
  { 97,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #97 = ADD4o
  { 98,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #98 = ADD8
  { 99,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #99 = ADD8TLS
  { 100,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #100 = ADD8TLS_
  { 101,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #101 = ADD8o
  { 102,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo26, -1 ,nullptr },  // Inst #102 = ADDC
  { 103,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo28, -1 ,nullptr },  // Inst #103 = ADDC8
  { 104,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo28, -1 ,nullptr },  // Inst #104 = ADDC8o
  { 105,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo26, -1 ,nullptr },  // Inst #105 = ADDCo
  { 106,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo26, -1 ,nullptr },  // Inst #106 = ADDE
  { 107,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo28, -1 ,nullptr },  // Inst #107 = ADDE8
  { 108,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo28, -1 ,nullptr },  // Inst #108 = ADDE8o
  { 109,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo26, -1 ,nullptr },  // Inst #109 = ADDEo
  { 110,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #110 = ADDI
  { 111,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #111 = ADDI8
  { 112,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo27, -1 ,nullptr },  // Inst #112 = ADDIC
  { 113,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo30, -1 ,nullptr },  // Inst #113 = ADDIC8
  { 114,	3,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, ImplicitList3, OperandInfo27, -1 ,nullptr },  // Inst #114 = ADDICo
  { 115,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #115 = ADDIS
  { 116,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #116 = ADDIS8
  { 117,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #117 = ADDISdtprelHA
  { 118,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #118 = ADDISdtprelHA32
  { 119,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #119 = ADDISgotTprelHA
  { 120,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #120 = ADDIStlsgdHA
  { 121,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #121 = ADDIStlsldHA
  { 122,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #122 = ADDIStocHA
  { 123,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #123 = ADDIdtprelL
  { 124,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #124 = ADDIdtprelL32
  { 125,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #125 = ADDItlsgdL
  { 126,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #126 = ADDItlsgdL32
  { 127,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo32, -1 ,nullptr },  // Inst #127 = ADDItlsgdLADDR
  { 128,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo33, -1 ,nullptr },  // Inst #128 = ADDItlsgdLADDR32
  { 129,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #129 = ADDItlsldL
  { 130,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #130 = ADDItlsldL32
  { 131,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo32, -1 ,nullptr },  // Inst #131 = ADDItlsldLADDR
  { 132,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo33, -1 ,nullptr },  // Inst #132 = ADDItlsldLADDR32
  { 133,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #133 = ADDItocL
  { 134,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo34, -1 ,nullptr },  // Inst #134 = ADDME
  { 135,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo35, -1 ,nullptr },  // Inst #135 = ADDME8
  { 136,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #136 = ADDME8o
  { 137,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo34, -1 ,nullptr },  // Inst #137 = ADDMEo
  { 138,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo34, -1 ,nullptr },  // Inst #138 = ADDZE
  { 139,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo35, -1 ,nullptr },  // Inst #139 = ADDZE8
  { 140,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #140 = ADDZE8o
  { 141,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo34, -1 ,nullptr },  // Inst #141 = ADDZEo
  { 142,	1,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo2, -1 ,nullptr },  // Inst #142 = ADJCALLSTACKDOWN
  { 143,	2,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo7, -1 ,nullptr },  // Inst #143 = ADJCALLSTACKUP
  { 144,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #144 = AND
  { 145,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #145 = AND8
  { 146,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #146 = AND8o
  { 147,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #147 = ANDC
  { 148,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #148 = ANDC8
  { 149,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #149 = ANDC8o
  { 150,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #150 = ANDCo
  { 151,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #151 = ANDISo
  { 152,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #152 = ANDISo8
  { 153,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #153 = ANDIo
  { 154,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo30, -1 ,nullptr },  // Inst #154 = ANDIo8
  { 155,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #155 = ANDIo_1_EQ_BIT
  { 156,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #156 = ANDIo_1_EQ_BIT8
  { 157,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #157 = ANDIo_1_GT_BIT
  { 158,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #158 = ANDIo_1_GT_BIT8
  { 159,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #159 = ANDo
  { 160,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo38, -1 ,nullptr },  // Inst #160 = ATOMIC_CMP_SWAP_I16
  { 161,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo38, -1 ,nullptr },  // Inst #161 = ATOMIC_CMP_SWAP_I32
  { 162,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo39, -1 ,nullptr },  // Inst #162 = ATOMIC_CMP_SWAP_I64
  { 163,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo38, -1 ,nullptr },  // Inst #163 = ATOMIC_CMP_SWAP_I8
  { 164,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #164 = ATOMIC_LOAD_ADD_I16
  { 165,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #165 = ATOMIC_LOAD_ADD_I32
  { 166,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #166 = ATOMIC_LOAD_ADD_I64
  { 167,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #167 = ATOMIC_LOAD_ADD_I8
  { 168,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #168 = ATOMIC_LOAD_AND_I16
  { 169,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #169 = ATOMIC_LOAD_AND_I32
  { 170,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #170 = ATOMIC_LOAD_AND_I64
  { 171,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #171 = ATOMIC_LOAD_AND_I8
  { 172,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #172 = ATOMIC_LOAD_MAX_I16
  { 173,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #173 = ATOMIC_LOAD_MAX_I32
  { 174,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #174 = ATOMIC_LOAD_MAX_I64
  { 175,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #175 = ATOMIC_LOAD_MAX_I8
  { 176,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #176 = ATOMIC_LOAD_MIN_I16
  { 177,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #177 = ATOMIC_LOAD_MIN_I32
  { 178,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #178 = ATOMIC_LOAD_MIN_I64
  { 179,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #179 = ATOMIC_LOAD_MIN_I8
  { 180,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #180 = ATOMIC_LOAD_NAND_I16
  { 181,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #181 = ATOMIC_LOAD_NAND_I32
  { 182,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #182 = ATOMIC_LOAD_NAND_I64
  { 183,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #183 = ATOMIC_LOAD_NAND_I8
  { 184,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #184 = ATOMIC_LOAD_OR_I16
  { 185,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #185 = ATOMIC_LOAD_OR_I32
  { 186,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #186 = ATOMIC_LOAD_OR_I64
  { 187,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #187 = ATOMIC_LOAD_OR_I8
  { 188,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #188 = ATOMIC_LOAD_SUB_I16
  { 189,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #189 = ATOMIC_LOAD_SUB_I32
  { 190,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #190 = ATOMIC_LOAD_SUB_I64
  { 191,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #191 = ATOMIC_LOAD_SUB_I8
  { 192,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #192 = ATOMIC_LOAD_UMAX_I16
  { 193,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #193 = ATOMIC_LOAD_UMAX_I32
  { 194,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #194 = ATOMIC_LOAD_UMAX_I64
  { 195,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #195 = ATOMIC_LOAD_UMAX_I8
  { 196,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #196 = ATOMIC_LOAD_UMIN_I16
  { 197,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #197 = ATOMIC_LOAD_UMIN_I32
  { 198,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #198 = ATOMIC_LOAD_UMIN_I64
  { 199,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #199 = ATOMIC_LOAD_UMIN_I8
  { 200,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #200 = ATOMIC_LOAD_XOR_I16
  { 201,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #201 = ATOMIC_LOAD_XOR_I32
  { 202,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #202 = ATOMIC_LOAD_XOR_I64
  { 203,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #203 = ATOMIC_LOAD_XOR_I8
  { 204,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #204 = ATOMIC_SWAP_I16
  { 205,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #205 = ATOMIC_SWAP_I32
  { 206,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo41, -1 ,nullptr },  // Inst #206 = ATOMIC_SWAP_I64
  { 207,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo40, -1 ,nullptr },  // Inst #207 = ATOMIC_SWAP_I8
  { 208,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #208 = ATTN
  { 209,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #209 = B
  { 210,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #210 = BA
  { 211,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #211 = BC
  { 212,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #212 = BCC
  { 213,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #213 = BCCA
  { 214,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #214 = BCCCTR
  { 215,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #215 = BCCCTR8
  { 216,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo44, -1 ,nullptr },  // Inst #216 = BCCCTRL
  { 217,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo44, -1 ,nullptr },  // Inst #217 = BCCCTRL8
  { 218,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo43, -1 ,nullptr },  // Inst #218 = BCCL
  { 219,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo43, -1 ,nullptr },  // Inst #219 = BCCLA
  { 220,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #220 = BCCLR
  { 221,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo44, -1 ,nullptr },  // Inst #221 = BCCLRL
  { 222,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #222 = BCCTR
  { 223,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #223 = BCCTR8
  { 224,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #224 = BCCTR8n
  { 225,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo45, -1 ,nullptr },  // Inst #225 = BCCTRL
  { 226,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo45, -1 ,nullptr },  // Inst #226 = BCCTRL8
  { 227,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo45, -1 ,nullptr },  // Inst #227 = BCCTRL8n
  { 228,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo45, -1 ,nullptr },  // Inst #228 = BCCTRLn
  { 229,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #229 = BCCTRn
  { 230,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo46, -1 ,nullptr },  // Inst #230 = BCDCFNo
  { 231,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo46, -1 ,nullptr },  // Inst #231 = BCDCFSQo
  { 232,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo46, -1 ,nullptr },  // Inst #232 = BCDCFZo
  { 233,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #233 = BCDCPSGNo
  { 234,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #234 = BCDCTNo
  { 235,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo48, -1 ,nullptr },  // Inst #235 = BCDCTSQo
  { 236,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo46, -1 ,nullptr },  // Inst #236 = BCDCTZo
  { 237,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo46, -1 ,nullptr },  // Inst #237 = BCDSETSGNo
  { 238,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo49, -1 ,nullptr },  // Inst #238 = BCDSRo
  { 239,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo49, -1 ,nullptr },  // Inst #239 = BCDSo
  { 240,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo49, -1 ,nullptr },  // Inst #240 = BCDTRUNCo
  { 241,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #241 = BCDUSo
  { 242,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #242 = BCDUTRUNCo
  { 243,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo42, -1 ,nullptr },  // Inst #243 = BCL
  { 244,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #244 = BCLR
  { 245,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo45, -1 ,nullptr },  // Inst #245 = BCLRL
  { 246,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo45, -1 ,nullptr },  // Inst #246 = BCLRLn
  { 247,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #247 = BCLRn
  { 248,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #248 = BCLalways
  { 249,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo42, -1 ,nullptr },  // Inst #249 = BCLn
  { 250,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, nullptr, -1 ,nullptr },  // Inst #250 = BCTR
  { 251,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, nullptr, -1 ,nullptr },  // Inst #251 = BCTR8
  { 252,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList9, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #252 = BCTRL
  { 253,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #253 = BCTRL8
  { 254,	2,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList16, OperandInfo50, -1 ,nullptr },  // Inst #254 = BCTRL8_LDinto_toc
  { 255,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #255 = BCn
  { 256,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #256 = BDNZ
  { 257,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo2, -1 ,nullptr },  // Inst #257 = BDNZ8
  { 258,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #258 = BDNZA
  { 259,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #259 = BDNZAm
  { 260,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #260 = BDNZAp
  { 261,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #261 = BDNZL
  { 262,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #262 = BDNZLA
  { 263,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #263 = BDNZLAm
  { 264,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #264 = BDNZLAp
  { 265,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #265 = BDNZLR
  { 266,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #266 = BDNZLR8
  { 267,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #267 = BDNZLRL
  { 268,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #268 = BDNZLRLm
  { 269,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #269 = BDNZLRLp
  { 270,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #270 = BDNZLRm
  { 271,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #271 = BDNZLRp
  { 272,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #272 = BDNZLm
  { 273,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #273 = BDNZLp
  { 274,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #274 = BDNZm
  { 275,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #275 = BDNZp
  { 276,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #276 = BDZ
  { 277,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo2, -1 ,nullptr },  // Inst #277 = BDZ8
  { 278,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #278 = BDZA
  { 279,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #279 = BDZAm
  { 280,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #280 = BDZAp
  { 281,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #281 = BDZL
  { 282,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #282 = BDZLA
  { 283,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #283 = BDZLAm
  { 284,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #284 = BDZLAp
  { 285,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #285 = BDZLR
  { 286,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #286 = BDZLR8
  { 287,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #287 = BDZLRL
  { 288,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #288 = BDZLRLm
  { 289,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #289 = BDZLRLp
  { 290,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #290 = BDZLRm
  { 291,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #291 = BDZLRp
  { 292,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #292 = BDZLm
  { 293,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #293 = BDZLp
  { 294,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #294 = BDZm
  { 295,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #295 = BDZp
  { 296,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #296 = BL
  { 297,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #297 = BL8
  { 298,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #298 = BL8_NOP
  { 299,	2,	0,	8,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #299 = BL8_NOP_TLS
  { 300,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #300 = BL8_TLS
  { 301,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #301 = BL8_TLS_
  { 302,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #302 = BLA
  { 303,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #303 = BLA8
  { 304,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #304 = BLA8_NOP
  { 305,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList14, nullptr, nullptr, -1 ,nullptr },  // Inst #305 = BLR
  { 306,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList19, nullptr, nullptr, -1 ,nullptr },  // Inst #306 = BLR8
  { 307,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #307 = BLRL
  { 308,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo7, -1 ,nullptr },  // Inst #308 = BL_TLS
  { 309,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #309 = BPERMD
  { 310,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #310 = BRINC
  { 311,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #311 = CLRBHRB
  { 312,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #312 = CLRLSLDI
  { 313,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #313 = CLRLSLDIo
  { 314,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #314 = CLRLSLWI
  { 315,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #315 = CLRLSLWIo
  { 316,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #316 = CLRRDI
  { 317,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #317 = CLRRDIo
  { 318,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #318 = CLRRWI
  { 319,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #319 = CLRRWIo
  { 320,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #320 = CMPB
  { 321,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #321 = CMPB8
  { 322,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #322 = CMPD
  { 323,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #323 = CMPDI
  { 324,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #324 = CMPEQB
  { 325,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #325 = CMPLD
  { 326,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #326 = CMPLDI
  { 327,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #327 = CMPLW
  { 328,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #328 = CMPLWI
  { 329,	4,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #329 = CMPRB
  { 330,	4,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #330 = CMPRB8
  { 331,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #331 = CMPW
  { 332,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #332 = CMPWI
  { 333,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #333 = CNTLZD
  { 334,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #334 = CNTLZDo
  { 335,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #335 = CNTLZW
  { 336,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #336 = CNTLZW8
  { 337,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #337 = CNTLZW8o
  { 338,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo34, -1 ,nullptr },  // Inst #338 = CNTLZWo
  { 339,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #339 = CNTTZD
  { 340,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #340 = CNTTZDo
  { 341,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #341 = CNTTZW
  { 342,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #342 = CNTTZW8
  { 343,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #343 = CNTTZW8o
  { 344,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo34, -1 ,nullptr },  // Inst #344 = CNTTZWo
  { 345,	0,	0,	4,	6,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #345 = CP_ABORT
  { 346,	3,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #346 = CP_COPY
  { 347,	3,	0,	4,	7,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #347 = CP_COPY8
  { 348,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #348 = CP_COPY_FIRST
  { 349,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #349 = CP_COPYx
  { 350,	3,	0,	4,	8,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #350 = CP_PASTE
  { 351,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #351 = CP_PASTE8
  { 352,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #352 = CP_PASTE8o
  { 353,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #353 = CP_PASTE_LAST
  { 354,	3,	0,	4,	8,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #354 = CP_PASTEo
  { 355,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #355 = CP_PASTEx
  { 356,	0,	0,	4,	9,	0, 0x0ULL, nullptr, ImplicitList20, nullptr, -1 ,nullptr },  // Inst #356 = CR6SET
  { 357,	0,	0,	4,	9,	0, 0x0ULL, nullptr, ImplicitList20, nullptr, -1 ,nullptr },  // Inst #357 = CR6UNSET
  { 358,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #358 = CRAND
  { 359,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #359 = CRANDC
  { 360,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #360 = CREQV
  { 361,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #361 = CRNAND
  { 362,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #362 = CRNOR
  { 363,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #363 = CROR
  { 364,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #364 = CRORC
  { 365,	1,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #365 = CRSET
  { 366,	1,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #366 = CRUNSET
  { 367,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #367 = CRXOR
  { 368,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #368 = DCBA
  { 369,	3,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #369 = DCBF
  { 370,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #370 = DCBFL
  { 371,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #371 = DCBFLP
  { 372,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #372 = DCBFx
  { 373,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #373 = DCBI
  { 374,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #374 = DCBST
  { 375,	3,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #375 = DCBT
  { 376,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #376 = DCBTCT
  { 377,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #377 = DCBTDS
  { 378,	3,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #378 = DCBTST
  { 379,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #379 = DCBTSTCT
  { 380,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #380 = DCBTSTDS
  { 381,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #381 = DCBTSTT
  { 382,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #382 = DCBTSTx
  { 383,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #383 = DCBTT
  { 384,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #384 = DCBTx
  { 385,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #385 = DCBZ
  { 386,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #386 = DCBZL
  { 387,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #387 = DCCCI
  { 388,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #388 = DFLOADf32
  { 389,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #389 = DFLOADf64
  { 390,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #390 = DFSTOREf32
  { 391,	3,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #391 = DFSTOREf64
  { 392,	3,	1,	4,	127,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #392 = DIVD
  { 393,	3,	1,	4,	128,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #393 = DIVDE
  { 394,	3,	1,	4,	128,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #394 = DIVDEU
  { 395,	3,	1,	4,	130,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #395 = DIVDEUo
  { 396,	3,	1,	4,	130,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #396 = DIVDEo
  { 397,	3,	1,	4,	127,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #397 = DIVDU
  { 398,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #398 = DIVDUo
  { 399,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #399 = DIVDo
  { 400,	3,	1,	4,	125,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #400 = DIVW
  { 401,	3,	1,	4,	126,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #401 = DIVWE
  { 402,	3,	1,	4,	126,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #402 = DIVWEU
  { 403,	3,	1,	4,	129,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #403 = DIVWEUo
  { 404,	3,	1,	4,	129,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #404 = DIVWEo
  { 405,	3,	1,	4,	125,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #405 = DIVWU
  { 406,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #406 = DIVWUo
  { 407,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #407 = DIVWo
  { 408,	1,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, PPC::DeprecatedDST ,nullptr },  // Inst #408 = DSS
  { 409,	0,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, PPC::DeprecatedDST ,nullptr },  // Inst #409 = DSSALL
  { 410,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, PPC::DeprecatedDST ,nullptr },  // Inst #410 = DST
  { 411,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, PPC::DeprecatedDST ,nullptr },  // Inst #411 = DST64
  { 412,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, PPC::DeprecatedDST ,nullptr },  // Inst #412 = DSTST
  { 413,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, PPC::DeprecatedDST ,nullptr },  // Inst #413 = DSTST64
  { 414,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, PPC::DeprecatedDST ,nullptr },  // Inst #414 = DSTSTT
  { 415,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, PPC::DeprecatedDST ,nullptr },  // Inst #415 = DSTSTT64
  { 416,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, PPC::DeprecatedDST ,nullptr },  // Inst #416 = DSTT
  { 417,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo66, PPC::DeprecatedDST ,nullptr },  // Inst #417 = DSTT64
  { 418,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo67, -1 ,nullptr },  // Inst #418 = DYNALLOC
  { 419,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList21, ImplicitList21, OperandInfo68, -1 ,nullptr },  // Inst #419 = DYNALLOC8
  { 420,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #420 = DYNAREAOFFSET
  { 421,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #421 = DYNAREAOFFSET8
  { 422,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #422 = EH_SjLj_LongJmp32
  { 423,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #423 = EH_SjLj_LongJmp64
  { 424,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo71, -1 ,nullptr },  // Inst #424 = EH_SjLj_SetJmp32
  { 425,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo71, -1 ,nullptr },  // Inst #425 = EH_SjLj_SetJmp64
  { 426,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #426 = EH_SjLj_Setup
  { 427,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #427 = EQV
  { 428,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #428 = EQV8
  { 429,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #429 = EQV8o
  { 430,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #430 = EQVo
  { 431,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #431 = EVABS
  { 432,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #432 = EVADDIW
  { 433,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #433 = EVADDSMIAAW
  { 434,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #434 = EVADDSSIAAW
  { 435,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #435 = EVADDUMIAAW
  { 436,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #436 = EVADDUSIAAW
  { 437,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #437 = EVADDW
  { 438,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #438 = EVAND
  { 439,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #439 = EVANDC
  { 440,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #440 = EVCMPEQ
  { 441,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #441 = EVCMPGTS
  { 442,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #442 = EVCMPGTU
  { 443,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #443 = EVCMPLTS
  { 444,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #444 = EVCMPLTU
  { 445,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #445 = EVCNTLSW
  { 446,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #446 = EVCNTLZW
  { 447,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #447 = EVDIVWS
  { 448,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #448 = EVDIVWU
  { 449,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #449 = EVEQV
  { 450,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #450 = EVEXTSB
  { 451,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #451 = EVEXTSH
  { 452,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #452 = EVLDD
  { 453,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #453 = EVLDDX
  { 454,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #454 = EVLDH
  { 455,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #455 = EVLDHX
  { 456,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #456 = EVLDW
  { 457,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #457 = EVLDWX
  { 458,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #458 = EVLHHESPLAT
  { 459,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #459 = EVLHHESPLATX
  { 460,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #460 = EVLHHOSSPLAT
  { 461,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #461 = EVLHHOSSPLATX
  { 462,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #462 = EVLHHOUSPLAT
  { 463,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #463 = EVLHHOUSPLATX
  { 464,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #464 = EVLWHE
  { 465,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #465 = EVLWHEX
  { 466,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #466 = EVLWHOS
  { 467,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #467 = EVLWHOSX
  { 468,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #468 = EVLWHOU
  { 469,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #469 = EVLWHOUX
  { 470,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #470 = EVLWHSPLAT
  { 471,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #471 = EVLWHSPLATX
  { 472,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #472 = EVLWWSPLAT
  { 473,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #473 = EVLWWSPLATX
  { 474,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #474 = EVMERGEHI
  { 475,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #475 = EVMERGEHILO
  { 476,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #476 = EVMERGELO
  { 477,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #477 = EVMERGELOHI
  { 478,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #478 = EVMHEGSMFAA
  { 479,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #479 = EVMHEGSMFAN
  { 480,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #480 = EVMHEGSMIAA
  { 481,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #481 = EVMHEGSMIAN
  { 482,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #482 = EVMHEGUMIAA
  { 483,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #483 = EVMHEGUMIAN
  { 484,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #484 = EVMHESMF
  { 485,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #485 = EVMHESMFA
  { 486,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #486 = EVMHESMFAAW
  { 487,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #487 = EVMHESMFANW
  { 488,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #488 = EVMHESMI
  { 489,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #489 = EVMHESMIA
  { 490,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #490 = EVMHESMIAAW
  { 491,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #491 = EVMHESMIANW
  { 492,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #492 = EVMHESSF
  { 493,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #493 = EVMHESSFA
  { 494,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #494 = EVMHESSFAAW
  { 495,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #495 = EVMHESSFANW
  { 496,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #496 = EVMHESSIAAW
  { 497,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #497 = EVMHESSIANW
  { 498,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #498 = EVMHEUMI
  { 499,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #499 = EVMHEUMIA
  { 500,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #500 = EVMHEUMIAAW
  { 501,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #501 = EVMHEUMIANW
  { 502,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #502 = EVMHEUSIAAW
  { 503,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #503 = EVMHEUSIANW
  { 504,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #504 = EVMHOGSMFAA
  { 505,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #505 = EVMHOGSMFAN
  { 506,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #506 = EVMHOGSMIAA
  { 507,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #507 = EVMHOGSMIAN
  { 508,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #508 = EVMHOGUMIAA
  { 509,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #509 = EVMHOGUMIAN
  { 510,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #510 = EVMHOSMF
  { 511,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #511 = EVMHOSMFA
  { 512,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #512 = EVMHOSMFAAW
  { 513,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #513 = EVMHOSMFANW
  { 514,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #514 = EVMHOSMI
  { 515,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #515 = EVMHOSMIA
  { 516,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #516 = EVMHOSMIAAW
  { 517,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #517 = EVMHOSMIANW
  { 518,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #518 = EVMHOSSF
  { 519,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #519 = EVMHOSSFA
  { 520,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #520 = EVMHOSSFAAW
  { 521,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #521 = EVMHOSSFANW
  { 522,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #522 = EVMHOSSIAAW
  { 523,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #523 = EVMHOSSIANW
  { 524,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #524 = EVMHOUMI
  { 525,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #525 = EVMHOUMIA
  { 526,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #526 = EVMHOUMIAAW
  { 527,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #527 = EVMHOUMIANW
  { 528,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #528 = EVMHOUSIAAW
  { 529,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #529 = EVMHOUSIANW
  { 530,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #530 = EVMRA
  { 531,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #531 = EVMWHSMF
  { 532,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #532 = EVMWHSMFA
  { 533,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #533 = EVMWHSMI
  { 534,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #534 = EVMWHSMIA
  { 535,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #535 = EVMWHSSF
  { 536,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #536 = EVMWHSSFA
  { 537,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #537 = EVMWHUMI
  { 538,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #538 = EVMWHUMIA
  { 539,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #539 = EVMWLSMIAAW
  { 540,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #540 = EVMWLSMIANW
  { 541,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #541 = EVMWLSSIAAW
  { 542,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #542 = EVMWLSSIANW
  { 543,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #543 = EVMWLUMI
  { 544,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #544 = EVMWLUMIA
  { 545,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #545 = EVMWLUMIAAW
  { 546,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #546 = EVMWLUMIANW
  { 547,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #547 = EVMWLUSIAAW
  { 548,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #548 = EVMWLUSIANW
  { 549,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #549 = EVMWSMF
  { 550,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #550 = EVMWSMFA
  { 551,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #551 = EVMWSMFAA
  { 552,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #552 = EVMWSMFAN
  { 553,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #553 = EVMWSMI
  { 554,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #554 = EVMWSMIA
  { 555,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #555 = EVMWSMIAA
  { 556,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #556 = EVMWSMIAN
  { 557,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #557 = EVMWSSF
  { 558,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #558 = EVMWSSFA
  { 559,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #559 = EVMWSSFAA
  { 560,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #560 = EVMWSSFAN
  { 561,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #561 = EVMWUMI
  { 562,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #562 = EVMWUMIA
  { 563,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #563 = EVMWUMIAA
  { 564,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #564 = EVMWUMIAN
  { 565,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #565 = EVNAND
  { 566,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #566 = EVNEG
  { 567,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #567 = EVNOR
  { 568,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #568 = EVOR
  { 569,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #569 = EVORC
  { 570,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #570 = EVRLW
  { 571,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #571 = EVRLWI
  { 572,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #572 = EVRNDW
  { 573,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #573 = EVSLW
  { 574,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #574 = EVSLWI
  { 575,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #575 = EVSPLATFI
  { 576,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #576 = EVSPLATI
  { 577,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #577 = EVSRWIS
  { 578,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #578 = EVSRWIU
  { 579,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #579 = EVSRWS
  { 580,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #580 = EVSRWU
  { 581,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #581 = EVSTDD
  { 582,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #582 = EVSTDDX
  { 583,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #583 = EVSTDH
  { 584,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #584 = EVSTDHX
  { 585,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #585 = EVSTDW
  { 586,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #586 = EVSTDWX
  { 587,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #587 = EVSTWHE
  { 588,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #588 = EVSTWHEX
  { 589,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #589 = EVSTWHO
  { 590,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #590 = EVSTWHOX
  { 591,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #591 = EVSTWWE
  { 592,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #592 = EVSTWWEX
  { 593,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #593 = EVSTWWO
  { 594,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #594 = EVSTWWOX
  { 595,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #595 = EVSUBFSMIAAW
  { 596,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #596 = EVSUBFSSIAAW
  { 597,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #597 = EVSUBFUMIAAW
  { 598,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #598 = EVSUBFUSIAAW
  { 599,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #599 = EVSUBFW
  { 600,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #600 = EVSUBIFW
  { 601,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #601 = EVXOR
  { 602,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #602 = EXTLDI
  { 603,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #603 = EXTLDIo
  { 604,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #604 = EXTLWI
  { 605,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #605 = EXTLWIo
  { 606,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #606 = EXTRDI
  { 607,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #607 = EXTRDIo
  { 608,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #608 = EXTRWI
  { 609,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #609 = EXTRWIo
  { 610,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #610 = EXTSB
  { 611,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #611 = EXTSB8
  { 612,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #612 = EXTSB8_32_64
  { 613,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #613 = EXTSB8o
  { 614,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo34, -1 ,nullptr },  // Inst #614 = EXTSBo
  { 615,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #615 = EXTSH
  { 616,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #616 = EXTSH8
  { 617,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #617 = EXTSH8_32_64
  { 618,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #618 = EXTSH8o
  { 619,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo34, -1 ,nullptr },  // Inst #619 = EXTSHo
  { 620,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #620 = EXTSW
  { 621,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #621 = EXTSW_32_64
  { 622,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo75, -1 ,nullptr },  // Inst #622 = EXTSW_32_64o
  { 623,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #623 = EXTSWo
  { 624,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #624 = EnforceIEIO
  { 625,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #625 = FABSD
  { 626,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #626 = FABSDo
  { 627,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #627 = FABSS
  { 628,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #628 = FABSSo
  { 629,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #629 = FADD
  { 630,	3,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #630 = FADDS
  { 631,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo79, -1 ,nullptr },  // Inst #631 = FADDSo
  { 632,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #632 = FADDo
  { 633,	3,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #633 = FADDrtz
  { 634,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #634 = FCFID
  { 635,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #635 = FCFIDS
  { 636,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo80, -1 ,nullptr },  // Inst #636 = FCFIDSo
  { 637,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #637 = FCFIDU
  { 638,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #638 = FCFIDUS
  { 639,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo80, -1 ,nullptr },  // Inst #639 = FCFIDUSo
  { 640,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #640 = FCFIDUo
  { 641,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #641 = FCFIDo
  { 642,	3,	1,	4,	146,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #642 = FCMPUD
  { 643,	3,	1,	4,	146,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #643 = FCMPUS
  { 644,	3,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #644 = FCPSGND
  { 645,	3,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #645 = FCPSGNDo
  { 646,	3,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #646 = FCPSGNS
  { 647,	3,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo79, -1 ,nullptr },  // Inst #647 = FCPSGNSo
  { 648,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #648 = FCTID
  { 649,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #649 = FCTIDU
  { 650,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #650 = FCTIDUZ
  { 651,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #651 = FCTIDUZo
  { 652,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #652 = FCTIDUo
  { 653,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #653 = FCTIDZ
  { 654,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #654 = FCTIDZo
  { 655,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #655 = FCTIDo
  { 656,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #656 = FCTIW
  { 657,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #657 = FCTIWU
  { 658,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #658 = FCTIWUZ
  { 659,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #659 = FCTIWUZo
  { 660,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #660 = FCTIWUo
  { 661,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #661 = FCTIWZ
  { 662,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #662 = FCTIWZo
  { 663,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #663 = FCTIWo
  { 664,	3,	1,	4,	139,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #664 = FDIV
  { 665,	3,	1,	4,	140,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #665 = FDIVS
  { 666,	3,	1,	4,	18,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo79, -1 ,nullptr },  // Inst #666 = FDIVSo
  { 667,	3,	1,	4,	17,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #667 = FDIVo
  { 668,	4,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #668 = FMADD
  { 669,	4,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #669 = FMADDS
  { 670,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo84, -1 ,nullptr },  // Inst #670 = FMADDSo
  { 671,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo83, -1 ,nullptr },  // Inst #671 = FMADDo
  { 672,	2,	1,	4,	145,	0, 0x0ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #672 = FMR
  { 673,	2,	1,	4,	14,	0, 0x0ULL, nullptr, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #673 = FMRo
  { 674,	4,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #674 = FMSUB
  { 675,	4,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #675 = FMSUBS
  { 676,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo84, -1 ,nullptr },  // Inst #676 = FMSUBSo
  { 677,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo83, -1 ,nullptr },  // Inst #677 = FMSUBo
  { 678,	3,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #678 = FMUL
  { 679,	3,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #679 = FMULS
  { 680,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo79, -1 ,nullptr },  // Inst #680 = FMULSo
  { 681,	3,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #681 = FMULo
  { 682,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #682 = FNABSD
  { 683,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #683 = FNABSDo
  { 684,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #684 = FNABSS
  { 685,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #685 = FNABSSo
  { 686,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #686 = FNEGD
  { 687,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #687 = FNEGDo
  { 688,	2,	1,	4,	145,	0, 0x18ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #688 = FNEGS
  { 689,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #689 = FNEGSo
  { 690,	4,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #690 = FNMADD
  { 691,	4,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #691 = FNMADDS
  { 692,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo84, -1 ,nullptr },  // Inst #692 = FNMADDSo
  { 693,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo83, -1 ,nullptr },  // Inst #693 = FNMADDo
  { 694,	4,	1,	4,	144,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #694 = FNMSUB
  { 695,	4,	1,	4,	143,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #695 = FNMSUBS
  { 696,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo84, -1 ,nullptr },  // Inst #696 = FNMSUBSo
  { 697,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo83, -1 ,nullptr },  // Inst #697 = FNMSUBo
  { 698,	2,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #698 = FRE
  { 699,	2,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #699 = FRES
  { 700,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #700 = FRESo
  { 701,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #701 = FREo
  { 702,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #702 = FRIMD
  { 703,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #703 = FRIMDo
  { 704,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #704 = FRIMS
  { 705,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #705 = FRIMSo
  { 706,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #706 = FRIND
  { 707,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #707 = FRINDo
  { 708,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #708 = FRINS
  { 709,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #709 = FRINSo
  { 710,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #710 = FRIPD
  { 711,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #711 = FRIPDo
  { 712,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #712 = FRIPS
  { 713,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #713 = FRIPSo
  { 714,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #714 = FRIZD
  { 715,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #715 = FRIZDo
  { 716,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #716 = FRIZS
  { 717,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #717 = FRIZSo
  { 718,	2,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #718 = FRSP
  { 719,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo80, -1 ,nullptr },  // Inst #719 = FRSPo
  { 720,	2,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #720 = FRSQRTE
  { 721,	2,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #721 = FRSQRTES
  { 722,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #722 = FRSQRTESo
  { 723,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #723 = FRSQRTEo
  { 724,	4,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #724 = FSELD
  { 725,	4,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo83, -1 ,nullptr },  // Inst #725 = FSELDo
  { 726,	4,	1,	4,	143,	0, 0x18ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #726 = FSELS
  { 727,	4,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo85, -1 ,nullptr },  // Inst #727 = FSELSo
  { 728,	2,	1,	4,	20,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #728 = FSQRT
  { 729,	2,	1,	4,	21,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #729 = FSQRTS
  { 730,	2,	1,	4,	21,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo77, -1 ,nullptr },  // Inst #730 = FSQRTSo
  { 731,	2,	1,	4,	20,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo76, -1 ,nullptr },  // Inst #731 = FSQRTo
  { 732,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #732 = FSUB
  { 733,	3,	1,	4,	143,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #733 = FSUBS
  { 734,	3,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo79, -1 ,nullptr },  // Inst #734 = FSUBSo
  { 735,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo78, -1 ,nullptr },  // Inst #735 = FSUBo
  { 736,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x18ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #736 = FTDIV
  { 737,	2,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x18ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #737 = FTSQRT
  { 738,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList23, OperandInfo30, -1 ,nullptr },  // Inst #738 = GETtlsADDR
  { 739,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList24, OperandInfo27, -1 ,nullptr },  // Inst #739 = GETtlsADDR32
  { 740,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList23, OperandInfo30, -1 ,nullptr },  // Inst #740 = GETtlsldADDR
  { 741,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList24, OperandInfo27, -1 ,nullptr },  // Inst #741 = GETtlsldADDR32
  { 742,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #742 = HRFID
  { 743,	2,	0,	4,	22,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #743 = ICBI
  { 744,	3,	0,	4,	23,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #744 = ICBLC
  { 745,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #745 = ICBLQ
  { 746,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #746 = ICBT
  { 747,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #747 = ICBTLS
  { 748,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #748 = ICCCI
  { 749,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #749 = INSLWI
  { 750,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #750 = INSLWIo
  { 751,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #751 = INSRDI
  { 752,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #752 = INSRDIo
  { 753,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #753 = INSRWI
  { 754,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #754 = INSRWIo
  { 755,	4,	1,	4,	24,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #755 = ISEL
  { 756,	4,	1,	4,	24,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #756 = ISEL8
  { 757,	0,	0,	4,	25,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #757 = ISYNC
  { 758,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #758 = LA
  { 759,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #759 = LAx
  { 760,	3,	1,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #760 = LBARX
  { 761,	3,	1,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #761 = LBARXL
  { 762,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #762 = LBZ
  { 763,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #763 = LBZ8
  { 764,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #764 = LBZCIX
  { 765,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #765 = LBZU
  { 766,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #766 = LBZU8
  { 767,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #767 = LBZUX
  { 768,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #768 = LBZUX8
  { 769,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #769 = LBZX
  { 770,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #770 = LBZX8
  { 771,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #771 = LD
  { 772,	3,	1,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #772 = LDARX
  { 773,	3,	1,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #773 = LDARXL
  { 774,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #774 = LDAT
  { 775,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #775 = LDBRX
  { 776,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #776 = LDCIX
  { 777,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #777 = LDMX
  { 778,	4,	2,	4,	31,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #778 = LDU
  { 779,	4,	2,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #779 = LDUX
  { 780,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #780 = LDX
  { 781,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #781 = LDgotTprelL
  { 782,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #782 = LDgotTprelL32
  { 783,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #783 = LDtoc
  { 784,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #784 = LDtocBA
  { 785,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #785 = LDtocCPT
  { 786,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #786 = LDtocJTI
  { 787,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #787 = LDtocL
  { 788,	3,	1,	4,	119,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #788 = LFD
  { 789,	4,	2,	4,	149,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #789 = LFDU
  { 790,	4,	2,	4,	150,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #790 = LFDUX
  { 791,	3,	1,	4,	119,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #791 = LFDX
  { 792,	3,	1,	4,	121,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #792 = LFIWAX
  { 793,	3,	1,	4,	119,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #793 = LFIWZX
  { 794,	3,	1,	4,	121,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #794 = LFS
  { 795,	4,	2,	4,	147,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #795 = LFSU
  { 796,	4,	2,	4,	148,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #796 = LFSUX
  { 797,	3,	1,	4,	121,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #797 = LFSX
  { 798,	3,	1,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #798 = LHA
  { 799,	3,	1,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #799 = LHA8
  { 800,	3,	1,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #800 = LHARX
  { 801,	3,	1,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #801 = LHARXL
  { 802,	4,	2,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #802 = LHAU
  { 803,	4,	2,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #803 = LHAU8
  { 804,	4,	2,	4,	38,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #804 = LHAUX
  { 805,	4,	2,	4,	38,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #805 = LHAUX8
  { 806,	3,	1,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #806 = LHAX
  { 807,	3,	1,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #807 = LHAX8
  { 808,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #808 = LHBRX
  { 809,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #809 = LHBRX8
  { 810,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #810 = LHZ
  { 811,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #811 = LHZ8
  { 812,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #812 = LHZCIX
  { 813,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #813 = LHZU
  { 814,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #814 = LHZU8
  { 815,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #815 = LHZUX
  { 816,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #816 = LHZUX8
  { 817,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #817 = LHZX
  { 818,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #818 = LHZX8
  { 819,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #819 = LI
  { 820,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #820 = LI8
  { 821,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #821 = LIS
  { 822,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #822 = LIS8
  { 823,	3,	1,	4,	39,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #823 = LMW
  { 824,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #824 = LSWI
  { 825,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #825 = LVEBX
  { 826,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #826 = LVEHX
  { 827,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #827 = LVEWX
  { 828,	3,	1,	4,	11,	0, 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #828 = LVSL
  { 829,	3,	1,	4,	11,	0, 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #829 = LVSR
  { 830,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #830 = LVX
  { 831,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #831 = LVXL
  { 832,	3,	1,	4,	40,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #832 = LWA
  { 833,	3,	1,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #833 = LWARX
  { 834,	3,	1,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #834 = LWARXL
  { 835,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #835 = LWAT
  { 836,	4,	2,	4,	38,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #836 = LWAUX
  { 837,	3,	1,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #837 = LWAX
  { 838,	3,	1,	4,	36,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #838 = LWAX_32
  { 839,	3,	1,	4,	40,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #839 = LWA_32
  { 840,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #840 = LWBRX
  { 841,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #841 = LWBRX8
  { 842,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #842 = LWZ
  { 843,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #843 = LWZ8
  { 844,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #844 = LWZCIX
  { 845,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #845 = LWZU
  { 846,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #846 = LWZU8
  { 847,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #847 = LWZUX
  { 848,	4,	2,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #848 = LWZUX8
  { 849,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #849 = LWZX
  { 850,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #850 = LWZX8
  { 851,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #851 = LWZtoc
  { 852,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #852 = LXSD
  { 853,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #853 = LXSDX
  { 854,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #854 = LXSIBZX
  { 855,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #855 = LXSIHZX
  { 856,	3,	1,	4,	120,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #856 = LXSIWAX
  { 857,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #857 = LXSIWZX
  { 858,	3,	1,	4,	120,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #858 = LXSSP
  { 859,	3,	1,	4,	120,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #859 = LXSSPX
  { 860,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #860 = LXV
  { 861,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #861 = LXVB16X
  { 862,	3,	1,	4,	118,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #862 = LXVD2X
  { 863,	3,	1,	4,	122,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #863 = LXVDSX
  { 864,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #864 = LXVH8X
  { 865,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #865 = LXVL
  { 866,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #866 = LXVLL
  { 867,	3,	1,	4,	122,	0|(1ULL<<MCID::MayLoad), 0x40ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #867 = LXVW4X
  { 868,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #868 = LXVWSX
  { 869,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #869 = LXVX
  { 870,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #870 = MBAR
  { 871,	2,	1,	4,	136,	0, 0x21ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #871 = MCRF
  { 872,	2,	1,	4,	138,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #872 = MCRFS
  { 873,	1,	1,	4,	137,	0, 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #873 = MCRXRX
  { 874,	3,	1,	4,	3,	0, 0x1ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #874 = MFBHRBE
  { 875,	1,	1,	4,	43,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #875 = MFCR
  { 876,	1,	1,	4,	43,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #876 = MFCR8
  { 877,	1,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList7, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #877 = MFCTR
  { 878,	1,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList8, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #878 = MFCTR8
  { 879,	2,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #879 = MFDCR
  { 880,	1,	1,	4,	45,	0, 0x1aULL, ImplicitList13, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #880 = MFFS
  { 881,	1,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList13, ImplicitList22, OperandInfo121, -1 ,nullptr },  // Inst #881 = MFFSo
  { 882,	1,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList10, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #882 = MFLR
  { 883,	1,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList12, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #883 = MFLR8
  { 884,	1,	1,	4,	46,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #884 = MFMSR
  { 885,	2,	1,	4,	47,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #885 = MFOCRF
  { 886,	2,	1,	4,	47,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #886 = MFOCRF8
  { 887,	2,	1,	4,	48,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #887 = MFPMR
  { 888,	2,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #888 = MFSPR
  { 889,	2,	1,	4,	44,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #889 = MFSPR8
  { 890,	2,	1,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #890 = MFSR
  { 891,	2,	1,	4,	49,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #891 = MFSRIN
  { 892,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #892 = MFTB
  { 893,	1,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #893 = MFTB8
  { 894,	2,	1,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #894 = MFVRD
  { 895,	1,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #895 = MFVRSAVE
  { 896,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #896 = MFVRSAVEv
  { 897,	1,	1,	4,	23,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #897 = MFVSCR
  { 898,	2,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #898 = MFVSRD
  { 899,	2,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #899 = MFVSRLD
  { 900,	2,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #900 = MFVSRWZ
  { 901,	0,	0,	4,	52,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #901 = MSGSYNC
  { 902,	0,	0,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #902 = MSYNC
  { 903,	2,	0,	4,	135,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #903 = MTCRF
  { 904,	2,	0,	4,	135,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #904 = MTCRF8
  { 905,	1,	0,	4,	54,	0, 0x9ULL, nullptr, ImplicitList7, OperandInfo119, -1 ,nullptr },  // Inst #905 = MTCTR
  { 906,	1,	0,	4,	54,	0, 0x9ULL, nullptr, ImplicitList8, OperandInfo120, -1 ,nullptr },  // Inst #906 = MTCTR8
  { 907,	1,	0,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList8, OperandInfo120, -1 ,nullptr },  // Inst #907 = MTCTR8loop
  { 908,	1,	0,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList7, OperandInfo119, -1 ,nullptr },  // Inst #908 = MTCTRloop
  { 909,	2,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #909 = MTDCR
  { 910,	1,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo2, -1 ,nullptr },  // Inst #910 = MTFSB0
  { 911,	1,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo2, -1 ,nullptr },  // Inst #911 = MTFSB1
  { 912,	4,	0,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #912 = MTFSF
  { 913,	3,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #913 = MTFSFI
  { 914,	3,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #914 = MTFSFIo
  { 915,	2,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo133, -1 ,nullptr },  // Inst #915 = MTFSFb
  { 916,	4,	0,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #916 = MTFSFo
  { 917,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList10, OperandInfo119, -1 ,nullptr },  // Inst #917 = MTLR
  { 918,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList12, OperandInfo120, -1 ,nullptr },  // Inst #918 = MTLR8
  { 919,	2,	0,	4,	56,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #919 = MTMSR
  { 920,	2,	0,	4,	57,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #920 = MTMSRD
  { 921,	2,	1,	4,	135,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #921 = MTOCRF
  { 922,	2,	1,	4,	135,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #922 = MTOCRF8
  { 923,	2,	0,	4,	58,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #923 = MTPMR
  { 924,	2,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #924 = MTSPR
  { 925,	2,	0,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #925 = MTSPR8
  { 926,	2,	0,	4,	59,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #926 = MTSR
  { 927,	2,	0,	4,	59,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #927 = MTSRIN
  { 928,	1,	0,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #928 = MTVRSAVE
  { 929,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #929 = MTVRSAVEv
  { 930,	1,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #930 = MTVSCR
  { 931,	2,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #931 = MTVSRD
  { 932,	3,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #932 = MTVSRDD
  { 933,	2,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #933 = MTVSRWA
  { 934,	2,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #934 = MTVSRWS
  { 935,	2,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #935 = MTVSRWZ
  { 936,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #936 = MULHD
  { 937,	3,	1,	4,	61,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #937 = MULHDU
  { 938,	3,	1,	4,	61,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #938 = MULHDUo
  { 939,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #939 = MULHDo
  { 940,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #940 = MULHW
  { 941,	3,	1,	4,	61,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #941 = MULHWU
  { 942,	3,	1,	4,	61,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #942 = MULHWUo
  { 943,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #943 = MULHWo
  { 944,	3,	1,	4,	62,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #944 = MULLD
  { 945,	3,	1,	4,	62,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #945 = MULLDo
  { 946,	3,	1,	4,	63,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #946 = MULLI
  { 947,	3,	1,	4,	63,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #947 = MULLI8
  { 948,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #948 = MULLW
  { 949,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #949 = MULLWo
  { 950,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #950 = MoveGOTtoLR
  { 951,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #951 = MovePCtoLR
  { 952,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #952 = MovePCtoLR8
  { 953,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #953 = NAND
  { 954,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #954 = NAND8
  { 955,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #955 = NAND8o
  { 956,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #956 = NANDo
  { 957,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #957 = NAP
  { 958,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #958 = NEG
  { 959,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #959 = NEG8
  { 960,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo35, -1 ,nullptr },  // Inst #960 = NEG8o
  { 961,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo34, -1 ,nullptr },  // Inst #961 = NEGo
  { 962,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #962 = NOP
  { 963,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #963 = NOP_GT_PWR6
  { 964,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #964 = NOP_GT_PWR7
  { 965,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #965 = NOR
  { 966,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #966 = NOR8
  { 967,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #967 = NOR8o
  { 968,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #968 = NORo
  { 969,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #969 = OR
  { 970,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #970 = OR8
  { 971,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #971 = OR8o
  { 972,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #972 = ORC
  { 973,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #973 = ORC8
  { 974,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #974 = ORC8o
  { 975,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #975 = ORCo
  { 976,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #976 = ORI
  { 977,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #977 = ORI8
  { 978,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #978 = ORIS
  { 979,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #979 = ORIS8
  { 980,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #980 = ORo
  { 981,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #981 = POPCNTD
  { 982,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #982 = POPCNTW
  { 983,	1,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #983 = PPC32GOT
  { 984,	2,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #984 = PPC32PICGOT
  { 985,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #985 = QVALIGNI
  { 986,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #986 = QVALIGNIb
  { 987,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #987 = QVALIGNIs
  { 988,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #988 = QVESPLATI
  { 989,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #989 = QVESPLATIb
  { 990,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #990 = QVESPLATIs
  { 991,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #991 = QVFABS
  { 992,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #992 = QVFABSs
  { 993,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #993 = QVFADD
  { 994,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #994 = QVFADDS
  { 995,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #995 = QVFADDSs
  { 996,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #996 = QVFCFID
  { 997,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #997 = QVFCFIDS
  { 998,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #998 = QVFCFIDU
  { 999,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #999 = QVFCFIDUS
  { 1000,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1000 = QVFCFIDb
  { 1001,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1001 = QVFCMPEQ
  { 1002,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1002 = QVFCMPEQb
  { 1003,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1003 = QVFCMPEQbs
  { 1004,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1004 = QVFCMPGT
  { 1005,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1005 = QVFCMPGTb
  { 1006,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1006 = QVFCMPGTbs
  { 1007,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1007 = QVFCMPLT
  { 1008,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1008 = QVFCMPLTb
  { 1009,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1009 = QVFCMPLTbs
  { 1010,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1010 = QVFCPSGN
  { 1011,	3,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1011 = QVFCPSGNs
  { 1012,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1012 = QVFCTID
  { 1013,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1013 = QVFCTIDU
  { 1014,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1014 = QVFCTIDUZ
  { 1015,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1015 = QVFCTIDZ
  { 1016,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1016 = QVFCTIDb
  { 1017,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1017 = QVFCTIW
  { 1018,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1018 = QVFCTIWU
  { 1019,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1019 = QVFCTIWUZ
  { 1020,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1020 = QVFCTIWZ
  { 1021,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #1021 = QVFLOGICAL
  { 1022,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #1022 = QVFLOGICALb
  { 1023,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #1023 = QVFLOGICALs
  { 1024,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1024 = QVFMADD
  { 1025,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1025 = QVFMADDS
  { 1026,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1026 = QVFMADDSs
  { 1027,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1027 = QVFMR
  { 1028,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1028 = QVFMRb
  { 1029,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1029 = QVFMRs
  { 1030,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1030 = QVFMSUB
  { 1031,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1031 = QVFMSUBS
  { 1032,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1032 = QVFMSUBSs
  { 1033,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1033 = QVFMUL
  { 1034,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1034 = QVFMULS
  { 1035,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1035 = QVFMULSs
  { 1036,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1036 = QVFNABS
  { 1037,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1037 = QVFNABSs
  { 1038,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1038 = QVFNEG
  { 1039,	2,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1039 = QVFNEGs
  { 1040,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1040 = QVFNMADD
  { 1041,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1041 = QVFNMADDS
  { 1042,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1042 = QVFNMADDSs
  { 1043,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1043 = QVFNMSUB
  { 1044,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1044 = QVFNMSUBS
  { 1045,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1045 = QVFNMSUBSs
  { 1046,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1046 = QVFPERM
  { 1047,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #1047 = QVFPERMs
  { 1048,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1048 = QVFRE
  { 1049,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1049 = QVFRES
  { 1050,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1050 = QVFRESs
  { 1051,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1051 = QVFRIM
  { 1052,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1052 = QVFRIMs
  { 1053,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1053 = QVFRIN
  { 1054,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1054 = QVFRINs
  { 1055,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1055 = QVFRIP
  { 1056,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1056 = QVFRIPs
  { 1057,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1057 = QVFRIZ
  { 1058,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1058 = QVFRIZs
  { 1059,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1059 = QVFRSP
  { 1060,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #1060 = QVFRSPs
  { 1061,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1061 = QVFRSQRTE
  { 1062,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1062 = QVFRSQRTES
  { 1063,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1063 = QVFRSQRTESs
  { 1064,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1064 = QVFSEL
  { 1065,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #1065 = QVFSELb
  { 1066,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1066 = QVFSELbb
  { 1067,	4,	1,	4,	64,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #1067 = QVFSELbs
  { 1068,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1068 = QVFSUB
  { 1069,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1069 = QVFSUBS
  { 1070,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1070 = QVFSUBSs
  { 1071,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1071 = QVFTSTNAN
  { 1072,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1072 = QVFTSTNANb
  { 1073,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1073 = QVFTSTNANbs
  { 1074,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1074 = QVFXMADD
  { 1075,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1075 = QVFXMADDS
  { 1076,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1076 = QVFXMUL
  { 1077,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1077 = QVFXMULS
  { 1078,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1078 = QVFXXCPNMADD
  { 1079,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1079 = QVFXXCPNMADDS
  { 1080,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1080 = QVFXXMADD
  { 1081,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1081 = QVFXXMADDS
  { 1082,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1082 = QVFXXNPMADD
  { 1083,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1083 = QVFXXNPMADDS
  { 1084,	2,	1,	4,	64,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, ImplicitList13, nullptr, OperandInfo161, -1 ,nullptr },  // Inst #1084 = QVGPCI
  { 1085,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1085 = QVLFCDUX
  { 1086,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1086 = QVLFCDUXA
  { 1087,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1087 = QVLFCDX
  { 1088,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1088 = QVLFCDXA
  { 1089,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1089 = QVLFCSUX
  { 1090,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1090 = QVLFCSUXA
  { 1091,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1091 = QVLFCSX
  { 1092,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1092 = QVLFCSXA
  { 1093,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1093 = QVLFCSXs
  { 1094,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1094 = QVLFDUX
  { 1095,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1095 = QVLFDUXA
  { 1096,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1096 = QVLFDX
  { 1097,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1097 = QVLFDXA
  { 1098,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1098 = QVLFDXb
  { 1099,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1099 = QVLFIWAX
  { 1100,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1100 = QVLFIWAXA
  { 1101,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1101 = QVLFIWZX
  { 1102,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1102 = QVLFIWZXA
  { 1103,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1103 = QVLFSUX
  { 1104,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1104 = QVLFSUXA
  { 1105,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1105 = QVLFSX
  { 1106,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1106 = QVLFSXA
  { 1107,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1107 = QVLFSXb
  { 1108,	3,	1,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1108 = QVLFSXs
  { 1109,	3,	1,	4,	33,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1109 = QVLPCLDX
  { 1110,	3,	1,	4,	33,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1110 = QVLPCLSX
  { 1111,	2,	1,	4,	33,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1111 = QVLPCLSXint
  { 1112,	3,	1,	4,	33,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1112 = QVLPCRDX
  { 1113,	3,	1,	4,	33,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1113 = QVLPCRSX
  { 1114,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1114 = QVSTFCDUX
  { 1115,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1115 = QVSTFCDUXA
  { 1116,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1116 = QVSTFCDUXI
  { 1117,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1117 = QVSTFCDUXIA
  { 1118,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1118 = QVSTFCDX
  { 1119,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1119 = QVSTFCDXA
  { 1120,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1120 = QVSTFCDXI
  { 1121,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1121 = QVSTFCDXIA
  { 1122,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1122 = QVSTFCSUX
  { 1123,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1123 = QVSTFCSUXA
  { 1124,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1124 = QVSTFCSUXI
  { 1125,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1125 = QVSTFCSUXIA
  { 1126,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1126 = QVSTFCSX
  { 1127,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1127 = QVSTFCSXA
  { 1128,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1128 = QVSTFCSXI
  { 1129,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1129 = QVSTFCSXIA
  { 1130,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1130 = QVSTFCSXs
  { 1131,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1131 = QVSTFDUX
  { 1132,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1132 = QVSTFDUXA
  { 1133,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1133 = QVSTFDUXI
  { 1134,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1134 = QVSTFDUXIA
  { 1135,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1135 = QVSTFDX
  { 1136,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1136 = QVSTFDXA
  { 1137,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1137 = QVSTFDXI
  { 1138,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1138 = QVSTFDXIA
  { 1139,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1139 = QVSTFDXb
  { 1140,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1140 = QVSTFIWX
  { 1141,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1141 = QVSTFIWXA
  { 1142,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1142 = QVSTFSUX
  { 1143,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1143 = QVSTFSUXA
  { 1144,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1144 = QVSTFSUXI
  { 1145,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1145 = QVSTFSUXIA
  { 1146,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1146 = QVSTFSUXs
  { 1147,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1147 = QVSTFSX
  { 1148,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1148 = QVSTFSXA
  { 1149,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1149 = QVSTFSXI
  { 1150,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1150 = QVSTFSXIA
  { 1151,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1151 = QVSTFSXs
  { 1152,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1152 = RESTORE_CR
  { 1153,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1153 = RESTORE_CRBIT
  { 1154,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1154 = RESTORE_VRSAVE
  { 1155,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1155 = RFCI
  { 1156,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1156 = RFDI
  { 1157,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1157 = RFEBB
  { 1158,	0,	0,	4,	67,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1158 = RFI
  { 1159,	0,	0,	4,	68,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1159 = RFID
  { 1160,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1160 = RFMCI
  { 1161,	4,	1,	4,	133,	0, 0x8ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #1161 = RLDCL
  { 1162,	4,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo173, -1 ,nullptr },  // Inst #1162 = RLDCLo
  { 1163,	4,	1,	4,	133,	0, 0x8ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #1163 = RLDCR
  { 1164,	4,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo173, -1 ,nullptr },  // Inst #1164 = RLDCRo
  { 1165,	4,	1,	4,	132,	0, 0x8ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #1165 = RLDIC
  { 1166,	4,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #1166 = RLDICL
  { 1167,	4,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #1167 = RLDICL_32_64
  { 1168,	4,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo51, -1 ,nullptr },  // Inst #1168 = RLDICLo
  { 1169,	4,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #1169 = RLDICR
  { 1170,	4,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo51, -1 ,nullptr },  // Inst #1170 = RLDICRo
  { 1171,	4,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo51, -1 ,nullptr },  // Inst #1171 = RLDICo
  { 1172,	5,	1,	4,	134,	0, 0x8ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #1172 = RLDIMI
  { 1173,	5,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo175, -1 ,nullptr },  // Inst #1173 = RLDIMIo
  { 1174,	6,	1,	4,	71,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, nullptr, OperandInfo176, -1 ,nullptr },  // Inst #1174 = RLWIMI
  { 1175,	6,	1,	4,	71,	0, 0xcULL, nullptr, nullptr, OperandInfo177, -1 ,nullptr },  // Inst #1175 = RLWIMI8
  { 1176,	6,	1,	4,	71,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo177, -1 ,nullptr },  // Inst #1176 = RLWIMI8o
  { 1177,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1177 = RLWIMIbm
  { 1178,	6,	1,	4,	71,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList1, OperandInfo176, -1 ,nullptr },  // Inst #1178 = RLWIMIo
  { 1179,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1179 = RLWIMIobm
  { 1180,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1180 = RLWINM
  { 1181,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo180, -1 ,nullptr },  // Inst #1181 = RLWINM8
  { 1182,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo180, -1 ,nullptr },  // Inst #1182 = RLWINM8o
  { 1183,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1183 = RLWINMbm
  { 1184,	5,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo179, -1 ,nullptr },  // Inst #1184 = RLWINMo
  { 1185,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1185 = RLWINMobm
  { 1186,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #1186 = RLWNM
  { 1187,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1187 = RLWNM8
  { 1188,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo182, -1 ,nullptr },  // Inst #1188 = RLWNM8o
  { 1189,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1189 = RLWNMbm
  { 1190,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo181, -1 ,nullptr },  // Inst #1190 = RLWNMo
  { 1191,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1191 = RLWNMobm
  { 1192,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1192 = ROTRDI
  { 1193,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1193 = ROTRDIo
  { 1194,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1194 = ROTRWI
  { 1195,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1195 = ROTRWIo
  { 1196,	2,	2,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1196 = ReadTB
  { 1197,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1197 = SC
  { 1198,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #1198 = SELECT_CC_F4
  { 1199,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1199 = SELECT_CC_F8
  { 1200,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1200 = SELECT_CC_I4
  { 1201,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo186, -1 ,nullptr },  // Inst #1201 = SELECT_CC_I8
  { 1202,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo187, -1 ,nullptr },  // Inst #1202 = SELECT_CC_QBRC
  { 1203,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo188, -1 ,nullptr },  // Inst #1203 = SELECT_CC_QFRC
  { 1204,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo189, -1 ,nullptr },  // Inst #1204 = SELECT_CC_QSRC
  { 1205,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1205 = SELECT_CC_VRRC
  { 1206,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1206 = SELECT_CC_VSFRC
  { 1207,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1207 = SELECT_CC_VSRC
  { 1208,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #1208 = SELECT_CC_VSSRC
  { 1209,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1209 = SELECT_F4
  { 1210,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1210 = SELECT_F8
  { 1211,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1211 = SELECT_I4
  { 1212,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1212 = SELECT_I8
  { 1213,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1213 = SELECT_QBRC
  { 1214,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1214 = SELECT_QFRC
  { 1215,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1215 = SELECT_QSRC
  { 1216,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #1216 = SELECT_VRRC
  { 1217,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1217 = SELECT_VSFRC
  { 1218,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1218 = SELECT_VSRC
  { 1219,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1219 = SELECT_VSSRC
  { 1220,	0,	0,	4,	72,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1220 = SLBIA
  { 1221,	1,	0,	4,	73,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1221 = SLBIE
  { 1222,	2,	0,	4,	74,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1222 = SLBIEG
  { 1223,	2,	1,	4,	75,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1223 = SLBMFEE
  { 1224,	2,	1,	4,	76,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1224 = SLBMFEV
  { 1225,	2,	0,	4,	77,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1225 = SLBMTE
  { 1226,	0,	0,	4,	78,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1226 = SLBSYNC
  { 1227,	3,	1,	4,	131,	0, 0x8ULL, nullptr, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1227 = SLD
  { 1228,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1228 = SLDI
  { 1229,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1229 = SLDIo
  { 1230,	3,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo201, -1 ,nullptr },  // Inst #1230 = SLDo
  { 1231,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1231 = SLW
  { 1232,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1232 = SLW8
  { 1233,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #1233 = SLW8o
  { 1234,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1234 = SLWI
  { 1235,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1235 = SLWIo
  { 1236,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #1236 = SLWo
  { 1237,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1237 = SPILL_CR
  { 1238,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1238 = SPILL_CRBIT
  { 1239,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1239 = SPILL_VRSAVE
  { 1240,	3,	1,	4,	131,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo201, -1 ,nullptr },  // Inst #1240 = SRAD
  { 1241,	3,	1,	4,	132,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo30, -1 ,nullptr },  // Inst #1241 = SRADI
  { 1242,	3,	1,	4,	70,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo30, -1 ,nullptr },  // Inst #1242 = SRADIo
  { 1243,	3,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo201, -1 ,nullptr },  // Inst #1243 = SRADo
  { 1244,	3,	1,	4,	79,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo26, -1 ,nullptr },  // Inst #1244 = SRAW
  { 1245,	3,	1,	4,	79,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo27, -1 ,nullptr },  // Inst #1245 = SRAWI
  { 1246,	3,	1,	4,	79,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo27, -1 ,nullptr },  // Inst #1246 = SRAWIo
  { 1247,	3,	1,	4,	79,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo26, -1 ,nullptr },  // Inst #1247 = SRAWo
  { 1248,	3,	1,	4,	131,	0, 0x8ULL, nullptr, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1248 = SRD
  { 1249,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1249 = SRDI
  { 1250,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1250 = SRDIo
  { 1251,	3,	1,	4,	69,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo201, -1 ,nullptr },  // Inst #1251 = SRDo
  { 1252,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1252 = SRW
  { 1253,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1253 = SRW8
  { 1254,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #1254 = SRW8o
  { 1255,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1255 = SRWI
  { 1256,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1256 = SRWIo
  { 1257,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #1257 = SRWo
  { 1258,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1258 = STB
  { 1259,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1259 = STB8
  { 1260,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1260 = STBCIX
  { 1261,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #1261 = STBCX
  { 1262,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1262 = STBU
  { 1263,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1263 = STBU8
  { 1264,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1264 = STBUX
  { 1265,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1265 = STBUX8
  { 1266,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #1266 = STBX
  { 1267,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1267 = STBX8
  { 1268,	3,	0,	4,	82,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1268 = STD
  { 1269,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1269 = STDAT
  { 1270,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1270 = STDBRX
  { 1271,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1271 = STDCIX
  { 1272,	3,	0,	4,	83,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo95, -1 ,nullptr },  // Inst #1272 = STDCX
  { 1273,	4,	1,	4,	84,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1273 = STDU
  { 1274,	4,	1,	4,	85,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1274 = STDUX
  { 1275,	3,	0,	4,	82,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1275 = STDX
  { 1276,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #1276 = STFD
  { 1277,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1277 = STFDU
  { 1278,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1278 = STFDUX
  { 1279,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1279 = STFDX
  { 1280,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #1280 = STFIWX
  { 1281,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #1281 = STFS
  { 1282,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1282 = STFSU
  { 1283,	4,	1,	4,	66,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1283 = STFSUX
  { 1284,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #1284 = STFSX
  { 1285,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1285 = STH
  { 1286,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1286 = STH8
  { 1287,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #1287 = STHBRX
  { 1288,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1288 = STHCIX
  { 1289,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #1289 = STHCX
  { 1290,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1290 = STHU
  { 1291,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1291 = STHU8
  { 1292,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1292 = STHUX
  { 1293,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1293 = STHUX8
  { 1294,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #1294 = STHX
  { 1295,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1295 = STHX8
  { 1296,	3,	0,	4,	39,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1296 = STMW
  { 1297,	0,	0,	4,	86,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1297 = STOP
  { 1298,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1298 = STSWI
  { 1299,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1299 = STVEBX
  { 1300,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1300 = STVEHX
  { 1301,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1301 = STVEWX
  { 1302,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1302 = STVX
  { 1303,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1303 = STVXL
  { 1304,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1304 = STW
  { 1305,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #1305 = STW8
  { 1306,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1306 = STWAT
  { 1307,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #1307 = STWBRX
  { 1308,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1308 = STWCIX
  { 1309,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo89, -1 ,nullptr },  // Inst #1309 = STWCX
  { 1310,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1310 = STWU
  { 1311,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1311 = STWU8
  { 1312,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1312 = STWUX
  { 1313,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1313 = STWUX8
  { 1314,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #1314 = STWX
  { 1315,	3,	0,	4,	23,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1315 = STWX8
  { 1316,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1316 = STXSD
  { 1317,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1317 = STXSDX
  { 1318,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1318 = STXSIBX
  { 1319,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1319 = STXSIBXv
  { 1320,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1320 = STXSIHX
  { 1321,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #1321 = STXSIHXv
  { 1322,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #1322 = STXSIWX
  { 1323,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #1323 = STXSSP
  { 1324,	3,	0,	4,	123,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #1324 = STXSSPX
  { 1325,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #1325 = STXV
  { 1326,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #1326 = STXVB16X
  { 1327,	3,	0,	4,	124,	0|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #1327 = STXVD2X
  { 1328,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #1328 = STXVH8X
  { 1329,	3,	0,	4,	11,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #1329 = STXVL
  { 1330,	3,	0,	4,	11,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #1330 = STXVLL
  { 1331,	3,	0,	4,	124,	0|(1ULL<<MCID::MayStore), 0x40ULL, ImplicitList13, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #1331 = STXVW4X
  { 1332,	3,	0,	4,	65,	0|(1ULL<<MCID::MayStore), 0x40ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #1332 = STXVX
  { 1333,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1333 = SUBF
  { 1334,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1334 = SUBF8
  { 1335,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #1335 = SUBF8o
  { 1336,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo26, -1 ,nullptr },  // Inst #1336 = SUBFC
  { 1337,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo28, -1 ,nullptr },  // Inst #1337 = SUBFC8
  { 1338,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo28, -1 ,nullptr },  // Inst #1338 = SUBFC8o
  { 1339,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo26, -1 ,nullptr },  // Inst #1339 = SUBFCo
  { 1340,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo26, -1 ,nullptr },  // Inst #1340 = SUBFE
  { 1341,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo28, -1 ,nullptr },  // Inst #1341 = SUBFE8
  { 1342,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo28, -1 ,nullptr },  // Inst #1342 = SUBFE8o
  { 1343,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo26, -1 ,nullptr },  // Inst #1343 = SUBFEo
  { 1344,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo27, -1 ,nullptr },  // Inst #1344 = SUBFIC
  { 1345,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo30, -1 ,nullptr },  // Inst #1345 = SUBFIC8
  { 1346,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo34, -1 ,nullptr },  // Inst #1346 = SUBFME
  { 1347,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo35, -1 ,nullptr },  // Inst #1347 = SUBFME8
  { 1348,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #1348 = SUBFME8o
  { 1349,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo34, -1 ,nullptr },  // Inst #1349 = SUBFMEo
  { 1350,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo34, -1 ,nullptr },  // Inst #1350 = SUBFZE
  { 1351,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo35, -1 ,nullptr },  // Inst #1351 = SUBFZE8
  { 1352,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo35, -1 ,nullptr },  // Inst #1352 = SUBFZE8o
  { 1353,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo34, -1 ,nullptr },  // Inst #1353 = SUBFZEo
  { 1354,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #1354 = SUBFo
  { 1355,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1355 = SUBI
  { 1356,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1356 = SUBIC
  { 1357,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1357 = SUBICo
  { 1358,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1358 = SUBIS
  { 1359,	1,	0,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1359 = SYNC
  { 1360,	2,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1360 = TABORT
  { 1361,	4,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1361 = TABORTDC
  { 1362,	4,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1362 = TABORTDCI
  { 1363,	4,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1363 = TABORTWC
  { 1364,	4,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1364 = TABORTWCI
  { 1365,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1365 = TAILB
  { 1366,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1366 = TAILB8
  { 1367,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1367 = TAILBA
  { 1368,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1368 = TAILBA8
  { 1369,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, nullptr, nullptr, -1 ,nullptr },  // Inst #1369 = TAILBCTR
  { 1370,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, nullptr, nullptr, -1 ,nullptr },  // Inst #1370 = TAILBCTR8
  { 1371,	2,	1,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1371 = TBEGIN
  { 1372,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1372 = TCHECK
  { 1373,	1,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1373 = TCHECK_RET
  { 1374,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1374 = TCRETURNai
  { 1375,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1375 = TCRETURNai8
  { 1376,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1376 = TCRETURNdi
  { 1377,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1377 = TCRETURNdi8
  { 1378,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1378 = TCRETURNri
  { 1379,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1379 = TCRETURNri8
  { 1380,	3,	0,	4,	87,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1380 = TD
  { 1381,	3,	0,	4,	87,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1381 = TDI
  { 1382,	2,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1382 = TEND
  { 1383,	0,	0,	4,	88,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1383 = TLBIA
  { 1384,	2,	0,	4,	89,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1384 = TLBIE
  { 1385,	1,	0,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1385 = TLBIEL
  { 1386,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1386 = TLBIVAX
  { 1387,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1387 = TLBLD
  { 1388,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1388 = TLBLI
  { 1389,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1389 = TLBRE
  { 1390,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1390 = TLBRE2
  { 1391,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1391 = TLBSX
  { 1392,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1392 = TLBSX2
  { 1393,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1393 = TLBSX2D
  { 1394,	0,	0,	4,	91,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1394 = TLBSYNC
  { 1395,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1395 = TLBWE
  { 1396,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1396 = TLBWE2
  { 1397,	0,	0,	4,	11,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1397 = TRAP
  { 1398,	1,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #1398 = TRECHKPT
  { 1399,	2,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1399 = TRECLAIM
  { 1400,	2,	1,	4,	54,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1400 = TSR
  { 1401,	3,	0,	4,	92,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #1401 = TW
  { 1402,	3,	0,	4,	92,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1402 = TWI
  { 1403,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1403 = UPDATE_VRSAVE
  { 1404,	3,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1404 = UpdateGBR
  { 1405,	3,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1405 = VABSDUB
  { 1406,	3,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1406 = VABSDUH
  { 1407,	3,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1407 = VABSDUW
  { 1408,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1408 = VADDCUQ
  { 1409,	3,	1,	4,	94,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1409 = VADDCUW
  { 1410,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1410 = VADDECUQ
  { 1411,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1411 = VADDEUQM
  { 1412,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1412 = VADDFP
  { 1413,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1413 = VADDSBS
  { 1414,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1414 = VADDSHS
  { 1415,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1415 = VADDSWS
  { 1416,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1416 = VADDUBM
  { 1417,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1417 = VADDUBS
  { 1418,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1418 = VADDUDM
  { 1419,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1419 = VADDUHM
  { 1420,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1420 = VADDUHS
  { 1421,	3,	1,	4,	111,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1421 = VADDUQM
  { 1422,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1422 = VADDUWM
  { 1423,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1423 = VADDUWS
  { 1424,	3,	1,	4,	94,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1424 = VAND
  { 1425,	3,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1425 = VANDC
  { 1426,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1426 = VAVGSB
  { 1427,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1427 = VAVGSH
  { 1428,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1428 = VAVGSW
  { 1429,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1429 = VAVGUB
  { 1430,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1430 = VAVGUH
  { 1431,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1431 = VAVGUW
  { 1432,	3,	1,	4,	104,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1432 = VBPERMD
  { 1433,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1433 = VBPERMQ
  { 1434,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1434 = VCFSX
  { 1435,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1435 = VCFSX_0
  { 1436,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1436 = VCFUX
  { 1437,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1437 = VCFUX_0
  { 1438,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1438 = VCIPHER
  { 1439,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1439 = VCIPHERLAST
  { 1440,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1440 = VCLZB
  { 1441,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1441 = VCLZD
  { 1442,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1442 = VCLZH
  { 1443,	2,	1,	4,	111,	0, 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1443 = VCLZLSBB
  { 1444,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1444 = VCLZW
  { 1445,	3,	1,	4,	105,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1445 = VCMPBFP
  { 1446,	3,	1,	4,	105,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1446 = VCMPBFPo
  { 1447,	3,	1,	4,	105,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1447 = VCMPEQFP
  { 1448,	3,	1,	4,	105,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1448 = VCMPEQFPo
  { 1449,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1449 = VCMPEQUB
  { 1450,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1450 = VCMPEQUBo
  { 1451,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1451 = VCMPEQUD
  { 1452,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1452 = VCMPEQUDo
  { 1453,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1453 = VCMPEQUH
  { 1454,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1454 = VCMPEQUHo
  { 1455,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1455 = VCMPEQUW
  { 1456,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1456 = VCMPEQUWo
  { 1457,	3,	1,	4,	105,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1457 = VCMPGEFP
  { 1458,	3,	1,	4,	105,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1458 = VCMPGEFPo
  { 1459,	3,	1,	4,	105,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1459 = VCMPGTFP
  { 1460,	3,	1,	4,	105,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1460 = VCMPGTFPo
  { 1461,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1461 = VCMPGTSB
  { 1462,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1462 = VCMPGTSBo
  { 1463,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1463 = VCMPGTSD
  { 1464,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1464 = VCMPGTSDo
  { 1465,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1465 = VCMPGTSH
  { 1466,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1466 = VCMPGTSHo
  { 1467,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1467 = VCMPGTSW
  { 1468,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1468 = VCMPGTSWo
  { 1469,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1469 = VCMPGTUB
  { 1470,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1470 = VCMPGTUBo
  { 1471,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1471 = VCMPGTUD
  { 1472,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1472 = VCMPGTUDo
  { 1473,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1473 = VCMPGTUH
  { 1474,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1474 = VCMPGTUHo
  { 1475,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1475 = VCMPGTUW
  { 1476,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1476 = VCMPGTUWo
  { 1477,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1477 = VCMPNEB
  { 1478,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1478 = VCMPNEBo
  { 1479,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1479 = VCMPNEH
  { 1480,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1480 = VCMPNEHo
  { 1481,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1481 = VCMPNEW
  { 1482,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1482 = VCMPNEWo
  { 1483,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1483 = VCMPNEZB
  { 1484,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1484 = VCMPNEZBo
  { 1485,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1485 = VCMPNEZH
  { 1486,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1486 = VCMPNEZHo
  { 1487,	3,	1,	4,	96,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1487 = VCMPNEZW
  { 1488,	3,	1,	4,	96,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo47, -1 ,nullptr },  // Inst #1488 = VCMPNEZWo
  { 1489,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1489 = VCTSXS
  { 1490,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1490 = VCTSXS_0
  { 1491,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1491 = VCTUXS
  { 1492,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1492 = VCTUXS_0
  { 1493,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1493 = VCTZB
  { 1494,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1494 = VCTZD
  { 1495,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1495 = VCTZH
  { 1496,	2,	1,	4,	111,	0, 0x0ULL, nullptr, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1496 = VCTZLSBB
  { 1497,	2,	1,	4,	103,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1497 = VCTZW
  { 1498,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1498 = VEQV
  { 1499,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1499 = VEXPTEFP
  { 1500,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1500 = VEXTRACTD
  { 1501,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1501 = VEXTRACTUB
  { 1502,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1502 = VEXTRACTUH
  { 1503,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1503 = VEXTRACTUW
  { 1504,	2,	1,	4,	95,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1504 = VEXTSB2D
  { 1505,	2,	1,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1505 = VEXTSB2Ds
  { 1506,	2,	1,	4,	95,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1506 = VEXTSB2W
  { 1507,	2,	1,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1507 = VEXTSB2Ws
  { 1508,	2,	1,	4,	95,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1508 = VEXTSH2D
  { 1509,	2,	1,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1509 = VEXTSH2Ds
  { 1510,	2,	1,	4,	95,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1510 = VEXTSH2W
  { 1511,	2,	1,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1511 = VEXTSH2Ws
  { 1512,	2,	1,	4,	95,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1512 = VEXTSW2D
  { 1513,	2,	1,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1513 = VEXTSW2Ds
  { 1514,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1514 = VEXTUBLX
  { 1515,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1515 = VEXTUBRX
  { 1516,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1516 = VEXTUHLX
  { 1517,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1517 = VEXTUHRX
  { 1518,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1518 = VEXTUWLX
  { 1519,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1519 = VEXTUWRX
  { 1520,	2,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1520 = VGBBD
  { 1521,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1521 = VINSERTB
  { 1522,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1522 = VINSERTD
  { 1523,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1523 = VINSERTH
  { 1524,	3,	1,	4,	111,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1524 = VINSERTW
  { 1525,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1525 = VLOGEFP
  { 1526,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1526 = VMADDFP
  { 1527,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1527 = VMAXFP
  { 1528,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1528 = VMAXSB
  { 1529,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1529 = VMAXSD
  { 1530,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1530 = VMAXSH
  { 1531,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1531 = VMAXSW
  { 1532,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1532 = VMAXUB
  { 1533,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1533 = VMAXUD
  { 1534,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1534 = VMAXUH
  { 1535,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1535 = VMAXUW
  { 1536,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1536 = VMHADDSHS
  { 1537,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1537 = VMHRADDSHS
  { 1538,	3,	1,	4,	104,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1538 = VMINFP
  { 1539,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1539 = VMINSB
  { 1540,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1540 = VMINSD
  { 1541,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1541 = VMINSH
  { 1542,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1542 = VMINSW
  { 1543,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1543 = VMINUB
  { 1544,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1544 = VMINUD
  { 1545,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1545 = VMINUH
  { 1546,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1546 = VMINUW
  { 1547,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1547 = VMLADDUHM
  { 1548,	3,	1,	4,	94,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1548 = VMRGEW
  { 1549,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1549 = VMRGHB
  { 1550,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1550 = VMRGHH
  { 1551,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1551 = VMRGHW
  { 1552,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1552 = VMRGLB
  { 1553,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1553 = VMRGLH
  { 1554,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1554 = VMRGLW
  { 1555,	3,	1,	4,	94,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1555 = VMRGOW
  { 1556,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1556 = VMSUMMBM
  { 1557,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1557 = VMSUMSHM
  { 1558,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1558 = VMSUMSHS
  { 1559,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1559 = VMSUMUBM
  { 1560,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1560 = VMSUMUHM
  { 1561,	4,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1561 = VMSUMUHS
  { 1562,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1562 = VMUL10CUQ
  { 1563,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1563 = VMUL10ECUQ
  { 1564,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1564 = VMUL10EUQ
  { 1565,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1565 = VMUL10UQ
  { 1566,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1566 = VMULESB
  { 1567,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1567 = VMULESH
  { 1568,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1568 = VMULESW
  { 1569,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1569 = VMULEUB
  { 1570,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1570 = VMULEUH
  { 1571,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1571 = VMULEUW
  { 1572,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1572 = VMULOSB
  { 1573,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1573 = VMULOSH
  { 1574,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1574 = VMULOSW
  { 1575,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1575 = VMULOUB
  { 1576,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1576 = VMULOUH
  { 1577,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1577 = VMULOUW
  { 1578,	3,	1,	4,	107,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1578 = VMULUWM
  { 1579,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1579 = VNAND
  { 1580,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1580 = VNCIPHER
  { 1581,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1581 = VNCIPHERLAST
  { 1582,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1582 = VNEGD
  { 1583,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1583 = VNEGW
  { 1584,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1584 = VNMSUBFP
  { 1585,	3,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1585 = VNOR
  { 1586,	3,	1,	4,	94,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1586 = VOR
  { 1587,	3,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1587 = VORC
  { 1588,	4,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1588 = VPERM
  { 1589,	4,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1589 = VPERMR
  { 1590,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1590 = VPERMXOR
  { 1591,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1591 = VPKPX
  { 1592,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1592 = VPKSDSS
  { 1593,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1593 = VPKSDUS
  { 1594,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1594 = VPKSHSS
  { 1595,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1595 = VPKSHUS
  { 1596,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1596 = VPKSWSS
  { 1597,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1597 = VPKSWUS
  { 1598,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1598 = VPKUDUM
  { 1599,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1599 = VPKUDUS
  { 1600,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1600 = VPKUHUM
  { 1601,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1601 = VPKUHUS
  { 1602,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1602 = VPKUWUM
  { 1603,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1603 = VPKUWUS
  { 1604,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1604 = VPMSUMB
  { 1605,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1605 = VPMSUMD
  { 1606,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1606 = VPMSUMH
  { 1607,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1607 = VPMSUMW
  { 1608,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1608 = VPOPCNTB
  { 1609,	2,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1609 = VPOPCNTD
  { 1610,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1610 = VPOPCNTH
  { 1611,	2,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1611 = VPOPCNTW
  { 1612,	2,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1612 = VPRTYBD
  { 1613,	2,	1,	4,	111,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1613 = VPRTYBQ
  { 1614,	2,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1614 = VPRTYBW
  { 1615,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1615 = VREFP
  { 1616,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1616 = VRFIM
  { 1617,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1617 = VRFIN
  { 1618,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1618 = VRFIP
  { 1619,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1619 = VRFIZ
  { 1620,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1620 = VRLB
  { 1621,	3,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1621 = VRLD
  { 1622,	4,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1622 = VRLDMI
  { 1623,	3,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1623 = VRLDNM
  { 1624,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1624 = VRLH
  { 1625,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1625 = VRLW
  { 1626,	4,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1626 = VRLWMI
  { 1627,	3,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1627 = VRLWNM
  { 1628,	2,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1628 = VRSQRTEFP
  { 1629,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1629 = VSBOX
  { 1630,	4,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1630 = VSEL
  { 1631,	4,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1631 = VSHASIGMAD
  { 1632,	4,	1,	4,	99,	0, 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1632 = VSHASIGMAW
  { 1633,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1633 = VSL
  { 1634,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1634 = VSLB
  { 1635,	3,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1635 = VSLD
  { 1636,	4,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #1636 = VSLDOI
  { 1637,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1637 = VSLH
  { 1638,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1638 = VSLO
  { 1639,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1639 = VSLV
  { 1640,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1640 = VSLW
  { 1641,	3,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1641 = VSPLTB
  { 1642,	3,	1,	4,	64,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1642 = VSPLTBs
  { 1643,	3,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1643 = VSPLTH
  { 1644,	3,	1,	4,	64,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x28ULL, nullptr, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1644 = VSPLTHs
  { 1645,	2,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1645 = VSPLTISB
  { 1646,	2,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1646 = VSPLTISH
  { 1647,	2,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1647 = VSPLTISW
  { 1648,	3,	1,	4,	112,	0, 0x28ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1648 = VSPLTW
  { 1649,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1649 = VSR
  { 1650,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1650 = VSRAB
  { 1651,	3,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1651 = VSRAD
  { 1652,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1652 = VSRAH
  { 1653,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1653 = VSRAW
  { 1654,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1654 = VSRB
  { 1655,	3,	1,	4,	100,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1655 = VSRD
  { 1656,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1656 = VSRH
  { 1657,	3,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1657 = VSRO
  { 1658,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1658 = VSRV
  { 1659,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1659 = VSRW
  { 1660,	3,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1660 = VSUBCUQ
  { 1661,	3,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1661 = VSUBCUW
  { 1662,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1662 = VSUBECUQ
  { 1663,	4,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1663 = VSUBEUQM
  { 1664,	3,	1,	4,	107,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1664 = VSUBFP
  { 1665,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1665 = VSUBSBS
  { 1666,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1666 = VSUBSHS
  { 1667,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1667 = VSUBSWS
  { 1668,	3,	1,	4,	95,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1668 = VSUBUBM
  { 1669,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1669 = VSUBUBS
  { 1670,	3,	1,	4,	95,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1670 = VSUBUDM
  { 1671,	3,	1,	4,	95,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1671 = VSUBUHM
  { 1672,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1672 = VSUBUHS
  { 1673,	3,	1,	4,	111,	0, 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1673 = VSUBUQM
  { 1674,	3,	1,	4,	95,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1674 = VSUBUWM
  { 1675,	3,	1,	4,	99,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1675 = VSUBUWS
  { 1676,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1676 = VSUM2SWS
  { 1677,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1677 = VSUM4SBS
  { 1678,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1678 = VSUM4SHS
  { 1679,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1679 = VSUM4UBS
  { 1680,	3,	1,	4,	106,	0, 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1680 = VSUMSWS
  { 1681,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1681 = VUPKHPX
  { 1682,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1682 = VUPKHSB
  { 1683,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1683 = VUPKHSH
  { 1684,	2,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1684 = VUPKHSW
  { 1685,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1685 = VUPKLPX
  { 1686,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1686 = VUPKLSB
  { 1687,	2,	1,	4,	110,	0, 0x28ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1687 = VUPKLSH
  { 1688,	2,	1,	4,	110,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1688 = VUPKLSW
  { 1689,	3,	1,	4,	94,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1689 = VXOR
  { 1690,	1,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #1690 = V_SET0
  { 1691,	1,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #1691 = V_SET0B
  { 1692,	1,	1,	4,	94,	0, 0x28ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #1692 = V_SET0H
  { 1693,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #1693 = V_SETALLONES
  { 1694,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #1694 = V_SETALLONESB
  { 1695,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #1695 = V_SETALLONESH
  { 1696,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1696 = WAIT
  { 1697,	1,	0,	4,	56,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1697 = WRTEE
  { 1698,	1,	0,	4,	56,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1698 = WRTEEI
  { 1699,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo26, -1 ,nullptr },  // Inst #1699 = XOR
  { 1700,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #1700 = XOR8
  { 1701,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #1701 = XOR8o
  { 1702,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1702 = XORI
  { 1703,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1703 = XORI8
  { 1704,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #1704 = XORIS
  { 1705,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #1705 = XORIS8
  { 1706,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #1706 = XORo
  { 1707,	2,	1,	4,	98,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1707 = XSABSDP
  { 1708,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1708 = XSABSQP
  { 1709,	3,	1,	4,	109,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1709 = XSADDDP
  { 1710,	3,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1710 = XSADDQP
  { 1711,	3,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1711 = XSADDQPO
  { 1712,	3,	1,	4,	109,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1712 = XSADDSP
  { 1713,	3,	1,	4,	101,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1713 = XSCMPEQDP
  { 1714,	3,	1,	4,	101,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1714 = XSCMPEXPDP
  { 1715,	3,	1,	4,	113,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1715 = XSCMPEXPQP
  { 1716,	3,	1,	4,	101,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1716 = XSCMPGEDP
  { 1717,	3,	1,	4,	101,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1717 = XSCMPGTDP
  { 1718,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1718 = XSCMPNEDP
  { 1719,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1719 = XSCMPODP
  { 1720,	3,	1,	4,	113,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1720 = XSCMPOQP
  { 1721,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1721 = XSCMPUDP
  { 1722,	3,	1,	4,	113,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1722 = XSCMPUQP
  { 1723,	3,	1,	4,	98,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1723 = XSCPSGNDP
  { 1724,	3,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1724 = XSCPSGNQP
  { 1725,	2,	1,	4,	109,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1725 = XSCVDPHP
  { 1726,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1726 = XSCVDPQP
  { 1727,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1727 = XSCVDPSP
  { 1728,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1728 = XSCVDPSPN
  { 1729,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1729 = XSCVDPSXDS
  { 1730,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1730 = XSCVDPSXDSs
  { 1731,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1731 = XSCVDPSXWS
  { 1732,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1732 = XSCVDPSXWSs
  { 1733,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1733 = XSCVDPUXDS
  { 1734,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1734 = XSCVDPUXDSs
  { 1735,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1735 = XSCVDPUXWS
  { 1736,	2,	1,	4,	4,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1736 = XSCVDPUXWSs
  { 1737,	2,	1,	4,	109,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1737 = XSCVHPDP
  { 1738,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1738 = XSCVQPDP
  { 1739,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1739 = XSCVQPDPO
  { 1740,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1740 = XSCVQPSDZ
  { 1741,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1741 = XSCVQPSWZ
  { 1742,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1742 = XSCVQPUDZ
  { 1743,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1743 = XSCVQPUWZ
  { 1744,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1744 = XSCVSDQP
  { 1745,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1745 = XSCVSPDP
  { 1746,	2,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo240, -1 ,nullptr },  // Inst #1746 = XSCVSPDPN
  { 1747,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1747 = XSCVSXDDP
  { 1748,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1748 = XSCVSXDSP
  { 1749,	2,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1749 = XSCVUDQP
  { 1750,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1750 = XSCVUXDDP
  { 1751,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo241, -1 ,nullptr },  // Inst #1751 = XSCVUXDSP
  { 1752,	3,	1,	4,	139,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1752 = XSDIVDP
  { 1753,	3,	1,	4,	116,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1753 = XSDIVQP
  { 1754,	3,	1,	4,	116,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1754 = XSDIVQPO
  { 1755,	3,	1,	4,	140,	0, 0x40ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1755 = XSDIVSP
  { 1756,	3,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #1756 = XSIEXPDP
  { 1757,	3,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo242, -1 ,nullptr },  // Inst #1757 = XSIEXPQP
  { 1758,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1758 = XSMADDADP
  { 1759,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1759 = XSMADDASP
  { 1760,	4,	1,	4,	108,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1760 = XSMADDMDP
  { 1761,	4,	1,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1761 = XSMADDMSP
  { 1762,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1762 = XSMADDQP
  { 1763,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1763 = XSMADDQPO
  { 1764,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1764 = XSMAXCDP
  { 1765,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1765 = XSMAXDP
  { 1766,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1766 = XSMAXJDP
  { 1767,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1767 = XSMINCDP
  { 1768,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1768 = XSMINDP
  { 1769,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1769 = XSMINJDP
  { 1770,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1770 = XSMSUBADP
  { 1771,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1771 = XSMSUBASP
  { 1772,	4,	1,	4,	108,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1772 = XSMSUBMDP
  { 1773,	4,	1,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1773 = XSMSUBMSP
  { 1774,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1774 = XSMSUBQP
  { 1775,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1775 = XSMSUBQPO
  { 1776,	3,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1776 = XSMULDP
  { 1777,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1777 = XSMULQP
  { 1778,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1778 = XSMULQPO
  { 1779,	3,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1779 = XSMULSP
  { 1780,	2,	1,	4,	98,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1780 = XSNABSDP
  { 1781,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1781 = XSNABSQP
  { 1782,	2,	1,	4,	98,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1782 = XSNEGDP
  { 1783,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1783 = XSNEGQP
  { 1784,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1784 = XSNMADDADP
  { 1785,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1785 = XSNMADDASP
  { 1786,	4,	1,	4,	108,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1786 = XSNMADDMDP
  { 1787,	4,	1,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1787 = XSNMADDMSP
  { 1788,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1788 = XSNMADDQP
  { 1789,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1789 = XSNMADDQPO
  { 1790,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1790 = XSNMSUBADP
  { 1791,	4,	1,	4,	108,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1791 = XSNMSUBASP
  { 1792,	4,	1,	4,	108,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo243, -1 ,nullptr },  // Inst #1792 = XSNMSUBMDP
  { 1793,	4,	1,	4,	108,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo244, -1 ,nullptr },  // Inst #1793 = XSNMSUBMSP
  { 1794,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1794 = XSNMSUBQP
  { 1795,	3,	1,	4,	115,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1795 = XSNMSUBQPO
  { 1796,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1796 = XSRDPI
  { 1797,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1797 = XSRDPIC
  { 1798,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1798 = XSRDPIM
  { 1799,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1799 = XSRDPIP
  { 1800,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1800 = XSRDPIZ
  { 1801,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1801 = XSREDP
  { 1802,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1802 = XSRESP
  { 1803,	4,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1803 = XSRQPI
  { 1804,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1804 = XSRQPIX
  { 1805,	4,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo245, -1 ,nullptr },  // Inst #1805 = XSRQPXP
  { 1806,	2,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1806 = XSRSQRTEDP
  { 1807,	2,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1807 = XSRSQRTESP
  { 1808,	2,	1,	4,	20,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1808 = XSSQRTDP
  { 1809,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1809 = XSSQRTQP
  { 1810,	2,	1,	4,	117,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1810 = XSSQRTQPO
  { 1811,	2,	1,	4,	21,	0, 0x40ULL, nullptr, nullptr, OperandInfo239, -1 ,nullptr },  // Inst #1811 = XSSQRTSP
  { 1812,	3,	1,	4,	109,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1812 = XSSUBDP
  { 1813,	3,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1813 = XSSUBQP
  { 1814,	3,	1,	4,	114,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #1814 = XSSUBQPO
  { 1815,	3,	1,	4,	109,	0, 0x40ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1815 = XSSUBSP
  { 1816,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1816 = XSTDIVDP
  { 1817,	2,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo246, -1 ,nullptr },  // Inst #1817 = XSTSQRTDP
  { 1818,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1818 = XSTSTDCDP
  { 1819,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo248, -1 ,nullptr },  // Inst #1819 = XSTSTDCQP
  { 1820,	3,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo247, -1 ,nullptr },  // Inst #1820 = XSTSTDCSP
  { 1821,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #1821 = XSXEXPDP
  { 1822,	2,	1,	4,	98,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1822 = XSXEXPQP
  { 1823,	2,	1,	4,	99,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #1823 = XSXSIGDP
  { 1824,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #1824 = XSXSIGQP
  { 1825,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1825 = XVABSDP
  { 1826,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1826 = XVABSSP
  { 1827,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1827 = XVADDDP
  { 1828,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1828 = XVADDSP
  { 1829,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1829 = XVCMPEQDP
  { 1830,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo250, -1 ,nullptr },  // Inst #1830 = XVCMPEQDPo
  { 1831,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1831 = XVCMPEQSP
  { 1832,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo250, -1 ,nullptr },  // Inst #1832 = XVCMPEQSPo
  { 1833,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1833 = XVCMPGEDP
  { 1834,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo250, -1 ,nullptr },  // Inst #1834 = XVCMPGEDPo
  { 1835,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1835 = XVCMPGESP
  { 1836,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo250, -1 ,nullptr },  // Inst #1836 = XVCMPGESPo
  { 1837,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1837 = XVCMPGTDP
  { 1838,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo250, -1 ,nullptr },  // Inst #1838 = XVCMPGTDPo
  { 1839,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1839 = XVCMPGTSP
  { 1840,	3,	1,	4,	102,	0, 0x40ULL, ImplicitList13, ImplicitList15, OperandInfo250, -1 ,nullptr },  // Inst #1840 = XVCMPGTSPo
  { 1841,	3,	1,	4,	93,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1841 = XVCMPNEDP
  { 1842,	3,	1,	4,	93,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, ImplicitList15, OperandInfo250, -1 ,nullptr },  // Inst #1842 = XVCMPNEDPo
  { 1843,	3,	1,	4,	93,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1843 = XVCMPNESP
  { 1844,	3,	1,	4,	93,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, ImplicitList15, OperandInfo250, -1 ,nullptr },  // Inst #1844 = XVCMPNESPo
  { 1845,	3,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1845 = XVCPSGNDP
  { 1846,	3,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1846 = XVCPSGNSP
  { 1847,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1847 = XVCVDPSP
  { 1848,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1848 = XVCVDPSXDS
  { 1849,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1849 = XVCVDPSXWS
  { 1850,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1850 = XVCVDPUXDS
  { 1851,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1851 = XVCVDPUXWS
  { 1852,	2,	1,	4,	106,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1852 = XVCVHPSP
  { 1853,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1853 = XVCVSPDP
  { 1854,	2,	1,	4,	106,	0, 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1854 = XVCVSPHP
  { 1855,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1855 = XVCVSPSXDS
  { 1856,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1856 = XVCVSPSXWS
  { 1857,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1857 = XVCVSPUXDS
  { 1858,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1858 = XVCVSPUXWS
  { 1859,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1859 = XVCVSXDDP
  { 1860,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1860 = XVCVSXDSP
  { 1861,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1861 = XVCVSXWDP
  { 1862,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1862 = XVCVSXWSP
  { 1863,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1863 = XVCVUXDDP
  { 1864,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1864 = XVCVUXDSP
  { 1865,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1865 = XVCVUXWDP
  { 1866,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1866 = XVCVUXWSP
  { 1867,	3,	1,	4,	142,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1867 = XVDIVDP
  { 1868,	3,	1,	4,	141,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1868 = XVDIVSP
  { 1869,	3,	1,	4,	94,	0, 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1869 = XVIEXPDP
  { 1870,	3,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1870 = XVIEXPSP
  { 1871,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1871 = XVMADDADP
  { 1872,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1872 = XVMADDASP
  { 1873,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1873 = XVMADDMDP
  { 1874,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1874 = XVMADDMSP
  { 1875,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1875 = XVMAXDP
  { 1876,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1876 = XVMAXSP
  { 1877,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1877 = XVMINDP
  { 1878,	3,	1,	4,	99,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1878 = XVMINSP
  { 1879,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1879 = XVMSUBADP
  { 1880,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1880 = XVMSUBASP
  { 1881,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1881 = XVMSUBMDP
  { 1882,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1882 = XVMSUBMSP
  { 1883,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1883 = XVMULDP
  { 1884,	3,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1884 = XVMULSP
  { 1885,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1885 = XVNABSDP
  { 1886,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1886 = XVNABSSP
  { 1887,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1887 = XVNEGDP
  { 1888,	2,	1,	4,	94,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1888 = XVNEGSP
  { 1889,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1889 = XVNMADDADP
  { 1890,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1890 = XVNMADDASP
  { 1891,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1891 = XVNMADDMDP
  { 1892,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1892 = XVNMADDMSP
  { 1893,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1893 = XVNMSUBADP
  { 1894,	4,	1,	4,	106,	0|(1ULL<<MCID::Commutable), 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1894 = XVNMSUBASP
  { 1895,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1895 = XVNMSUBMDP
  { 1896,	4,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo251, -1 ,nullptr },  // Inst #1896 = XVNMSUBMSP
  { 1897,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1897 = XVRDPI
  { 1898,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1898 = XVRDPIC
  { 1899,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1899 = XVRDPIM
  { 1900,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1900 = XVRDPIP
  { 1901,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1901 = XVRDPIZ
  { 1902,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1902 = XVREDP
  { 1903,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1903 = XVRESP
  { 1904,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1904 = XVRSPI
  { 1905,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1905 = XVRSPIC
  { 1906,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1906 = XVRSPIM
  { 1907,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1907 = XVRSPIP
  { 1908,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1908 = XVRSPIZ
  { 1909,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1909 = XVRSQRTEDP
  { 1910,	2,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1910 = XVRSQRTESP
  { 1911,	2,	1,	4,	20,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1911 = XVSQRTDP
  { 1912,	2,	1,	4,	21,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1912 = XVSQRTSP
  { 1913,	3,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1913 = XVSUBDP
  { 1914,	3,	1,	4,	106,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1914 = XVSUBSP
  { 1915,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1915 = XVTDIVDP
  { 1916,	3,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo252, -1 ,nullptr },  // Inst #1916 = XVTDIVSP
  { 1917,	2,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1917 = XVTSQRTDP
  { 1918,	2,	1,	4,	101,	0, 0x40ULL, ImplicitList13, nullptr, OperandInfo253, -1 ,nullptr },  // Inst #1918 = XVTSQRTSP
  { 1919,	3,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo254, -1 ,nullptr },  // Inst #1919 = XVTSTDCDP
  { 1920,	3,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo254, -1 ,nullptr },  // Inst #1920 = XVTSTDCSP
  { 1921,	2,	1,	4,	94,	0, 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1921 = XVXEXPDP
  { 1922,	2,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1922 = XVXEXPSP
  { 1923,	2,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1923 = XVXSIGDP
  { 1924,	2,	1,	4,	99,	0, 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1924 = XVXSIGSP
  { 1925,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1925 = XXBRD
  { 1926,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1926 = XXBRH
  { 1927,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1927 = XXBRQ
  { 1928,	2,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo249, -1 ,nullptr },  // Inst #1928 = XXBRW
  { 1929,	3,	1,	4,	110,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo255, -1 ,nullptr },  // Inst #1929 = XXEXTRACTUW
  { 1930,	4,	1,	4,	110,	0, 0x40ULL, nullptr, nullptr, OperandInfo256, -1 ,nullptr },  // Inst #1930 = XXINSERTW
  { 1931,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1931 = XXLAND
  { 1932,	3,	1,	4,	95,	0, 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1932 = XXLANDC
  { 1933,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1933 = XXLEQV
  { 1934,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1934 = XXLNAND
  { 1935,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1935 = XXLNOR
  { 1936,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1936 = XXLOR
  { 1937,	3,	1,	4,	95,	0, 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1937 = XXLORC
  { 1938,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1938 = XXLORf
  { 1939,	3,	1,	4,	95,	0|(1ULL<<MCID::Commutable), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1939 = XXLXOR
  { 1940,	1,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo257, -1 ,nullptr },  // Inst #1940 = XXLXORdpz
  { 1941,	1,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo258, -1 ,nullptr },  // Inst #1941 = XXLXORspz
  { 1942,	1,	1,	4,	51,	0, 0x40ULL, nullptr, nullptr, OperandInfo259, -1 ,nullptr },  // Inst #1942 = XXLXORz
  { 1943,	3,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1943 = XXMRGHW
  { 1944,	3,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1944 = XXMRGLW
  { 1945,	3,	1,	4,	112,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1945 = XXPERM
  { 1946,	4,	1,	4,	64,	0, 0x40ULL, nullptr, nullptr, OperandInfo260, -1 ,nullptr },  // Inst #1946 = XXPERMDI
  { 1947,	3,	1,	4,	64,	0, 0x40ULL, nullptr, nullptr, OperandInfo261, -1 ,nullptr },  // Inst #1947 = XXPERMDIs
  { 1948,	3,	1,	4,	112,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x40ULL, nullptr, nullptr, OperandInfo250, -1 ,nullptr },  // Inst #1948 = XXPERMR
  { 1949,	4,	1,	4,	97,	0, 0x40ULL, nullptr, nullptr, OperandInfo262, -1 ,nullptr },  // Inst #1949 = XXSEL
  { 1950,	4,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo260, -1 ,nullptr },  // Inst #1950 = XXSLDWI
  { 1951,	2,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo263, -1 ,nullptr },  // Inst #1951 = XXSPLTIB
  { 1952,	3,	1,	4,	112,	0, 0x40ULL, nullptr, nullptr, OperandInfo264, -1 ,nullptr },  // Inst #1952 = XXSPLTW
  { 1953,	3,	1,	4,	64,	0, 0x40ULL, nullptr, nullptr, OperandInfo265, -1 ,nullptr },  // Inst #1953 = XXSPLTWs
  { 1954,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo266, -1 ,nullptr },  // Inst #1954 = gBC
  { 1955,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo266, -1 ,nullptr },  // Inst #1955 = gBCA
  { 1956,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo267, -1 ,nullptr },  // Inst #1956 = gBCAat
  { 1957,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, OperandInfo268, -1 ,nullptr },  // Inst #1957 = gBCCTR
  { 1958,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList25, OperandInfo268, -1 ,nullptr },  // Inst #1958 = gBCCTRL
  { 1959,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo266, -1 ,nullptr },  // Inst #1959 = gBCL
  { 1960,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo266, -1 ,nullptr },  // Inst #1960 = gBCLA
  { 1961,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo267, -1 ,nullptr },  // Inst #1961 = gBCLAat
  { 1962,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, OperandInfo268, -1 ,nullptr },  // Inst #1962 = gBCLR
  { 1963,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList25, OperandInfo268, -1 ,nullptr },  // Inst #1963 = gBCLRL
  { 1964,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo267, -1 ,nullptr },  // Inst #1964 = gBCLat
  { 1965,	4,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo267, -1 ,nullptr },  // Inst #1965 = gBCat
};

extern const char PPCInstrNameData[] = {
  /* 0 */ 'M', 'T', 'F', 'S', 'B', '0', 0,
  /* 7 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 14 */ 'V', 'C', 'T', 'S', 'X', 'S', '_', '0', 0,
  /* 23 */ 'V', 'C', 'T', 'U', 'X', 'S', '_', '0', 0,
  /* 32 */ 'V', 'C', 'F', 'S', 'X', '_', '0', 0,
  /* 40 */ 'V', 'C', 'F', 'U', 'X', '_', '0', 0,
  /* 48 */ 'M', 'T', 'F', 'S', 'B', '1', 0,
  /* 55 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', '3', '2', 0,
  /* 71 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 91 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 111 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 132 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 152 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 173 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 193 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 209 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 229 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 249 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 268 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 289 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 309 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', '3', '2', 0,
  /* 322 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', '3', '2', 0,
  /* 335 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 349 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 363 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 380 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 397 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 412 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 425 */ 'L', 'W', 'A', '_', '3', '2', 0,
  /* 432 */ 'L', 'W', 'A', 'X', '_', '3', '2', 0,
  /* 440 */ 'D', 'F', 'L', 'O', 'A', 'D', 'f', '3', '2', 0,
  /* 450 */ 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '3', '2', 0,
  /* 461 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '3', '2', 0,
  /* 479 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '3', '2', 0,
  /* 496 */ 'T', 'L', 'B', 'R', 'E', '2', 0,
  /* 503 */ 'T', 'L', 'B', 'W', 'E', '2', 0,
  /* 510 */ 'T', 'L', 'B', 'S', 'X', '2', 0,
  /* 517 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 537 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 557 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 578 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 598 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 619 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 639 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 655 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 675 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 695 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 714 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 735 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 755 */ 'D', 'S', 'T', '6', '4', 0,
  /* 761 */ 'D', 'S', 'T', 'S', 'T', '6', '4', 0,
  /* 769 */ 'D', 'S', 'T', 'T', '6', '4', 0,
  /* 776 */ 'D', 'S', 'T', 'S', 'T', 'T', '6', '4', 0,
  /* 785 */ 'E', 'X', 'T', 'S', 'B', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 798 */ 'E', 'X', 'T', 'S', 'H', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 811 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', '_', '6', '4', 0,
  /* 824 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 0,
  /* 836 */ 'D', 'F', 'L', 'O', 'A', 'D', 'f', '6', '4', 0,
  /* 846 */ 'D', 'F', 'S', 'T', 'O', 'R', 'E', 'f', '6', '4', 0,
  /* 857 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '6', '4', 0,
  /* 875 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '6', '4', 0,
  /* 892 */ 'A', 'D', 'D', '4', 0,
  /* 897 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 910 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '4', 0,
  /* 920 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 933 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '4', 0,
  /* 943 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 963 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 983 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1004 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 1024 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1045 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1065 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1081 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1101 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1121 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1140 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1161 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1181 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '6', 0,
  /* 1193 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '7', 0,
  /* 1205 */ 'T', 'A', 'I', 'L', 'B', 'A', '8', 0,
  /* 1213 */ 'L', 'H', 'A', '8', 0,
  /* 1218 */ 'B', 'L', 'A', '8', 0,
  /* 1223 */ 'T', 'A', 'I', 'L', 'B', '8', 0,
  /* 1230 */ 'C', 'M', 'P', 'B', '8', 0,
  /* 1236 */ 'C', 'M', 'P', 'R', 'B', '8', 0,
  /* 1243 */ 'E', 'X', 'T', 'S', 'B', '8', 0,
  /* 1250 */ 'M', 'F', 'T', 'B', '8', 0,
  /* 1256 */ 'S', 'T', 'B', '8', 0,
  /* 1261 */ 'A', 'D', 'D', 'C', '8', 0,
  /* 1267 */ 'A', 'N', 'D', 'C', '8', 0,
  /* 1273 */ 'S', 'U', 'B', 'F', 'C', '8', 0,
  /* 1280 */ 'A', 'D', 'D', 'I', 'C', '8', 0,
  /* 1287 */ 'S', 'U', 'B', 'F', 'I', 'C', '8', 0,
  /* 1295 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 1305 */ 'O', 'R', 'C', '8', 0,
  /* 1310 */ 'A', 'D', 'D', '8', 0,
  /* 1315 */ 'N', 'A', 'N', 'D', '8', 0,
  /* 1321 */ 'A', 'D', 'D', 'E', '8', 0,
  /* 1327 */ 'S', 'U', 'B', 'F', 'E', '8', 0,
  /* 1334 */ 'A', 'D', 'D', 'M', 'E', '8', 0,
  /* 1341 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 0,
  /* 1349 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', 0,
  /* 1359 */ 'A', 'D', 'D', 'Z', 'E', '8', 0,
  /* 1366 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 0,
  /* 1374 */ 'S', 'U', 'B', 'F', '8', 0,
  /* 1380 */ 'M', 'F', 'O', 'C', 'R', 'F', '8', 0,
  /* 1388 */ 'M', 'T', 'O', 'C', 'R', 'F', '8', 0,
  /* 1396 */ 'M', 'T', 'C', 'R', 'F', '8', 0,
  /* 1403 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 1416 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '8', 0,
  /* 1426 */ 'N', 'E', 'G', '8', 0,
  /* 1431 */ 'E', 'X', 'T', 'S', 'H', '8', 0,
  /* 1438 */ 'S', 'T', 'H', '8', 0,
  /* 1443 */ 'A', 'D', 'D', 'I', '8', 0,
  /* 1449 */ 'M', 'U', 'L', 'L', 'I', '8', 0,
  /* 1456 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 0,
  /* 1464 */ 'X', 'O', 'R', 'I', '8', 0,
  /* 1470 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 1489 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 1502 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 1521 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1541 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1560 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 1580 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 1599 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1614 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1633 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 1652 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 1670 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 0,
  /* 1680 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 1700 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 1719 */ 'B', 'L', '8', 0,
  /* 1723 */ 'I', 'S', 'E', 'L', '8', 0,
  /* 1729 */ 'B', 'C', 'T', 'R', 'L', '8', 0,
  /* 1736 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1744 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1753 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 0,
  /* 1761 */ 'R', 'L', 'W', 'N', 'M', '8', 0,
  /* 1768 */ 'M', 'F', 'C', 'R', '8', 0,
  /* 1774 */ 'B', 'L', 'R', '8', 0,
  /* 1779 */ 'M', 'F', 'L', 'R', '8', 0,
  /* 1785 */ 'M', 'T', 'L', 'R', '8', 0,
  /* 1791 */ 'B', 'D', 'Z', 'L', 'R', '8', 0,
  /* 1798 */ 'B', 'D', 'N', 'Z', 'L', 'R', '8', 0,
  /* 1806 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 1818 */ 'N', 'O', 'R', '8', 0,
  /* 1823 */ 'X', 'O', 'R', '8', 0,
  /* 1828 */ 'M', 'F', 'S', 'P', 'R', '8', 0,
  /* 1835 */ 'M', 'T', 'S', 'P', 'R', '8', 0,
  /* 1842 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', '8', 0,
  /* 1852 */ 'B', 'C', 'C', 'T', 'R', '8', 0,
  /* 1859 */ 'B', 'C', 'C', 'C', 'T', 'R', '8', 0,
  /* 1867 */ 'M', 'F', 'C', 'T', 'R', '8', 0,
  /* 1874 */ 'M', 'T', 'C', 'T', 'R', '8', 0,
  /* 1881 */ 'A', 'D', 'D', 'I', 'S', '8', 0,
  /* 1888 */ 'L', 'I', 'S', '8', 0,
  /* 1893 */ 'X', 'O', 'R', 'I', 'S', '8', 0,
  /* 1900 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', '8', 0,
  /* 1915 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', '8', 0,
  /* 1931 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', '8', 0,
  /* 1947 */ 'L', 'H', 'A', 'U', '8', 0,
  /* 1953 */ 'S', 'T', 'B', 'U', '8', 0,
  /* 1959 */ 'S', 'T', 'H', 'U', '8', 0,
  /* 1965 */ 'S', 'T', 'W', 'U', '8', 0,
  /* 1971 */ 'L', 'B', 'Z', 'U', '8', 0,
  /* 1977 */ 'L', 'H', 'Z', 'U', '8', 0,
  /* 1983 */ 'L', 'W', 'Z', 'U', '8', 0,
  /* 1989 */ 'E', 'Q', 'V', '8', 0,
  /* 1994 */ 'S', 'L', 'W', '8', 0,
  /* 1999 */ 'S', 'R', 'W', '8', 0,
  /* 2004 */ 'S', 'T', 'W', '8', 0,
  /* 2009 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 0,
  /* 2017 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 0,
  /* 2025 */ 'L', 'H', 'A', 'X', '8', 0,
  /* 2031 */ 'S', 'T', 'B', 'X', '8', 0,
  /* 2037 */ 'S', 'T', 'H', 'X', '8', 0,
  /* 2043 */ 'L', 'H', 'B', 'R', 'X', '8', 0,
  /* 2050 */ 'L', 'W', 'B', 'R', 'X', '8', 0,
  /* 2057 */ 'L', 'H', 'A', 'U', 'X', '8', 0,
  /* 2064 */ 'S', 'T', 'B', 'U', 'X', '8', 0,
  /* 2071 */ 'S', 'T', 'H', 'U', 'X', '8', 0,
  /* 2078 */ 'S', 'T', 'W', 'U', 'X', '8', 0,
  /* 2085 */ 'L', 'B', 'Z', 'U', 'X', '8', 0,
  /* 2092 */ 'L', 'H', 'Z', 'U', 'X', '8', 0,
  /* 2099 */ 'L', 'W', 'Z', 'U', 'X', '8', 0,
  /* 2106 */ 'S', 'T', 'W', 'X', '8', 0,
  /* 2112 */ 'L', 'B', 'Z', 'X', '8', 0,
  /* 2118 */ 'L', 'H', 'Z', 'X', '8', 0,
  /* 2124 */ 'L', 'W', 'Z', 'X', '8', 0,
  /* 2130 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '8', 0,
  /* 2139 */ 'L', 'B', 'Z', '8', 0,
  /* 2144 */ 'B', 'D', 'Z', '8', 0,
  /* 2149 */ 'L', 'H', 'Z', '8', 0,
  /* 2154 */ 'B', 'D', 'N', 'Z', '8', 0,
  /* 2160 */ 'L', 'W', 'Z', '8', 0,
  /* 2165 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', '8', 0,
  /* 2177 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '8', 0,
  /* 2189 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '8', 0,
  /* 2201 */ 'A', 'N', 'D', 'I', 'o', '8', 0,
  /* 2208 */ 'A', 'N', 'D', 'I', 'S', 'o', '8', 0,
  /* 2216 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2228 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2240 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2250 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'A', 0,
  /* 2260 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2272 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2284 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2294 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2306 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2318 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2328 */ 'D', 'C', 'B', 'A', 0,
  /* 2333 */ 'T', 'A', 'I', 'L', 'B', 'A', 0,
  /* 2340 */ 'L', 'D', 't', 'o', 'c', 'B', 'A', 0,
  /* 2348 */ 'g', 'B', 'C', 'A', 0,
  /* 2353 */ 'B', 'C', 'C', 'A', 0,
  /* 2358 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 0,
  /* 2368 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 'A', 0,
  /* 2378 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 0,
  /* 2388 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 0,
  /* 2397 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 0,
  /* 2407 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 'A', 0,
  /* 2417 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 0,
  /* 2427 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 0,
  /* 2436 */ 'L', 'H', 'A', 0,
  /* 2440 */ 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 2451 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 2464 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 2477 */ 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2493 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2507 */ 'S', 'L', 'B', 'I', 'A', 0,
  /* 2513 */ 'T', 'L', 'B', 'I', 'A', 0,
  /* 2519 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 0,
  /* 2529 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 'A', 0,
  /* 2539 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 0,
  /* 2549 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 0,
  /* 2558 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 0,
  /* 2568 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 'A', 0,
  /* 2578 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 0,
  /* 2588 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 0,
  /* 2598 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 0,
  /* 2607 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 'A', 0,
  /* 2618 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 'A', 0,
  /* 2628 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 'A', 0,
  /* 2639 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 'A', 0,
  /* 2649 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2661 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2672 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2684 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2695 */ 'B', 'L', 'A', 0,
  /* 2699 */ 'g', 'B', 'C', 'L', 'A', 0,
  /* 2705 */ 'B', 'C', 'C', 'L', 'A', 0,
  /* 2711 */ 'B', 'D', 'Z', 'L', 'A', 0,
  /* 2717 */ 'B', 'D', 'N', 'Z', 'L', 'A', 0,
  /* 2724 */ 'E', 'V', 'M', 'R', 'A', 0,
  /* 2730 */ 'L', 'W', 'A', 0,
  /* 2734 */ 'M', 'T', 'V', 'S', 'R', 'W', 'A', 0,
  /* 2742 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 'A', 0,
  /* 2752 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2761 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2771 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'A', 0,
  /* 2779 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'A', 0,
  /* 2788 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2797 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2807 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'A', 0,
  /* 2815 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'A', 0,
  /* 2824 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2834 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2845 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2854 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2864 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2874 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2885 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2894 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2904 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 'A', 0,
  /* 2914 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 'A', 0,
  /* 2924 */ 'B', 'D', 'Z', 'A', 0,
  /* 2929 */ 'B', 'D', 'N', 'Z', 'A', 0,
  /* 2935 */ 'V', '_', 'S', 'E', 'T', '0', 'B', 0,
  /* 2943 */ 'V', 'S', 'R', 'A', 'B', 0,
  /* 2949 */ 'R', 'F', 'E', 'B', 'B', 0,
  /* 2955 */ 'V', 'C', 'L', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 2964 */ 'V', 'C', 'T', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 2973 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 0,
  /* 2981 */ 'V', 'M', 'R', 'G', 'H', 'B', 0,
  /* 2988 */ 'X', 'X', 'S', 'P', 'L', 'T', 'I', 'B', 0,
  /* 2997 */ 'V', 'M', 'R', 'G', 'L', 'B', 0,
  /* 3004 */ 'T', 'A', 'I', 'L', 'B', 0,
  /* 3010 */ 'V', 'R', 'L', 'B', 0,
  /* 3015 */ 'V', 'S', 'L', 'B', 0,
  /* 3020 */ 'V', 'P', 'M', 'S', 'U', 'M', 'B', 0,
  /* 3028 */ 'C', 'M', 'P', 'B', 0,
  /* 3033 */ 'C', 'M', 'P', 'E', 'Q', 'B', 0,
  /* 3040 */ 'C', 'L', 'R', 'B', 'H', 'R', 'B', 0,
  /* 3048 */ 'C', 'M', 'P', 'R', 'B', 0,
  /* 3054 */ 'V', 'S', 'R', 'B', 0,
  /* 3059 */ 'V', 'M', 'U', 'L', 'E', 'S', 'B', 0,
  /* 3067 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'B', 0,
  /* 3081 */ 'V', 'A', 'V', 'G', 'S', 'B', 0,
  /* 3088 */ 'V', 'U', 'P', 'K', 'H', 'S', 'B', 0,
  /* 3096 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'B', 0,
  /* 3105 */ 'V', 'U', 'P', 'K', 'L', 'S', 'B', 0,
  /* 3113 */ 'V', 'M', 'I', 'N', 'S', 'B', 0,
  /* 3120 */ 'V', 'M', 'U', 'L', 'O', 'S', 'B', 0,
  /* 3128 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 0,
  /* 3137 */ 'E', 'V', 'E', 'X', 'T', 'S', 'B', 0,
  /* 3145 */ 'V', 'M', 'A', 'X', 'S', 'B', 0,
  /* 3152 */ 'M', 'F', 'T', 'B', 0,
  /* 3157 */ 'V', 'S', 'P', 'L', 'T', 'B', 0,
  /* 3164 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'B', 0,
  /* 3173 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'B', 0,
  /* 3182 */ 'S', 'T', 'B', 0,
  /* 3186 */ 'R', 'e', 'a', 'd', 'T', 'B', 0,
  /* 3193 */ 'V', 'A', 'B', 'S', 'D', 'U', 'B', 0,
  /* 3201 */ 'V', 'M', 'U', 'L', 'E', 'U', 'B', 0,
  /* 3209 */ 'V', 'A', 'V', 'G', 'U', 'B', 0,
  /* 3216 */ 'V', 'M', 'I', 'N', 'U', 'B', 0,
  /* 3223 */ 'V', 'M', 'U', 'L', 'O', 'U', 'B', 0,
  /* 3231 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 0,
  /* 3240 */ 'Q', 'V', 'F', 'S', 'U', 'B', 0,
  /* 3247 */ 'G', '_', 'F', 'S', 'U', 'B', 0,
  /* 3254 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 0,
  /* 3262 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 0,
  /* 3271 */ 'G', '_', 'S', 'U', 'B', 0,
  /* 3277 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'B', 0,
  /* 3288 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 0,
  /* 3297 */ 'V', 'M', 'A', 'X', 'U', 'B', 0,
  /* 3304 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 0,
  /* 3313 */ 'V', 'C', 'L', 'Z', 'B', 0,
  /* 3319 */ 'V', 'C', 'T', 'Z', 'B', 0,
  /* 3325 */ 'g', 'B', 'C', 0,
  /* 3329 */ 'B', 'C', 'C', 0,
  /* 3333 */ 'A', 'D', 'D', 'C', 0,
  /* 3338 */ 'X', 'X', 'L', 'A', 'N', 'D', 'C', 0,
  /* 3346 */ 'C', 'R', 'A', 'N', 'D', 'C', 0,
  /* 3353 */ 'E', 'V', 'A', 'N', 'D', 'C', 0,
  /* 3360 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 0,
  /* 3369 */ 'S', 'U', 'B', 'F', 'C', 0,
  /* 3375 */ 'S', 'U', 'B', 'I', 'C', 0,
  /* 3381 */ 'A', 'D', 'D', 'I', 'C', 0,
  /* 3387 */ 'R', 'L', 'D', 'I', 'C', 0,
  /* 3393 */ 'S', 'U', 'B', 'F', 'I', 'C', 0,
  /* 3400 */ 'X', 'S', 'R', 'D', 'P', 'I', 'C', 0,
  /* 3408 */ 'X', 'V', 'R', 'D', 'P', 'I', 'C', 0,
  /* 3416 */ 'X', 'V', 'R', 'S', 'P', 'I', 'C', 0,
  /* 3424 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', 0,
  /* 3436 */ 'I', 'C', 'B', 'L', 'C', 0,
  /* 3442 */ 'B', 'R', 'I', 'N', 'C', 0,
  /* 3448 */ 'G', '_', 'F', 'P', 'T', 'R', 'U', 'N', 'C', 0,
  /* 3458 */ 'G', '_', 'T', 'R', 'U', 'N', 'C', 0,
  /* 3466 */ 'S', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 3474 */ 'T', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 3482 */ 'M', 'S', 'G', 'S', 'Y', 'N', 'C', 0,
  /* 3490 */ 'I', 'S', 'Y', 'N', 'C', 0,
  /* 3496 */ 'M', 'S', 'Y', 'N', 'C', 0,
  /* 3502 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 3511 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'B', 'R', 'C', 0,
  /* 3526 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'B', 'R', 'C', 0,
  /* 3538 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3553 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3565 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3581 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3594 */ 'X', 'X', 'L', 'O', 'R', 'C', 0,
  /* 3601 */ 'C', 'R', 'O', 'R', 'C', 0,
  /* 3607 */ 'E', 'V', 'O', 'R', 'C', 0,
  /* 3613 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 3628 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'R', 'R', 'C', 0,
  /* 3640 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3655 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3667 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3683 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3696 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'R', 'C', 0,
  /* 3711 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'R', 'C', 0,
  /* 3723 */ 'S', 'C', 0,
  /* 3726 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 0,
  /* 3735 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 0,
  /* 3744 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 0,
  /* 3753 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 0,
  /* 3762 */ 'T', 'L', 'B', 'S', 'X', '2', 'D', 0,
  /* 3770 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'D', 0,
  /* 3781 */ 'G', '_', 'L', 'O', 'A', 'D', 0,
  /* 3788 */ 'V', 'S', 'R', 'A', 'D', 0,
  /* 3794 */ 'V', 'G', 'B', 'B', 'D', 0,
  /* 3800 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'D', 0,
  /* 3808 */ 'Q', 'V', 'F', 'A', 'D', 'D', 0,
  /* 3815 */ 'G', '_', 'F', 'A', 'D', 'D', 0,
  /* 3822 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 0,
  /* 3830 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3839 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3852 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 0,
  /* 3864 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3873 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3883 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 3889 */ 'E', 'V', 'L', 'D', 'D', 0,
  /* 3895 */ 'M', 'T', 'V', 'S', 'R', 'D', 'D', 0,
  /* 3903 */ 'E', 'V', 'S', 'T', 'D', 'D', 0,
  /* 3910 */ 'L', 'F', 'D', 0,
  /* 3914 */ 'S', 'T', 'F', 'D', 0,
  /* 3919 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 3925 */ 'V', 'N', 'E', 'G', 'D', 0,
  /* 3931 */ 'M', 'U', 'L', 'H', 'D', 0,
  /* 3937 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 0,
  /* 3945 */ 'H', 'R', 'F', 'I', 'D', 0,
  /* 3951 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 0,
  /* 3959 */ 'T', 'L', 'B', 'L', 'D', 0,
  /* 3965 */ 'F', 'S', 'E', 'L', 'D', 0,
  /* 3971 */ 'M', 'U', 'L', 'L', 'D', 0,
  /* 3977 */ 'C', 'M', 'P', 'L', 'D', 0,
  /* 3983 */ 'M', 'F', 'V', 'S', 'R', 'L', 'D', 0,
  /* 3991 */ 'V', 'R', 'L', 'D', 0,
  /* 3996 */ 'V', 'S', 'L', 'D', 0,
  /* 4001 */ 'F', 'R', 'I', 'M', 'D', 0,
  /* 4007 */ 'V', 'B', 'P', 'E', 'R', 'M', 'D', 0,
  /* 4015 */ 'V', 'P', 'M', 'S', 'U', 'M', 'D', 0,
  /* 4023 */ 'X', 'X', 'L', 'A', 'N', 'D', 0,
  /* 4030 */ 'X', 'X', 'L', 'N', 'A', 'N', 'D', 0,
  /* 4038 */ 'C', 'R', 'N', 'A', 'N', 'D', 0,
  /* 4045 */ 'E', 'V', 'N', 'A', 'N', 'D', 0,
  /* 4052 */ 'C', 'R', 'A', 'N', 'D', 0,
  /* 4058 */ 'E', 'V', 'A', 'N', 'D', 0,
  /* 4064 */ 'G', '_', 'A', 'N', 'D', 0,
  /* 4070 */ 'T', 'E', 'N', 'D', 0,
  /* 4075 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 4088 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 0,
  /* 4096 */ 'F', 'R', 'I', 'N', 'D', 0,
  /* 4102 */ 'G', '_', 'B', 'R', 'C', 'O', 'N', 'D', 0,
  /* 4111 */ 'F', 'R', 'I', 'P', 'D', 0,
  /* 4117 */ 'C', 'M', 'P', 'D', 0,
  /* 4122 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 4139 */ 'X', 'X', 'B', 'R', 'D', 0,
  /* 4145 */ 'M', 'T', 'M', 'S', 'R', 'D', 0,
  /* 4152 */ 'M', 'F', 'V', 'S', 'R', 'D', 0,
  /* 4159 */ 'M', 'T', 'V', 'S', 'R', 'D', 0,
  /* 4166 */ 'M', 'F', 'V', 'R', 'D', 0,
  /* 4172 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 4178 */ 'F', 'N', 'A', 'B', 'S', 'D', 0,
  /* 4185 */ 'V', 'M', 'I', 'N', 'S', 'D', 0,
  /* 4192 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 0,
  /* 4201 */ 'V', 'M', 'A', 'X', 'S', 'D', 0,
  /* 4208 */ 'L', 'X', 'S', 'D', 0,
  /* 4213 */ 'S', 'T', 'X', 'S', 'D', 0,
  /* 4219 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'D', 0,
  /* 4229 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'D', 0,
  /* 4238 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'D', 0,
  /* 4247 */ 'S', 'T', 'D', 0,
  /* 4251 */ 'V', 'M', 'I', 'N', 'U', 'D', 0,
  /* 4258 */ 'F', 'C', 'M', 'P', 'U', 'D', 0,
  /* 4265 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 0,
  /* 4274 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 0,
  /* 4283 */ 'V', 'M', 'A', 'X', 'U', 'D', 0,
  /* 4290 */ 'D', 'I', 'V', 'D', 0,
  /* 4295 */ 'F', 'R', 'I', 'Z', 'D', 0,
  /* 4301 */ 'V', 'C', 'L', 'Z', 'D', 0,
  /* 4307 */ 'C', 'N', 'T', 'L', 'Z', 'D', 0,
  /* 4314 */ 'V', 'C', 'T', 'Z', 'D', 0,
  /* 4320 */ 'C', 'N', 'T', 'T', 'Z', 'D', 0,
  /* 4327 */ 'M', 'F', 'B', 'H', 'R', 'B', 'E', 0,
  /* 4335 */ 'G', '_', 'U', 'S', 'U', 'B', 'E', 0,
  /* 4343 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 4356 */ 'G', '_', 'U', 'A', 'D', 'D', 'E', 0,
  /* 4364 */ 'D', 'I', 'V', 'D', 'E', 0,
  /* 4370 */ 'S', 'L', 'B', 'M', 'F', 'E', 'E', 0,
  /* 4378 */ 'W', 'R', 'T', 'E', 'E', 0,
  /* 4384 */ 'S', 'U', 'B', 'F', 'E', 0,
  /* 4390 */ 'E', 'V', 'L', 'W', 'H', 'E', 0,
  /* 4397 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 0,
  /* 4405 */ 'S', 'L', 'B', 'I', 'E', 0,
  /* 4411 */ 'T', 'L', 'B', 'I', 'E', 0,
  /* 4417 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4424 */ 'A', 'D', 'D', 'M', 'E', 0,
  /* 4430 */ 'S', 'U', 'B', 'F', 'M', 'E', 0,
  /* 4437 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 4450 */ 'T', 'L', 'B', 'R', 'E', 0,
  /* 4456 */ 'Q', 'V', 'F', 'R', 'E', 0,
  /* 4462 */ 'G', '_', 'S', 'T', 'O', 'R', 'E', 0,
  /* 4470 */ 'S', 'L', 'B', 'M', 'T', 'E', 0,
  /* 4477 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 0,
  /* 4487 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 0,
  /* 4496 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4506 */ 'G', '_', 'G', 'L', 'O', 'B', 'A', 'L', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4521 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4530 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4539 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4554 */ 'U', 'P', 'D', 'A', 'T', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4568 */ 'S', 'P', 'I', 'L', 'L', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4581 */ 'T', 'L', 'B', 'W', 'E', 0,
  /* 4587 */ 'D', 'I', 'V', 'W', 'E', 0,
  /* 4593 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 0,
  /* 4601 */ 'A', 'D', 'D', 'Z', 'E', 0,
  /* 4607 */ 'S', 'U', 'B', 'F', 'Z', 'E', 0,
  /* 4614 */ 'D', 'C', 'B', 'F', 0,
  /* 4619 */ 'S', 'U', 'B', 'F', 0,
  /* 4624 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 4637 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 0,
  /* 4646 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 0,
  /* 4655 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 0,
  /* 4664 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 0,
  /* 4672 */ 'M', 'C', 'R', 'F', 0,
  /* 4677 */ 'M', 'F', 'O', 'C', 'R', 'F', 0,
  /* 4684 */ 'M', 'T', 'O', 'C', 'R', 'F', 0,
  /* 4691 */ 'M', 'T', 'C', 'R', 'F', 0,
  /* 4697 */ 'M', 'T', 'F', 'S', 'F', 0,
  /* 4703 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 0,
  /* 4712 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 0,
  /* 4721 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 0,
  /* 4730 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 0,
  /* 4738 */ 'S', 'L', 'B', 'I', 'E', 'G', 0,
  /* 4745 */ 'Q', 'V', 'F', 'N', 'E', 'G', 0,
  /* 4752 */ 'G', '_', 'F', 'N', 'E', 'G', 0,
  /* 4759 */ 'E', 'V', 'N', 'E', 'G', 0,
  /* 4765 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4780 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4794 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 4808 */ 'G', '_', 'V', 'A', 'A', 'R', 'G', 0,
  /* 4816 */ 'V', '_', 'S', 'E', 'T', '0', 'H', 0,
  /* 4824 */ 'V', 'S', 'R', 'A', 'H', 0,
  /* 4830 */ 'E', 'V', 'L', 'D', 'H', 0,
  /* 4836 */ 'E', 'V', 'S', 'T', 'D', 'H', 0,
  /* 4843 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 0,
  /* 4851 */ 'V', 'M', 'R', 'G', 'H', 'H', 0,
  /* 4858 */ 'V', 'M', 'R', 'G', 'L', 'H', 0,
  /* 4865 */ 'V', 'R', 'L', 'H', 0,
  /* 4870 */ 'V', 'S', 'L', 'H', 0,
  /* 4875 */ 'G', '_', 'S', 'M', 'U', 'L', 'H', 0,
  /* 4883 */ 'G', '_', 'U', 'M', 'U', 'L', 'H', 0,
  /* 4891 */ 'V', 'P', 'M', 'S', 'U', 'M', 'H', 0,
  /* 4899 */ 'X', 'X', 'B', 'R', 'H', 0,
  /* 4905 */ 'V', 'S', 'R', 'H', 0,
  /* 4910 */ 'V', 'M', 'U', 'L', 'E', 'S', 'H', 0,
  /* 4918 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'H', 0,
  /* 4932 */ 'V', 'A', 'V', 'G', 'S', 'H', 0,
  /* 4939 */ 'V', 'U', 'P', 'K', 'H', 'S', 'H', 0,
  /* 4947 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'H', 0,
  /* 4956 */ 'V', 'U', 'P', 'K', 'L', 'S', 'H', 0,
  /* 4964 */ 'V', 'M', 'I', 'N', 'S', 'H', 0,
  /* 4971 */ 'V', 'M', 'U', 'L', 'O', 'S', 'H', 0,
  /* 4979 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 0,
  /* 4988 */ 'E', 'V', 'E', 'X', 'T', 'S', 'H', 0,
  /* 4996 */ 'V', 'M', 'A', 'X', 'S', 'H', 0,
  /* 5003 */ 'V', 'S', 'P', 'L', 'T', 'H', 0,
  /* 5010 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'H', 0,
  /* 5019 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'H', 0,
  /* 5028 */ 'S', 'T', 'H', 0,
  /* 5032 */ 'V', 'A', 'B', 'S', 'D', 'U', 'H', 0,
  /* 5040 */ 'V', 'M', 'U', 'L', 'E', 'U', 'H', 0,
  /* 5048 */ 'V', 'A', 'V', 'G', 'U', 'H', 0,
  /* 5055 */ 'V', 'M', 'I', 'N', 'U', 'H', 0,
  /* 5062 */ 'V', 'M', 'U', 'L', 'O', 'U', 'H', 0,
  /* 5070 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 0,
  /* 5079 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'H', 0,
  /* 5090 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 0,
  /* 5099 */ 'V', 'M', 'A', 'X', 'U', 'H', 0,
  /* 5106 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 0,
  /* 5115 */ 'V', 'C', 'L', 'Z', 'H', 0,
  /* 5121 */ 'V', 'C', 'T', 'Z', 'H', 0,
  /* 5127 */ 'D', 'C', 'B', 'I', 0,
  /* 5132 */ 'I', 'C', 'B', 'I', 0,
  /* 5137 */ 'S', 'U', 'B', 'I', 0,
  /* 5142 */ 'D', 'C', 'C', 'C', 'I', 0,
  /* 5148 */ 'I', 'C', 'C', 'C', 'I', 0,
  /* 5154 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 'I', 0,
  /* 5164 */ 'R', 'F', 'C', 'I', 0,
  /* 5169 */ 'R', 'F', 'M', 'C', 'I', 0,
  /* 5175 */ 'Q', 'V', 'G', 'P', 'C', 'I', 0,
  /* 5182 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 'I', 0,
  /* 5192 */ 'S', 'R', 'A', 'D', 'I', 0,
  /* 5198 */ 'A', 'D', 'D', 'I', 0,
  /* 5203 */ 'R', 'F', 'D', 'I', 0,
  /* 5208 */ 'C', 'M', 'P', 'L', 'D', 'I', 0,
  /* 5215 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 0,
  /* 5224 */ 'E', 'X', 'T', 'L', 'D', 'I', 0,
  /* 5231 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 0,
  /* 5240 */ 'C', 'M', 'P', 'D', 'I', 0,
  /* 5246 */ 'C', 'L', 'R', 'R', 'D', 'I', 0,
  /* 5253 */ 'I', 'N', 'S', 'R', 'D', 'I', 0,
  /* 5260 */ 'R', 'O', 'T', 'R', 'D', 'I', 0,
  /* 5267 */ 'E', 'X', 'T', 'R', 'D', 'I', 0,
  /* 5274 */ 'T', 'D', 'I', 0,
  /* 5278 */ 'W', 'R', 'T', 'E', 'E', 'I', 0,
  /* 5285 */ 'R', 'F', 'I', 0,
  /* 5289 */ 'M', 'T', 'F', 'S', 'F', 'I', 0,
  /* 5296 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'F', 'I', 0,
  /* 5306 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 0,
  /* 5316 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 'H', 'I', 0,
  /* 5328 */ 'P', 'H', 'I', 0,
  /* 5332 */ 'T', 'L', 'B', 'L', 'I', 0,
  /* 5338 */ 'M', 'U', 'L', 'L', 'I', 0,
  /* 5344 */ 'V', 'R', 'L', 'D', 'M', 'I', 0,
  /* 5351 */ 'R', 'L', 'D', 'I', 'M', 'I', 0,
  /* 5358 */ 'R', 'L', 'W', 'I', 'M', 'I', 0,
  /* 5365 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 0,
  /* 5374 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 0,
  /* 5383 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 0,
  /* 5392 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 0,
  /* 5400 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 0,
  /* 5409 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 0,
  /* 5418 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 0,
  /* 5427 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 0,
  /* 5436 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 0,
  /* 5444 */ 'V', 'R', 'L', 'W', 'M', 'I', 0,
  /* 5451 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 0,
  /* 5460 */ 'V', 'S', 'L', 'D', 'O', 'I', 0,
  /* 5467 */ 'X', 'S', 'R', 'D', 'P', 'I', 0,
  /* 5474 */ 'X', 'V', 'R', 'D', 'P', 'I', 0,
  /* 5481 */ 'X', 'S', 'R', 'Q', 'P', 'I', 0,
  /* 5488 */ 'X', 'V', 'R', 'S', 'P', 'I', 0,
  /* 5495 */ 'X', 'O', 'R', 'I', 0,
  /* 5500 */ 'G', '_', 'F', 'P', 'T', 'O', 'S', 'I', 0,
  /* 5509 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 5519 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 5528 */ 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 5537 */ 'G', '_', 'F', 'P', 'T', 'O', 'U', 'I', 0,
  /* 5546 */ 'S', 'R', 'A', 'W', 'I', 0,
  /* 5552 */ 'X', 'X', 'S', 'L', 'D', 'W', 'I', 0,
  /* 5560 */ 'C', 'M', 'P', 'L', 'W', 'I', 0,
  /* 5567 */ 'E', 'V', 'R', 'L', 'W', 'I', 0,
  /* 5574 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 0,
  /* 5583 */ 'I', 'N', 'S', 'L', 'W', 'I', 0,
  /* 5590 */ 'E', 'V', 'S', 'L', 'W', 'I', 0,
  /* 5597 */ 'E', 'X', 'T', 'L', 'W', 'I', 0,
  /* 5604 */ 'C', 'M', 'P', 'W', 'I', 0,
  /* 5610 */ 'C', 'L', 'R', 'R', 'W', 'I', 0,
  /* 5617 */ 'I', 'N', 'S', 'R', 'W', 'I', 0,
  /* 5624 */ 'R', 'O', 'T', 'R', 'W', 'I', 0,
  /* 5631 */ 'E', 'X', 'T', 'R', 'W', 'I', 0,
  /* 5638 */ 'L', 'S', 'W', 'I', 0,
  /* 5643 */ 'S', 'T', 'S', 'W', 'I', 0,
  /* 5649 */ 'T', 'W', 'I', 0,
  /* 5653 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 0,
  /* 5663 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 0,
  /* 5672 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 0,
  /* 5682 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 0,
  /* 5691 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 0,
  /* 5702 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 0,
  /* 5712 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 0,
  /* 5723 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 0,
  /* 5733 */ 'T', 'C', 'H', 'E', 'C', 'K', 0,
  /* 5740 */ 'G', '_', 'P', 'T', 'R', '_', 'M', 'A', 'S', 'K', 0,
  /* 5751 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 0,
  /* 5762 */ 'B', 'L', 0,
  /* 5765 */ 'g', 'B', 'C', 'L', 0,
  /* 5770 */ 'B', 'C', 'C', 'L', 0,
  /* 5775 */ 'R', 'L', 'D', 'C', 'L', 0,
  /* 5781 */ 'R', 'L', 'D', 'I', 'C', 'L', 0,
  /* 5788 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5797 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5806 */ 'T', 'L', 'B', 'I', 'E', 'L', 0,
  /* 5813 */ 'Q', 'V', 'F', 'S', 'E', 'L', 0,
  /* 5820 */ 'I', 'S', 'E', 'L', 0,
  /* 5825 */ 'V', 'S', 'E', 'L', 0,
  /* 5830 */ 'X', 'X', 'S', 'E', 'L', 0,
  /* 5836 */ 'D', 'C', 'B', 'F', 'L', 0,
  /* 5842 */ 'G', '_', 'S', 'H', 'L', 0,
  /* 5848 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'T', 'A', 'I', 'L', '_', 'C', 'A', 'L', 'L', 0,
  /* 5868 */ 'F', 'E', 'N', 'T', 'R', 'Y', '_', 'C', 'A', 'L', 'L', 0,
  /* 5880 */ 'D', 'S', 'S', 'A', 'L', 'L', 0,
  /* 5887 */ 'K', 'I', 'L', 'L', 0,
  /* 5892 */ 'L', 'X', 'V', 'L', 'L', 0,
  /* 5898 */ 'S', 'T', 'X', 'V', 'L', 'L', 0,
  /* 5905 */ 'B', 'L', 'R', 'L', 0,
  /* 5910 */ 'g', 'B', 'C', 'L', 'R', 'L', 0,
  /* 5917 */ 'B', 'C', 'C', 'L', 'R', 'L', 0,
  /* 5924 */ 'B', 'D', 'Z', 'L', 'R', 'L', 0,
  /* 5931 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 0,
  /* 5939 */ 'B', 'C', 'T', 'R', 'L', 0,
  /* 5945 */ 'g', 'B', 'C', 'C', 'T', 'R', 'L', 0,
  /* 5953 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', 0,
  /* 5961 */ 'L', 'V', 'S', 'L', 0,
  /* 5966 */ 'Q', 'V', 'F', 'M', 'U', 'L', 0,
  /* 5973 */ 'G', '_', 'F', 'M', 'U', 'L', 0,
  /* 5980 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 0,
  /* 5988 */ 'G', '_', 'M', 'U', 'L', 0,
  /* 5994 */ 'L', 'X', 'V', 'L', 0,
  /* 5999 */ 'S', 'T', 'X', 'V', 'L', 0,
  /* 6005 */ 'L', 'B', 'A', 'R', 'X', 'L', 0,
  /* 6012 */ 'L', 'D', 'A', 'R', 'X', 'L', 0,
  /* 6019 */ 'L', 'H', 'A', 'R', 'X', 'L', 0,
  /* 6026 */ 'L', 'W', 'A', 'R', 'X', 'L', 0,
  /* 6033 */ 'L', 'V', 'X', 'L', 0,
  /* 6038 */ 'S', 'T', 'V', 'X', 'L', 0,
  /* 6044 */ 'D', 'C', 'B', 'Z', 'L', 0,
  /* 6050 */ 'B', 'D', 'Z', 'L', 0,
  /* 6055 */ 'B', 'D', 'N', 'Z', 'L', 0,
  /* 6061 */ 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 6068 */ 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 6077 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 6088 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 6099 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 6111 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 6123 */ 'V', 'M', 'S', 'U', 'M', 'M', 'B', 'M', 0,
  /* 6132 */ 'V', 'S', 'U', 'B', 'U', 'B', 'M', 0,
  /* 6140 */ 'V', 'A', 'D', 'D', 'U', 'B', 'M', 0,
  /* 6148 */ 'V', 'M', 'S', 'U', 'M', 'U', 'B', 'M', 0,
  /* 6157 */ 'V', 'S', 'U', 'B', 'U', 'D', 'M', 0,
  /* 6165 */ 'V', 'A', 'D', 'D', 'U', 'D', 'M', 0,
  /* 6173 */ 'G', '_', 'F', 'R', 'E', 'M', 0,
  /* 6180 */ 'G', '_', 'S', 'R', 'E', 'M', 0,
  /* 6187 */ 'G', '_', 'U', 'R', 'E', 'M', 0,
  /* 6194 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'M', 0,
  /* 6203 */ 'V', 'S', 'U', 'B', 'U', 'H', 'M', 0,
  /* 6211 */ 'V', 'M', 'L', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 6221 */ 'V', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 6229 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'M', 0,
  /* 6238 */ 'T', 'R', 'E', 'C', 'L', 'A', 'I', 'M', 0,
  /* 6247 */ 'V', 'R', 'F', 'I', 'M', 0,
  /* 6253 */ 'X', 'S', 'R', 'D', 'P', 'I', 'M', 0,
  /* 6261 */ 'X', 'V', 'R', 'D', 'P', 'I', 'M', 0,
  /* 6269 */ 'X', 'V', 'R', 'S', 'P', 'I', 'M', 0,
  /* 6277 */ 'Q', 'V', 'F', 'R', 'I', 'M', 0,
  /* 6284 */ 'V', 'R', 'L', 'D', 'N', 'M', 0,
  /* 6291 */ 'R', 'L', 'W', 'I', 'N', 'M', 0,
  /* 6298 */ 'V', 'R', 'L', 'W', 'N', 'M', 0,
  /* 6305 */ 'V', 'S', 'U', 'B', 'U', 'Q', 'M', 0,
  /* 6313 */ 'V', 'A', 'D', 'D', 'U', 'Q', 'M', 0,
  /* 6321 */ 'V', 'S', 'U', 'B', 'E', 'U', 'Q', 'M', 0,
  /* 6330 */ 'V', 'A', 'D', 'D', 'E', 'U', 'Q', 'M', 0,
  /* 6339 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 0,
  /* 6347 */ 'V', 'P', 'E', 'R', 'M', 0,
  /* 6353 */ 'X', 'X', 'P', 'E', 'R', 'M', 0,
  /* 6360 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 6370 */ 'V', 'P', 'K', 'U', 'D', 'U', 'M', 0,
  /* 6378 */ 'V', 'P', 'K', 'U', 'H', 'U', 'M', 0,
  /* 6386 */ 'V', 'P', 'K', 'U', 'W', 'U', 'M', 0,
  /* 6394 */ 'V', 'S', 'U', 'B', 'U', 'W', 'M', 0,
  /* 6402 */ 'V', 'A', 'D', 'D', 'U', 'W', 'M', 0,
  /* 6410 */ 'V', 'M', 'U', 'L', 'U', 'W', 'M', 0,
  /* 6418 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6430 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6442 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6452 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'N', 0,
  /* 6462 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6474 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6486 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6496 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6508 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6520 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6530 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 0,
  /* 6540 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 0,
  /* 6549 */ 'V', 'R', 'F', 'I', 'N', 0,
  /* 6555 */ 'T', 'B', 'E', 'G', 'I', 'N', 0,
  /* 6562 */ 'Q', 'V', 'F', 'R', 'I', 'N', 0,
  /* 6569 */ 'M', 'F', 'S', 'R', 'I', 'N', 0,
  /* 6576 */ 'M', 'T', 'S', 'R', 'I', 'N', 0,
  /* 6583 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 6599 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 'N', 0,
  /* 6609 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 'N', 0,
  /* 6619 */ 'A', 'T', 'T', 'N', 0,
  /* 6624 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 6641 */ 'G', '_', 'S', 'S', 'U', 'B', 'O', 0,
  /* 6649 */ 'G', '_', 'S', 'A', 'D', 'D', 'O', 0,
  /* 6657 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 0,
  /* 6665 */ 'E', 'n', 'f', 'o', 'r', 'c', 'e', 'I', 'E', 'I', 'O', 0,
  /* 6677 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 0,
  /* 6687 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 'L', 'O', 0,
  /* 6699 */ 'V', 'S', 'L', 'O', 0,
  /* 6704 */ 'G', '_', 'S', 'M', 'U', 'L', 'O', 0,
  /* 6712 */ 'G', '_', 'U', 'M', 'U', 'L', 'O', 0,
  /* 6720 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 'O', 0,
  /* 6730 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6741 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6751 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6760 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6771 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6781 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6790 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 'O', 0,
  /* 6799 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 'O', 0,
  /* 6809 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 'O', 0,
  /* 6818 */ 'V', 'S', 'R', 'O', 0,
  /* 6823 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 0,
  /* 6831 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 6840 */ 'N', 'A', 'P', 0,
  /* 6844 */ 'T', 'R', 'A', 'P', 0,
  /* 6849 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6860 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6871 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6881 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6891 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6902 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6913 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6923 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6933 */ 'X', 'S', 'S', 'U', 'B', 'D', 'P', 0,
  /* 6941 */ 'X', 'V', 'S', 'U', 'B', 'D', 'P', 0,
  /* 6949 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 6959 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 6969 */ 'X', 'S', 'M', 'I', 'N', 'C', 'D', 'P', 0,
  /* 6978 */ 'X', 'S', 'M', 'A', 'X', 'C', 'D', 'P', 0,
  /* 6987 */ 'X', 'S', 'A', 'D', 'D', 'D', 'P', 0,
  /* 6995 */ 'X', 'V', 'A', 'D', 'D', 'D', 'P', 0,
  /* 7003 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 7013 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 7023 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 7033 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 7043 */ 'X', 'S', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 7053 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 7063 */ 'X', 'S', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 0,
  /* 7073 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 0,
  /* 7083 */ 'X', 'S', 'R', 'E', 'D', 'P', 0,
  /* 7090 */ 'X', 'V', 'R', 'E', 'D', 'P', 0,
  /* 7097 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 7108 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 7119 */ 'X', 'S', 'N', 'E', 'G', 'D', 'P', 0,
  /* 7127 */ 'X', 'V', 'N', 'E', 'G', 'D', 'P', 0,
  /* 7135 */ 'X', 'S', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 7144 */ 'X', 'V', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 7153 */ 'X', 'S', 'M', 'I', 'N', 'J', 'D', 'P', 0,
  /* 7162 */ 'X', 'S', 'M', 'A', 'X', 'J', 'D', 'P', 0,
  /* 7171 */ 'X', 'S', 'M', 'U', 'L', 'D', 'P', 0,
  /* 7179 */ 'X', 'V', 'M', 'U', 'L', 'D', 'P', 0,
  /* 7187 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7198 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7209 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7219 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 7229 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7240 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7251 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7261 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 7271 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 7281 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 7291 */ 'X', 'S', 'M', 'I', 'N', 'D', 'P', 0,
  /* 7299 */ 'X', 'V', 'M', 'I', 'N', 'D', 'P', 0,
  /* 7307 */ 'X', 'S', 'C', 'M', 'P', 'O', 'D', 'P', 0,
  /* 7316 */ 'X', 'S', 'C', 'V', 'H', 'P', 'D', 'P', 0,
  /* 7325 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 0,
  /* 7334 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 7343 */ 'X', 'V', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 7352 */ 'X', 'S', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7361 */ 'X', 'V', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7370 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7381 */ 'X', 'S', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7390 */ 'X', 'V', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7399 */ 'X', 'S', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 7409 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 7419 */ 'X', 'S', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7428 */ 'X', 'V', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7437 */ 'X', 'S', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7445 */ 'X', 'V', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7453 */ 'X', 'S', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 7463 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 7473 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7482 */ 'X', 'S', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7492 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7502 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7511 */ 'X', 'S', 'C', 'M', 'P', 'U', 'D', 'P', 0,
  /* 7520 */ 'X', 'S', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7528 */ 'X', 'S', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7537 */ 'X', 'V', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7546 */ 'X', 'V', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7554 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'D', 'P', 0,
  /* 7564 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'D', 'P', 0,
  /* 7574 */ 'X', 'S', 'M', 'A', 'X', 'D', 'P', 0,
  /* 7582 */ 'X', 'V', 'M', 'A', 'X', 'D', 'P', 0,
  /* 7590 */ 'G', '_', 'G', 'E', 'P', 0,
  /* 7596 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 0,
  /* 7604 */ 'V', 'N', 'M', 'S', 'U', 'B', 'F', 'P', 0,
  /* 7613 */ 'V', 'S', 'U', 'B', 'F', 'P', 0,
  /* 7620 */ 'V', 'M', 'A', 'D', 'D', 'F', 'P', 0,
  /* 7628 */ 'V', 'A', 'D', 'D', 'F', 'P', 0,
  /* 7635 */ 'V', 'L', 'O', 'G', 'E', 'F', 'P', 0,
  /* 7643 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 0,
  /* 7652 */ 'V', 'R', 'E', 'F', 'P', 0,
  /* 7658 */ 'V', 'E', 'X', 'P', 'T', 'E', 'F', 'P', 0,
  /* 7667 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'F', 'P', 0,
  /* 7677 */ 'V', 'M', 'I', 'N', 'F', 'P', 0,
  /* 7684 */ 'G', '_', 'S', 'I', 'T', 'O', 'F', 'P', 0,
  /* 7693 */ 'G', '_', 'U', 'I', 'T', 'O', 'F', 'P', 0,
  /* 7702 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 0,
  /* 7711 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 0,
  /* 7720 */ 'V', 'M', 'A', 'X', 'F', 'P', 0,
  /* 7727 */ 'X', 'S', 'C', 'V', 'D', 'P', 'H', 'P', 0,
  /* 7736 */ 'X', 'V', 'C', 'V', 'S', 'P', 'H', 'P', 0,
  /* 7745 */ 'V', 'R', 'F', 'I', 'P', 0,
  /* 7751 */ 'X', 'S', 'R', 'D', 'P', 'I', 'P', 0,
  /* 7759 */ 'X', 'V', 'R', 'D', 'P', 'I', 'P', 0,
  /* 7767 */ 'X', 'V', 'R', 'S', 'P', 'I', 'P', 0,
  /* 7775 */ 'Q', 'V', 'F', 'R', 'I', 'P', 0,
  /* 7782 */ 'D', 'C', 'B', 'F', 'L', 'P', 0,
  /* 7789 */ 'G', '_', 'F', 'C', 'M', 'P', 0,
  /* 7796 */ 'G', '_', 'I', 'C', 'M', 'P', 0,
  /* 7803 */ 'B', 'L', 'A', '8', '_', 'N', 'O', 'P', 0,
  /* 7812 */ 'B', 'L', '8', '_', 'N', 'O', 'P', 0,
  /* 7820 */ 'S', 'T', 'O', 'P', 0,
  /* 7825 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 7838 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'O', 'P', 0,
  /* 7850 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7860 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7869 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7877 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'Q', 'P', 0,
  /* 7887 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7897 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7906 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7914 */ 'X', 'S', 'C', 'V', 'S', 'D', 'Q', 'P', 0,
  /* 7923 */ 'X', 'S', 'C', 'V', 'U', 'D', 'Q', 'P', 0,
  /* 7932 */ 'X', 'S', 'N', 'E', 'G', 'Q', 'P', 0,
  /* 7940 */ 'X', 'S', 'X', 'S', 'I', 'G', 'Q', 'P', 0,
  /* 7949 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 0,
  /* 7957 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'Q', 'P', 0,
  /* 7967 */ 'X', 'S', 'C', 'M', 'P', 'O', 'Q', 'P', 0,
  /* 7976 */ 'X', 'S', 'C', 'V', 'D', 'P', 'Q', 'P', 0,
  /* 7985 */ 'X', 'S', 'I', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 7994 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 8005 */ 'X', 'S', 'X', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 8014 */ 'X', 'S', 'N', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 8023 */ 'X', 'S', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 8031 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 0,
  /* 8040 */ 'X', 'S', 'C', 'M', 'P', 'U', 'Q', 'P', 0,
  /* 8049 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 0,
  /* 8057 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8068 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8079 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8089 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 8099 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8110 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8121 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8131 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 8141 */ 'X', 'S', 'S', 'U', 'B', 'S', 'P', 0,
  /* 8149 */ 'X', 'V', 'S', 'U', 'B', 'S', 'P', 0,
  /* 8157 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 8167 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 8177 */ 'X', 'S', 'A', 'D', 'D', 'S', 'P', 0,
  /* 8185 */ 'X', 'V', 'A', 'D', 'D', 'S', 'P', 0,
  /* 8193 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 8203 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 8213 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 8223 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 8233 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 0,
  /* 8243 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'S', 'P', 0,
  /* 8253 */ 'X', 'S', 'R', 'E', 'S', 'P', 0,
  /* 8260 */ 'X', 'V', 'R', 'E', 'S', 'P', 0,
  /* 8267 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 8278 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 8289 */ 'X', 'V', 'N', 'E', 'G', 'S', 'P', 0,
  /* 8297 */ 'X', 'V', 'X', 'S', 'I', 'G', 'S', 'P', 0,
  /* 8306 */ 'X', 'S', 'M', 'U', 'L', 'S', 'P', 0,
  /* 8314 */ 'X', 'V', 'M', 'U', 'L', 'S', 'P', 0,
  /* 8322 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8333 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8344 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8354 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 8364 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8375 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8386 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8396 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8406 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'S', 'P', 0,
  /* 8416 */ 'X', 'V', 'M', 'I', 'N', 'S', 'P', 0,
  /* 8424 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 8433 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 8442 */ 'X', 'V', 'C', 'V', 'H', 'P', 'S', 'P', 0,
  /* 8451 */ 'X', 'V', 'I', 'E', 'X', 'P', 'S', 'P', 0,
  /* 8460 */ 'X', 'V', 'X', 'E', 'X', 'P', 'S', 'P', 0,
  /* 8469 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 0,
  /* 8479 */ 'Q', 'V', 'F', 'R', 'S', 'P', 0,
  /* 8486 */ 'X', 'V', 'N', 'A', 'B', 'S', 'S', 'P', 0,
  /* 8495 */ 'X', 'V', 'A', 'B', 'S', 'S', 'P', 0,
  /* 8503 */ 'L', 'X', 'S', 'S', 'P', 0,
  /* 8509 */ 'S', 'T', 'X', 'S', 'S', 'P', 0,
  /* 8516 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 0,
  /* 8526 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8535 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8545 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8554 */ 'X', 'S', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8562 */ 'X', 'V', 'T', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8571 */ 'X', 'V', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8579 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'S', 'P', 0,
  /* 8589 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'S', 'P', 0,
  /* 8599 */ 'X', 'V', 'M', 'A', 'X', 'S', 'P', 0,
  /* 8607 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 8622 */ 'X', 'S', 'R', 'Q', 'P', 'X', 'P', 0,
  /* 8630 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'Q', 0,
  /* 8638 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 8647 */ 'E', 'V', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 8655 */ 'I', 'C', 'B', 'L', 'Q', 0,
  /* 8661 */ 'V', 'B', 'P', 'E', 'R', 'M', 'Q', 0,
  /* 8669 */ 'X', 'X', 'B', 'R', 'Q', 0,
  /* 8675 */ 'V', 'M', 'U', 'L', '1', '0', 'U', 'Q', 0,
  /* 8684 */ 'V', 'M', 'U', 'L', '1', '0', 'C', 'U', 'Q', 0,
  /* 8694 */ 'V', 'S', 'U', 'B', 'C', 'U', 'Q', 0,
  /* 8702 */ 'V', 'A', 'D', 'D', 'C', 'U', 'Q', 0,
  /* 8710 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'C', 'U', 'Q', 0,
  /* 8721 */ 'V', 'S', 'U', 'B', 'E', 'C', 'U', 'Q', 0,
  /* 8730 */ 'V', 'A', 'D', 'D', 'E', 'C', 'U', 'Q', 0,
  /* 8739 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'U', 'Q', 0,
  /* 8749 */ 'M', 'B', 'A', 'R', 0,
  /* 8754 */ 'U', 'p', 'd', 'a', 't', 'e', 'G', 'B', 'R', 0,
  /* 8764 */ 'G', '_', 'B', 'R', 0,
  /* 8769 */ 'M', 'F', 'D', 'C', 'R', 0,
  /* 8775 */ 'R', 'L', 'D', 'C', 'R', 0,
  /* 8781 */ 'M', 'T', 'D', 'C', 'R', 0,
  /* 8787 */ 'M', 'F', 'C', 'R', 0,
  /* 8792 */ 'R', 'L', 'D', 'I', 'C', 'R', 0,
  /* 8799 */ 'M', 'F', 'V', 'S', 'C', 'R', 0,
  /* 8806 */ 'M', 'T', 'V', 'S', 'C', 'R', 0,
  /* 8813 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 8824 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 8833 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 8848 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 8863 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 8876 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 8887 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 8896 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 8904 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 8929 */ 'G', '_', 'A', 'S', 'H', 'R', 0,
  /* 8936 */ 'G', '_', 'L', 'S', 'H', 'R', 0,
  /* 8943 */ 'B', 'L', 'R', 0,
  /* 8947 */ 'g', 'B', 'C', 'L', 'R', 0,
  /* 8953 */ 'B', 'C', 'C', 'L', 'R', 0,
  /* 8959 */ 'M', 'F', 'L', 'R', 0,
  /* 8964 */ 'M', 'T', 'L', 'R', 0,
  /* 8969 */ 'B', 'D', 'Z', 'L', 'R', 0,
  /* 8975 */ 'B', 'D', 'N', 'Z', 'L', 'R', 0,
  /* 8982 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 8993 */ 'M', 'o', 'v', 'e', 'G', 'O', 'T', 't', 'o', 'L', 'R', 0,
  /* 9005 */ 'Q', 'V', 'F', 'M', 'R', 0,
  /* 9011 */ 'M', 'F', 'P', 'M', 'R', 0,
  /* 9017 */ 'M', 'T', 'P', 'M', 'R', 0,
  /* 9023 */ 'V', 'P', 'E', 'R', 'M', 'R', 0,
  /* 9030 */ 'X', 'X', 'P', 'E', 'R', 'M', 'R', 0,
  /* 9038 */ 'X', 'X', 'L', 'O', 'R', 0,
  /* 9044 */ 'X', 'X', 'L', 'N', 'O', 'R', 0,
  /* 9051 */ 'C', 'R', 'N', 'O', 'R', 0,
  /* 9057 */ 'E', 'V', 'N', 'O', 'R', 0,
  /* 9063 */ 'C', 'R', 'O', 'R', 0,
  /* 9068 */ 'E', 'V', 'O', 'R', 0,
  /* 9073 */ 'X', 'X', 'L', 'X', 'O', 'R', 0,
  /* 9080 */ 'V', 'P', 'E', 'R', 'M', 'X', 'O', 'R', 0,
  /* 9089 */ 'C', 'R', 'X', 'O', 'R', 0,
  /* 9095 */ 'E', 'V', 'X', 'O', 'R', 0,
  /* 9101 */ 'G', '_', 'X', 'O', 'R', 0,
  /* 9107 */ 'G', '_', 'O', 'R', 0,
  /* 9112 */ 'M', 'F', 'S', 'P', 'R', 0,
  /* 9118 */ 'M', 'T', 'S', 'P', 'R', 0,
  /* 9124 */ 'M', 'F', 'S', 'R', 0,
  /* 9129 */ 'M', 'F', 'M', 'S', 'R', 0,
  /* 9135 */ 'M', 'T', 'M', 'S', 'R', 0,
  /* 9141 */ 'M', 'T', 'S', 'R', 0,
  /* 9146 */ 'L', 'V', 'S', 'R', 0,
  /* 9151 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', 0,
  /* 9160 */ 'g', 'B', 'C', 'C', 'T', 'R', 0,
  /* 9167 */ 'B', 'C', 'C', 'C', 'T', 'R', 0,
  /* 9174 */ 'M', 'F', 'C', 'T', 'R', 0,
  /* 9180 */ 'M', 'T', 'C', 'T', 'R', 0,
  /* 9186 */ 'G', '_', 'I', 'N', 'T', 'T', 'O', 'P', 'T', 'R', 0,
  /* 9197 */ 'Q', 'V', 'F', 'A', 'B', 'S', 0,
  /* 9204 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 0,
  /* 9212 */ 'E', 'V', 'A', 'B', 'S', 0,
  /* 9218 */ 'V', 'S', 'U', 'M', '4', 'S', 'B', 'S', 0,
  /* 9227 */ 'V', 'S', 'U', 'B', 'S', 'B', 'S', 0,
  /* 9235 */ 'V', 'A', 'D', 'D', 'S', 'B', 'S', 0,
  /* 9243 */ 'V', 'S', 'U', 'M', '4', 'U', 'B', 'S', 0,
  /* 9252 */ 'V', 'S', 'U', 'B', 'U', 'B', 'S', 0,
  /* 9260 */ 'V', 'A', 'D', 'D', 'U', 'B', 'S', 0,
  /* 9268 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 0,
  /* 9276 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 0,
  /* 9285 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 0,
  /* 9295 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 0,
  /* 9303 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9312 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9322 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9336 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9349 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9359 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 9370 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'S', 0,
  /* 9379 */ 'D', 'C', 'B', 'T', 'D', 'S', 0,
  /* 9386 */ 'D', 'C', 'B', 'T', 'S', 'T', 'D', 'S', 0,
  /* 9395 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9406 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9417 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'D', 'S', 0,
  /* 9428 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9439 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9450 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9461 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9474 */ 'Q', 'V', 'F', 'R', 'E', 'S', 0,
  /* 9481 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 0,
  /* 9492 */ 'G', '_', 'U', 'N', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 9509 */ 'G', '_', 'M', 'E', 'R', 'G', 'E', '_', 'V', 'A', 'L', 'U', 'E', 'S', 0,
  /* 9524 */ 'M', 'F', 'F', 'S', 0,
  /* 9529 */ 'L', 'F', 'S', 0,
  /* 9533 */ 'M', 'C', 'R', 'F', 'S', 0,
  /* 9539 */ 'S', 'T', 'F', 'S', 0,
  /* 9544 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 9550 */ 'V', 'S', 'U', 'M', '4', 'S', 'H', 'S', 0,
  /* 9559 */ 'V', 'S', 'U', 'B', 'S', 'H', 'S', 0,
  /* 9567 */ 'V', 'M', 'H', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9577 */ 'V', 'M', 'H', 'R', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9588 */ 'V', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9596 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'S', 0,
  /* 9605 */ 'V', 'S', 'U', 'B', 'U', 'H', 'S', 0,
  /* 9613 */ 'V', 'A', 'D', 'D', 'U', 'H', 'S', 0,
  /* 9621 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'S', 0,
  /* 9630 */ 'S', 'U', 'B', 'I', 'S', 0,
  /* 9636 */ 'A', 'D', 'D', 'I', 'S', 0,
  /* 9642 */ 'L', 'I', 'S', 0,
  /* 9646 */ 'X', 'O', 'R', 'I', 'S', 0,
  /* 9652 */ 'E', 'V', 'S', 'R', 'W', 'I', 'S', 0,
  /* 9660 */ 'F', 'S', 'E', 'L', 'S', 0,
  /* 9666 */ 'A', 'D', 'D', '4', 'T', 'L', 'S', 0,
  /* 9674 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', 0,
  /* 9682 */ 'I', 'C', 'B', 'T', 'L', 'S', 0,
  /* 9689 */ 'B', 'L', '8', '_', 'T', 'L', 'S', 0,
  /* 9697 */ 'B', 'L', '_', 'T', 'L', 'S', 0,
  /* 9704 */ 'B', 'L', '8', '_', 'N', 'O', 'P', '_', 'T', 'L', 'S', 0,
  /* 9716 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 0,
  /* 9724 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 'S', 0,
  /* 9733 */ 'F', 'R', 'I', 'M', 'S', 0,
  /* 9739 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 0,
  /* 9747 */ 'F', 'R', 'I', 'N', 'S', 0,
  /* 9753 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 0,
  /* 9761 */ 'F', 'R', 'I', 'P', 'S', 0,
  /* 9767 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 9784 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 9790 */ 'F', 'N', 'A', 'B', 'S', 'S', 0,
  /* 9797 */ 'V', 'P', 'K', 'S', 'D', 'S', 'S', 0,
  /* 9805 */ 'V', 'P', 'K', 'S', 'H', 'S', 'S', 0,
  /* 9813 */ 'V', 'P', 'K', 'S', 'W', 'S', 'S', 0,
  /* 9821 */ 'G', '_', 'I', 'N', 'T', 'R', 'I', 'N', 'S', 'I', 'C', '_', 'W', '_', 'S', 'I', 'D', 'E', '_', 'E', 'F', 'F', 'E', 'C', 'T', 'S', 0,
  /* 9848 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 0,
  /* 9857 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'S', 0,
  /* 9866 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 9873 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 'S', 0,
  /* 9883 */ 'V', 'P', 'K', 'S', 'D', 'U', 'S', 0,
  /* 9891 */ 'V', 'P', 'K', 'U', 'D', 'U', 'S', 0,
  /* 9899 */ 'V', 'P', 'K', 'S', 'H', 'U', 'S', 0,
  /* 9907 */ 'V', 'P', 'K', 'U', 'H', 'U', 'S', 0,
  /* 9915 */ 'F', 'C', 'M', 'P', 'U', 'S', 0,
  /* 9922 */ 'V', 'P', 'K', 'S', 'W', 'U', 'S', 0,
  /* 9930 */ 'V', 'P', 'K', 'U', 'W', 'U', 'S', 0,
  /* 9938 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 9944 */ 'E', 'V', 'S', 'R', 'W', 'S', 0,
  /* 9951 */ 'M', 'T', 'V', 'S', 'R', 'W', 'S', 0,
  /* 9959 */ 'V', 'S', 'U', 'M', '2', 'S', 'W', 'S', 0,
  /* 9968 */ 'V', 'S', 'U', 'B', 'S', 'W', 'S', 0,
  /* 9976 */ 'V', 'A', 'D', 'D', 'S', 'W', 'S', 0,
  /* 9984 */ 'V', 'S', 'U', 'M', 'S', 'W', 'S', 0,
  /* 9992 */ 'V', 'S', 'U', 'B', 'U', 'W', 'S', 0,
  /* 10000 */ 'V', 'A', 'D', 'D', 'U', 'W', 'S', 0,
  /* 10008 */ 'E', 'V', 'D', 'I', 'V', 'W', 'S', 0,
  /* 10016 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 10027 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 10038 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'W', 'S', 0,
  /* 10049 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 10060 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 10071 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'W', 'S', 0,
  /* 10082 */ 'V', 'C', 'T', 'S', 'X', 'S', 0,
  /* 10089 */ 'V', 'C', 'T', 'U', 'X', 'S', 0,
  /* 10096 */ 'F', 'R', 'I', 'Z', 'S', 0,
  /* 10102 */ 'L', 'D', 'A', 'T', 0,
  /* 10107 */ 'S', 'T', 'D', 'A', 'T', 0,
  /* 10113 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10125 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10136 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10149 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10162 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 0,
  /* 10173 */ 'L', 'W', 'A', 'T', 0,
  /* 10178 */ 'S', 'T', 'W', 'A', 'T', 0,
  /* 10184 */ 'D', 'C', 'B', 'T', 0,
  /* 10189 */ 'I', 'C', 'B', 'T', 0,
  /* 10194 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 10204 */ 'G', '_', 'S', 'E', 'L', 'E', 'C', 'T', 0,
  /* 10213 */ 'G', '_', 'B', 'R', 'I', 'N', 'D', 'I', 'R', 'E', 'C', 'T', 0,
  /* 10226 */ 'D', 'C', 'B', 'T', 'C', 'T', 0,
  /* 10233 */ 'D', 'C', 'B', 'T', 'S', 'T', 'C', 'T', 0,
  /* 10242 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 10256 */ 'T', 'C', 'H', 'E', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 10267 */ 'C', 'R', '6', 'S', 'E', 'T', 0,
  /* 10274 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', 0,
  /* 10288 */ 'C', 'R', '6', 'U', 'N', 'S', 'E', 'T', 0,
  /* 10297 */ 'C', 'R', 'U', 'N', 'S', 'E', 'T', 0,
  /* 10305 */ 'C', 'R', 'S', 'E', 'T', 0,
  /* 10311 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 0,
  /* 10320 */ 'W', 'A', 'I', 'T', 0,
  /* 10325 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 10339 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 10351 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', 0,
  /* 10366 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', 0,
  /* 10381 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'X', 'I', 'T', 0,
  /* 10405 */ 'G', '_', 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 10426 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', '_', 'V', 'E', 'C', 'T', 'O', 'R', '_', 'E', 'L', 'T', 0,
  /* 10446 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 0,
  /* 10455 */ 'G', '_', 'F', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 10467 */ 'G', '_', 'C', 'O', 'N', 'S', 'T', 'A', 'N', 'T', 0,
  /* 10478 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 10489 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 10500 */ 'G', '_', 'P', 'T', 'R', 'T', 'O', 'I', 'N', 'T', 0,
  /* 10511 */ 'P', 'P', 'C', '3', '2', 'G', 'O', 'T', 0,
  /* 10520 */ 'P', 'P', 'C', '3', '2', 'P', 'I', 'C', 'G', 'O', 'T', 0,
  /* 10532 */ 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 10541 */ 'T', 'R', 'E', 'C', 'H', 'K', 'P', 'T', 0,
  /* 10550 */ 'G', '_', 'V', 'A', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10560 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10575 */ 'G', '_', 'I', 'N', 'S', 'E', 'R', 'T', 0,
  /* 10584 */ 'T', 'A', 'B', 'O', 'R', 'T', 0,
  /* 10591 */ 'C', 'P', '_', 'A', 'B', 'O', 'R', 'T', 0,
  /* 10600 */ 'F', 'S', 'Q', 'R', 'T', 0,
  /* 10606 */ 'F', 'T', 'S', 'Q', 'R', 'T', 0,
  /* 10613 */ 'G', '_', 'B', 'I', 'T', 'C', 'A', 'S', 'T', 0,
  /* 10623 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 10636 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 10648 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '_', 'L', 'A', 'S', 'T', 0,
  /* 10662 */ 'D', 'C', 'B', 'S', 'T', 0,
  /* 10668 */ 'D', 'S', 'T', 0,
  /* 10672 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '_', 'F', 'I', 'R', 'S', 'T', 0,
  /* 10686 */ 'D', 'C', 'B', 'T', 'S', 'T', 0,
  /* 10693 */ 'D', 'S', 'T', 'S', 'T', 0,
  /* 10699 */ 'D', 'C', 'B', 'T', 'T', 0,
  /* 10705 */ 'D', 'S', 'T', 'T', 0,
  /* 10710 */ 'D', 'C', 'B', 'T', 'S', 'T', 'T', 0,
  /* 10718 */ 'D', 'S', 'T', 'S', 'T', 'T', 0,
  /* 10725 */ 'G', '_', 'F', 'P', 'E', 'X', 'T', 0,
  /* 10733 */ 'G', '_', 'S', 'E', 'X', 'T', 0,
  /* 10740 */ 'G', '_', 'A', 'N', 'Y', 'E', 'X', 'T', 0,
  /* 10749 */ 'G', '_', 'Z', 'E', 'X', 'T', 0,
  /* 10756 */ 'L', 'H', 'A', 'U', 0,
  /* 10761 */ 'S', 'T', 'B', 'U', 0,
  /* 10766 */ 'L', 'F', 'D', 'U', 0,
  /* 10771 */ 'S', 'T', 'F', 'D', 'U', 0,
  /* 10777 */ 'M', 'U', 'L', 'H', 'D', 'U', 0,
  /* 10784 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 0,
  /* 10793 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 0,
  /* 10802 */ 'L', 'D', 'U', 0,
  /* 10806 */ 'S', 'T', 'D', 'U', 0,
  /* 10811 */ 'D', 'I', 'V', 'D', 'U', 0,
  /* 10817 */ 'D', 'I', 'V', 'D', 'E', 'U', 0,
  /* 10824 */ 'D', 'I', 'V', 'W', 'E', 'U', 0,
  /* 10831 */ 'S', 'T', 'H', 'U', 0,
  /* 10836 */ 'E', 'V', 'S', 'R', 'W', 'I', 'U', 0,
  /* 10844 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 0,
  /* 10852 */ 'L', 'F', 'S', 'U', 0,
  /* 10857 */ 'S', 'T', 'F', 'S', 'U', 0,
  /* 10863 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'U', 0,
  /* 10872 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'U', 0,
  /* 10881 */ 'M', 'U', 'L', 'H', 'W', 'U', 0,
  /* 10888 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 0,
  /* 10897 */ 'E', 'V', 'S', 'R', 'W', 'U', 0,
  /* 10904 */ 'S', 'T', 'W', 'U', 0,
  /* 10909 */ 'E', 'V', 'D', 'I', 'V', 'W', 'U', 0,
  /* 10917 */ 'L', 'B', 'Z', 'U', 0,
  /* 10922 */ 'L', 'H', 'Z', 'U', 0,
  /* 10927 */ 'L', 'W', 'Z', 'U', 0,
  /* 10932 */ 'S', 'L', 'B', 'M', 'F', 'E', 'V', 0,
  /* 10940 */ 'G', '_', 'F', 'D', 'I', 'V', 0,
  /* 10947 */ 'G', '_', 'S', 'D', 'I', 'V', 0,
  /* 10954 */ 'F', 'T', 'D', 'I', 'V', 0,
  /* 10960 */ 'G', '_', 'U', 'D', 'I', 'V', 0,
  /* 10967 */ 'V', 'S', 'L', 'V', 0,
  /* 10972 */ 'X', 'X', 'L', 'E', 'Q', 'V', 0,
  /* 10979 */ 'C', 'R', 'E', 'Q', 'V', 0,
  /* 10985 */ 'E', 'V', 'E', 'Q', 'V', 0,
  /* 10991 */ 'V', 'S', 'R', 'V', 0,
  /* 10996 */ 'L', 'X', 'V', 0,
  /* 11000 */ 'S', 'T', 'X', 'V', 0,
  /* 11005 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 0,
  /* 11014 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 0,
  /* 11023 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 11035 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 11047 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 11059 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 11071 */ 'E', 'V', 'A', 'D', 'D', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11083 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11095 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11108 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11120 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11132 */ 'E', 'V', 'A', 'D', 'D', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11144 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11156 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11169 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11181 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 11193 */ 'E', 'V', 'A', 'D', 'D', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11205 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11217 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11230 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11242 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11254 */ 'E', 'V', 'A', 'D', 'D', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11266 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11278 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11291 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11303 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 11315 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'W', 0,
  /* 11326 */ 'V', 'S', 'R', 'A', 'W', 0,
  /* 11332 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'W', 0,
  /* 11340 */ 'E', 'V', 'A', 'D', 'D', 'W', 0,
  /* 11347 */ 'E', 'V', 'L', 'D', 'W', 0,
  /* 11353 */ 'E', 'V', 'R', 'N', 'D', 'W', 0,
  /* 11360 */ 'E', 'V', 'S', 'T', 'D', 'W', 0,
  /* 11367 */ 'V', 'M', 'R', 'G', 'E', 'W', 0,
  /* 11374 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 0,
  /* 11382 */ 'E', 'V', 'S', 'U', 'B', 'F', 'W', 0,
  /* 11390 */ 'E', 'V', 'S', 'U', 'B', 'I', 'F', 'W', 0,
  /* 11399 */ 'V', 'N', 'E', 'G', 'W', 0,
  /* 11405 */ 'V', 'M', 'R', 'G', 'H', 'W', 0,
  /* 11412 */ 'X', 'X', 'M', 'R', 'G', 'H', 'W', 0,
  /* 11420 */ 'M', 'U', 'L', 'H', 'W', 0,
  /* 11426 */ 'E', 'V', 'A', 'D', 'D', 'I', 'W', 0,
  /* 11434 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 0,
  /* 11442 */ 'V', 'M', 'R', 'G', 'L', 'W', 0,
  /* 11449 */ 'X', 'X', 'M', 'R', 'G', 'L', 'W', 0,
  /* 11457 */ 'M', 'U', 'L', 'L', 'W', 0,
  /* 11463 */ 'C', 'M', 'P', 'L', 'W', 0,
  /* 11469 */ 'E', 'V', 'R', 'L', 'W', 0,
  /* 11475 */ 'E', 'V', 'S', 'L', 'W', 0,
  /* 11481 */ 'L', 'M', 'W', 0,
  /* 11485 */ 'S', 'T', 'M', 'W', 0,
  /* 11490 */ 'V', 'P', 'M', 'S', 'U', 'M', 'W', 0,
  /* 11498 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 11510 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 11522 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 11534 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 11546 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11558 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11570 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11582 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11594 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11606 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 11618 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11630 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11642 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11654 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11666 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11678 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 11690 */ 'V', 'M', 'R', 'G', 'O', 'W', 0,
  /* 11697 */ 'G', '_', 'F', 'P', 'O', 'W', 0,
  /* 11704 */ 'C', 'M', 'P', 'W', 0,
  /* 11709 */ 'X', 'X', 'B', 'R', 'W', 0,
  /* 11715 */ 'V', 'S', 'R', 'W', 0,
  /* 11720 */ 'V', 'M', 'U', 'L', 'E', 'S', 'W', 0,
  /* 11728 */ 'V', 'A', 'V', 'G', 'S', 'W', 0,
  /* 11735 */ 'V', 'U', 'P', 'K', 'H', 'S', 'W', 0,
  /* 11743 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'W', 0,
  /* 11752 */ 'V', 'U', 'P', 'K', 'L', 'S', 'W', 0,
  /* 11760 */ 'E', 'V', 'C', 'N', 'T', 'L', 'S', 'W', 0,
  /* 11769 */ 'V', 'M', 'I', 'N', 'S', 'W', 0,
  /* 11776 */ 'V', 'M', 'U', 'L', 'O', 'S', 'W', 0,
  /* 11784 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 0,
  /* 11793 */ 'E', 'X', 'T', 'S', 'W', 0,
  /* 11799 */ 'V', 'M', 'A', 'X', 'S', 'W', 0,
  /* 11806 */ 'V', 'S', 'P', 'L', 'T', 'W', 0,
  /* 11813 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 0,
  /* 11821 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'W', 0,
  /* 11830 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 11839 */ 'X', 'X', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 11849 */ 'S', 'T', 'W', 0,
  /* 11853 */ 'V', 'S', 'U', 'B', 'C', 'U', 'W', 0,
  /* 11861 */ 'V', 'A', 'D', 'D', 'C', 'U', 'W', 0,
  /* 11869 */ 'V', 'A', 'B', 'S', 'D', 'U', 'W', 0,
  /* 11877 */ 'V', 'M', 'U', 'L', 'E', 'U', 'W', 0,
  /* 11885 */ 'V', 'A', 'V', 'G', 'U', 'W', 0,
  /* 11892 */ 'V', 'M', 'I', 'N', 'U', 'W', 0,
  /* 11899 */ 'V', 'M', 'U', 'L', 'O', 'U', 'W', 0,
  /* 11907 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 0,
  /* 11916 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 11927 */ 'X', 'X', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 11939 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 0,
  /* 11948 */ 'V', 'M', 'A', 'X', 'U', 'W', 0,
  /* 11955 */ 'D', 'I', 'V', 'W', 0,
  /* 11960 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 0,
  /* 11969 */ 'V', 'C', 'L', 'Z', 'W', 0,
  /* 11975 */ 'E', 'V', 'C', 'N', 'T', 'L', 'Z', 'W', 0,
  /* 11984 */ 'V', 'C', 'T', 'Z', 'W', 0,
  /* 11990 */ 'C', 'N', 'T', 'T', 'Z', 'W', 0,
  /* 11997 */ 'L', 'X', 'V', 'D', '2', 'X', 0,
  /* 12004 */ 'S', 'T', 'X', 'V', 'D', '2', 'X', 0,
  /* 12012 */ 'L', 'X', 'V', 'W', '4', 'X', 0,
  /* 12019 */ 'S', 'T', 'X', 'V', 'W', '4', 'X', 0,
  /* 12027 */ 'L', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 12035 */ 'S', 'T', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 12044 */ 'L', 'X', 'V', 'H', '8', 'X', 0,
  /* 12051 */ 'S', 'T', 'X', 'V', 'H', '8', 'X', 0,
  /* 12059 */ 'L', 'H', 'A', 'X', 0,
  /* 12064 */ 'T', 'L', 'B', 'I', 'V', 'A', 'X', 0,
  /* 12072 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 0,
  /* 12081 */ 'L', 'X', 'S', 'I', 'W', 'A', 'X', 0,
  /* 12089 */ 'L', 'W', 'A', 'X', 0,
  /* 12094 */ 'L', 'V', 'E', 'B', 'X', 0,
  /* 12100 */ 'S', 'T', 'V', 'E', 'B', 'X', 0,
  /* 12107 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 0,
  /* 12115 */ 'S', 'T', 'B', 'X', 0,
  /* 12120 */ 'S', 'T', 'B', 'C', 'X', 0,
  /* 12126 */ 'S', 'T', 'D', 'C', 'X', 0,
  /* 12132 */ 'S', 'T', 'H', 'C', 'X', 0,
  /* 12138 */ 'S', 'T', 'W', 'C', 'X', 0,
  /* 12144 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 0,
  /* 12152 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 0,
  /* 12161 */ 'E', 'V', 'L', 'D', 'D', 'X', 0,
  /* 12168 */ 'E', 'V', 'S', 'T', 'D', 'D', 'X', 0,
  /* 12176 */ 'Q', 'V', 'L', 'F', 'D', 'X', 0,
  /* 12183 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 0,
  /* 12191 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'D', 'X', 0,
  /* 12200 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'D', 'X', 0,
  /* 12209 */ 'L', 'X', 'S', 'D', 'X', 0,
  /* 12215 */ 'S', 'T', 'X', 'S', 'D', 'X', 0,
  /* 12222 */ 'S', 'T', 'D', 'X', 0,
  /* 12227 */ 'G', '_', 'F', 'R', 'A', 'M', 'E', '_', 'I', 'N', 'D', 'E', 'X', 0,
  /* 12241 */ 'E', 'V', 'L', 'W', 'H', 'E', 'X', 0,
  /* 12249 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 'X', 0,
  /* 12258 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 'X', 0,
  /* 12267 */ 'E', 'V', 'L', 'D', 'H', 'X', 0,
  /* 12274 */ 'E', 'V', 'S', 'T', 'D', 'H', 'X', 0,
  /* 12282 */ 'L', 'V', 'E', 'H', 'X', 0,
  /* 12288 */ 'S', 'T', 'V', 'E', 'H', 'X', 0,
  /* 12295 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 0,
  /* 12303 */ 'S', 'T', 'H', 'X', 0,
  /* 12308 */ 'S', 'T', 'B', 'C', 'I', 'X', 0,
  /* 12315 */ 'L', 'D', 'C', 'I', 'X', 0,
  /* 12321 */ 'S', 'T', 'D', 'C', 'I', 'X', 0,
  /* 12328 */ 'S', 'T', 'H', 'C', 'I', 'X', 0,
  /* 12335 */ 'S', 'T', 'W', 'C', 'I', 'X', 0,
  /* 12342 */ 'L', 'B', 'Z', 'C', 'I', 'X', 0,
  /* 12349 */ 'L', 'H', 'Z', 'C', 'I', 'X', 0,
  /* 12356 */ 'L', 'W', 'Z', 'C', 'I', 'X', 0,
  /* 12363 */ 'X', 'S', 'R', 'Q', 'P', 'I', 'X', 0,
  /* 12371 */ 'V', 'E', 'X', 'T', 'U', 'B', 'L', 'X', 0,
  /* 12380 */ 'V', 'E', 'X', 'T', 'U', 'H', 'L', 'X', 0,
  /* 12389 */ 'V', 'E', 'X', 'T', 'U', 'W', 'L', 'X', 0,
  /* 12398 */ 'L', 'D', 'M', 'X', 0,
  /* 12403 */ 'V', 'S', 'B', 'O', 'X', 0,
  /* 12409 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 'X', 0,
  /* 12418 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 'X', 0,
  /* 12427 */ 'V', 'U', 'P', 'K', 'H', 'P', 'X', 0,
  /* 12435 */ 'V', 'P', 'K', 'P', 'X', 0,
  /* 12441 */ 'V', 'U', 'P', 'K', 'L', 'P', 'X', 0,
  /* 12449 */ 'L', 'X', 'S', 'S', 'P', 'X', 0,
  /* 12456 */ 'S', 'T', 'X', 'S', 'S', 'P', 'X', 0,
  /* 12464 */ 'L', 'B', 'A', 'R', 'X', 0,
  /* 12470 */ 'L', 'D', 'A', 'R', 'X', 0,
  /* 12476 */ 'L', 'H', 'A', 'R', 'X', 0,
  /* 12482 */ 'L', 'W', 'A', 'R', 'X', 0,
  /* 12488 */ 'L', 'D', 'B', 'R', 'X', 0,
  /* 12494 */ 'S', 'T', 'D', 'B', 'R', 'X', 0,
  /* 12501 */ 'L', 'H', 'B', 'R', 'X', 0,
  /* 12507 */ 'S', 'T', 'H', 'B', 'R', 'X', 0,
  /* 12514 */ 'V', 'E', 'X', 'T', 'U', 'B', 'R', 'X', 0,
  /* 12523 */ 'L', 'W', 'B', 'R', 'X', 0,
  /* 12529 */ 'S', 'T', 'W', 'B', 'R', 'X', 0,
  /* 12536 */ 'V', 'E', 'X', 'T', 'U', 'H', 'R', 'X', 0,
  /* 12545 */ 'V', 'E', 'X', 'T', 'U', 'W', 'R', 'X', 0,
  /* 12554 */ 'M', 'C', 'R', 'X', 'R', 'X', 0,
  /* 12561 */ 'T', 'L', 'B', 'S', 'X', 0,
  /* 12567 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 0,
  /* 12575 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 0,
  /* 12584 */ 'L', 'X', 'V', 'D', 'S', 'X', 0,
  /* 12591 */ 'V', 'C', 'F', 'S', 'X', 0,
  /* 12597 */ 'Q', 'V', 'L', 'F', 'S', 'X', 0,
  /* 12604 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 0,
  /* 12612 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 0,
  /* 12621 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 'X', 0,
  /* 12630 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'S', 'X', 0,
  /* 12639 */ 'L', 'X', 'V', 'W', 'S', 'X', 0,
  /* 12646 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12659 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12671 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12685 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12699 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 12711 */ 'L', 'H', 'A', 'U', 'X', 0,
  /* 12717 */ 'L', 'W', 'A', 'U', 'X', 0,
  /* 12723 */ 'S', 'T', 'B', 'U', 'X', 0,
  /* 12729 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 0,
  /* 12738 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 0,
  /* 12748 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 0,
  /* 12756 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 0,
  /* 12765 */ 'L', 'D', 'U', 'X', 0,
  /* 12770 */ 'S', 'T', 'D', 'U', 'X', 0,
  /* 12776 */ 'V', 'C', 'F', 'U', 'X', 0,
  /* 12782 */ 'S', 'T', 'H', 'U', 'X', 0,
  /* 12788 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 'X', 0,
  /* 12797 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 0,
  /* 12806 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 0,
  /* 12816 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 0,
  /* 12824 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 0,
  /* 12833 */ 'S', 'T', 'W', 'U', 'X', 0,
  /* 12839 */ 'L', 'B', 'Z', 'U', 'X', 0,
  /* 12845 */ 'L', 'H', 'Z', 'U', 'X', 0,
  /* 12851 */ 'L', 'W', 'Z', 'U', 'X', 0,
  /* 12857 */ 'L', 'V', 'X', 0,
  /* 12861 */ 'S', 'T', 'V', 'X', 0,
  /* 12866 */ 'L', 'X', 'V', 'X', 0,
  /* 12871 */ 'S', 'T', 'X', 'V', 'X', 0,
  /* 12877 */ 'E', 'V', 'L', 'D', 'W', 'X', 0,
  /* 12884 */ 'E', 'V', 'S', 'T', 'D', 'W', 'X', 0,
  /* 12892 */ 'L', 'V', 'E', 'W', 'X', 0,
  /* 12898 */ 'S', 'T', 'V', 'E', 'W', 'X', 0,
  /* 12905 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 0,
  /* 12914 */ 'S', 'T', 'X', 'S', 'I', 'W', 'X', 0,
  /* 12922 */ 'S', 'T', 'W', 'X', 0,
  /* 12927 */ 'L', 'X', 'S', 'I', 'B', 'Z', 'X', 0,
  /* 12935 */ 'L', 'B', 'Z', 'X', 0,
  /* 12940 */ 'L', 'X', 'S', 'I', 'H', 'Z', 'X', 0,
  /* 12948 */ 'L', 'H', 'Z', 'X', 0,
  /* 12953 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 0,
  /* 12962 */ 'L', 'X', 'S', 'I', 'W', 'Z', 'X', 0,
  /* 12970 */ 'L', 'W', 'Z', 'X', 0,
  /* 12975 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 0,
  /* 12983 */ 'D', 'C', 'B', 'Z', 0,
  /* 12988 */ 'L', 'B', 'Z', 0,
  /* 12992 */ 'B', 'D', 'Z', 0,
  /* 12996 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'Z', 0,
  /* 13005 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'D', 'Z', 0,
  /* 13015 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'D', 'Z', 0,
  /* 13025 */ 'L', 'H', 'Z', 0,
  /* 13029 */ 'V', 'R', 'F', 'I', 'Z', 0,
  /* 13035 */ 'X', 'S', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 13043 */ 'X', 'V', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 13051 */ 'X', 'V', 'R', 'S', 'P', 'I', 'Z', 0,
  /* 13059 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 0,
  /* 13066 */ 'B', 'D', 'N', 'Z', 0,
  /* 13071 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 0,
  /* 13081 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 0,
  /* 13091 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'Z', 0,
  /* 13100 */ 'L', 'W', 'Z', 0,
  /* 13104 */ 'M', 'F', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 13112 */ 'M', 'T', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 13120 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'W', 'Z', 0,
  /* 13130 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'W', 'Z', 0,
  /* 13140 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', '_', 0,
  /* 13149 */ 'B', 'L', '8', '_', 'T', 'L', 'S', '_', 0,
  /* 13158 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'b', 0,
  /* 13167 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'b', 0,
  /* 13176 */ 'M', 'T', 'F', 'S', 'F', 'b', 0,
  /* 13183 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 'b', 0,
  /* 13193 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 'b', 0,
  /* 13204 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 'b', 0,
  /* 13216 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 0,
  /* 13224 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 0,
  /* 13235 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 0,
  /* 13245 */ 'Q', 'V', 'F', 'M', 'R', 'b', 0,
  /* 13252 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 0,
  /* 13262 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 0,
  /* 13272 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'b', 0,
  /* 13280 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'b', 0,
  /* 13289 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'b', 0,
  /* 13297 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 'b', 0,
  /* 13306 */ 'L', 'D', 't', 'o', 'c', 0,
  /* 13312 */ 'L', 'W', 'Z', 't', 'o', 'c', 0,
  /* 13319 */ 'B', 'C', 'T', 'R', 'L', '8', '_', 'L', 'D', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', 0,
  /* 13337 */ 'X', 'X', 'L', 'O', 'R', 'f', 0,
  /* 13344 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', 0,
  /* 13355 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 13366 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 13377 */ 'B', 'D', 'Z', 'L', 'A', 'm', 0,
  /* 13384 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'm', 0,
  /* 13392 */ 'B', 'D', 'Z', 'A', 'm', 0,
  /* 13398 */ 'B', 'D', 'N', 'Z', 'A', 'm', 0,
  /* 13405 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 13413 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 13422 */ 'B', 'D', 'Z', 'L', 'm', 0,
  /* 13428 */ 'B', 'D', 'N', 'Z', 'L', 'm', 0,
  /* 13435 */ 'B', 'D', 'Z', 'L', 'R', 'm', 0,
  /* 13442 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'm', 0,
  /* 13450 */ 'B', 'D', 'Z', 'm', 0,
  /* 13455 */ 'B', 'D', 'N', 'Z', 'm', 0,
  /* 13461 */ 'R', 'L', 'W', 'I', 'M', 'I', 'b', 'm', 0,
  /* 13470 */ 'R', 'L', 'W', 'I', 'N', 'M', 'b', 'm', 0,
  /* 13479 */ 'R', 'L', 'W', 'N', 'M', 'b', 'm', 0,
  /* 13487 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 'b', 'm', 0,
  /* 13497 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 'b', 'm', 0,
  /* 13507 */ 'R', 'L', 'W', 'N', 'M', 'o', 'b', 'm', 0,
  /* 13516 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 'n', 0,
  /* 13525 */ 'B', 'C', 'C', 'T', 'R', '8', 'n', 0,
  /* 13533 */ 'B', 'C', 'n', 0,
  /* 13537 */ 'B', 'C', 'L', 'n', 0,
  /* 13542 */ 'B', 'C', 'L', 'R', 'L', 'n', 0,
  /* 13549 */ 'B', 'C', 'C', 'T', 'R', 'L', 'n', 0,
  /* 13557 */ 'B', 'C', 'L', 'R', 'n', 0,
  /* 13563 */ 'B', 'C', 'C', 'T', 'R', 'n', 0,
  /* 13570 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 'o', 0,
  /* 13583 */ 'A', 'D', 'D', '4', 'o', 0,
  /* 13589 */ 'E', 'X', 'T', 'S', 'B', '8', 'o', 0,
  /* 13597 */ 'A', 'D', 'D', 'C', '8', 'o', 0,
  /* 13604 */ 'A', 'N', 'D', 'C', '8', 'o', 0,
  /* 13611 */ 'S', 'U', 'B', 'F', 'C', '8', 'o', 0,
  /* 13619 */ 'O', 'R', 'C', '8', 'o', 0,
  /* 13625 */ 'A', 'D', 'D', '8', 'o', 0,
  /* 13631 */ 'N', 'A', 'N', 'D', '8', 'o', 0,
  /* 13638 */ 'A', 'D', 'D', 'E', '8', 'o', 0,
  /* 13645 */ 'S', 'U', 'B', 'F', 'E', '8', 'o', 0,
  /* 13653 */ 'A', 'D', 'D', 'M', 'E', '8', 'o', 0,
  /* 13661 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 'o', 0,
  /* 13670 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', 'o', 0,
  /* 13681 */ 'A', 'D', 'D', 'Z', 'E', '8', 'o', 0,
  /* 13689 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 'o', 0,
  /* 13698 */ 'S', 'U', 'B', 'F', '8', 'o', 0,
  /* 13705 */ 'N', 'E', 'G', '8', 'o', 0,
  /* 13711 */ 'E', 'X', 'T', 'S', 'H', '8', 'o', 0,
  /* 13719 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 'o', 0,
  /* 13728 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 'o', 0,
  /* 13737 */ 'R', 'L', 'W', 'N', 'M', '8', 'o', 0,
  /* 13745 */ 'N', 'O', 'R', '8', 'o', 0,
  /* 13751 */ 'X', 'O', 'R', '8', 'o', 0,
  /* 13757 */ 'E', 'Q', 'V', '8', 'o', 0,
  /* 13763 */ 'S', 'L', 'W', '8', 'o', 0,
  /* 13769 */ 'S', 'R', 'W', '8', 'o', 0,
  /* 13775 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 'o', 0,
  /* 13784 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 'o', 0,
  /* 13793 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 'o', 0,
  /* 13802 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 'o', 0,
  /* 13812 */ 'E', 'X', 'T', 'S', 'B', 'o', 0,
  /* 13819 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 'o', 0,
  /* 13829 */ 'F', 'S', 'U', 'B', 'o', 0,
  /* 13835 */ 'F', 'M', 'S', 'U', 'B', 'o', 0,
  /* 13842 */ 'F', 'N', 'M', 'S', 'U', 'B', 'o', 0,
  /* 13850 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 'o', 0,
  /* 13860 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 'o', 0,
  /* 13870 */ 'A', 'D', 'D', 'C', 'o', 0,
  /* 13876 */ 'A', 'N', 'D', 'C', 'o', 0,
  /* 13882 */ 'S', 'U', 'B', 'F', 'C', 'o', 0,
  /* 13889 */ 'S', 'U', 'B', 'I', 'C', 'o', 0,
  /* 13896 */ 'A', 'D', 'D', 'I', 'C', 'o', 0,
  /* 13903 */ 'R', 'L', 'D', 'I', 'C', 'o', 0,
  /* 13910 */ 'B', 'C', 'D', 'T', 'R', 'U', 'N', 'C', 'o', 0,
  /* 13920 */ 'B', 'C', 'D', 'U', 'T', 'R', 'U', 'N', 'C', 'o', 0,
  /* 13931 */ 'O', 'R', 'C', 'o', 0,
  /* 13936 */ 'S', 'R', 'A', 'D', 'o', 0,
  /* 13942 */ 'F', 'A', 'D', 'D', 'o', 0,
  /* 13948 */ 'F', 'M', 'A', 'D', 'D', 'o', 0,
  /* 13955 */ 'F', 'N', 'M', 'A', 'D', 'D', 'o', 0,
  /* 13963 */ 'F', 'N', 'E', 'G', 'D', 'o', 0,
  /* 13970 */ 'M', 'U', 'L', 'H', 'D', 'o', 0,
  /* 13977 */ 'F', 'C', 'F', 'I', 'D', 'o', 0,
  /* 13984 */ 'F', 'C', 'T', 'I', 'D', 'o', 0,
  /* 13991 */ 'F', 'S', 'E', 'L', 'D', 'o', 0,
  /* 13998 */ 'M', 'U', 'L', 'L', 'D', 'o', 0,
  /* 14005 */ 'S', 'L', 'D', 'o', 0,
  /* 14010 */ 'F', 'R', 'I', 'M', 'D', 'o', 0,
  /* 14017 */ 'N', 'A', 'N', 'D', 'o', 0,
  /* 14023 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 'o', 0,
  /* 14032 */ 'F', 'R', 'I', 'N', 'D', 'o', 0,
  /* 14039 */ 'F', 'R', 'I', 'P', 'D', 'o', 0,
  /* 14046 */ 'S', 'R', 'D', 'o', 0,
  /* 14051 */ 'F', 'A', 'B', 'S', 'D', 'o', 0,
  /* 14058 */ 'F', 'N', 'A', 'B', 'S', 'D', 'o', 0,
  /* 14066 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 'o', 0,
  /* 14076 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 'o', 0,
  /* 14086 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 'o', 0,
  /* 14096 */ 'D', 'I', 'V', 'D', 'o', 0,
  /* 14102 */ 'F', 'R', 'I', 'Z', 'D', 'o', 0,
  /* 14109 */ 'C', 'N', 'T', 'L', 'Z', 'D', 'o', 0,
  /* 14117 */ 'C', 'N', 'T', 'T', 'Z', 'D', 'o', 0,
  /* 14125 */ 'A', 'D', 'D', 'E', 'o', 0,
  /* 14131 */ 'D', 'I', 'V', 'D', 'E', 'o', 0,
  /* 14138 */ 'S', 'U', 'B', 'F', 'E', 'o', 0,
  /* 14145 */ 'A', 'D', 'D', 'M', 'E', 'o', 0,
  /* 14152 */ 'S', 'U', 'B', 'F', 'M', 'E', 'o', 0,
  /* 14160 */ 'F', 'R', 'E', 'o', 0,
  /* 14165 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'o', 0,
  /* 14174 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 'o', 0,
  /* 14184 */ 'D', 'I', 'V', 'W', 'E', 'o', 0,
  /* 14191 */ 'A', 'D', 'D', 'Z', 'E', 'o', 0,
  /* 14198 */ 'S', 'U', 'B', 'F', 'Z', 'E', 'o', 0,
  /* 14206 */ 'S', 'U', 'B', 'F', 'o', 0,
  /* 14212 */ 'M', 'T', 'F', 'S', 'F', 'o', 0,
  /* 14219 */ 'N', 'E', 'G', 'o', 0,
  /* 14224 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 'o', 0,
  /* 14233 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 'o', 0,
  /* 14243 */ 'E', 'X', 'T', 'S', 'H', 'o', 0,
  /* 14250 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 'o', 0,
  /* 14260 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 'o', 0,
  /* 14270 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 'o', 0,
  /* 14280 */ 'S', 'R', 'A', 'D', 'I', 'o', 0,
  /* 14287 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 'o', 0,
  /* 14297 */ 'E', 'X', 'T', 'L', 'D', 'I', 'o', 0,
  /* 14305 */ 'A', 'N', 'D', 'I', 'o', 0,
  /* 14311 */ 'C', 'L', 'R', 'R', 'D', 'I', 'o', 0,
  /* 14319 */ 'I', 'N', 'S', 'R', 'D', 'I', 'o', 0,
  /* 14327 */ 'R', 'O', 'T', 'R', 'D', 'I', 'o', 0,
  /* 14335 */ 'E', 'X', 'T', 'R', 'D', 'I', 'o', 0,
  /* 14343 */ 'M', 'T', 'F', 'S', 'F', 'I', 'o', 0,
  /* 14351 */ 'R', 'L', 'D', 'I', 'M', 'I', 'o', 0,
  /* 14359 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 0,
  /* 14367 */ 'S', 'R', 'A', 'W', 'I', 'o', 0,
  /* 14374 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 'o', 0,
  /* 14384 */ 'I', 'N', 'S', 'L', 'W', 'I', 'o', 0,
  /* 14392 */ 'E', 'X', 'T', 'L', 'W', 'I', 'o', 0,
  /* 14400 */ 'C', 'L', 'R', 'R', 'W', 'I', 'o', 0,
  /* 14408 */ 'I', 'N', 'S', 'R', 'W', 'I', 'o', 0,
  /* 14416 */ 'R', 'O', 'T', 'R', 'W', 'I', 'o', 0,
  /* 14424 */ 'E', 'X', 'T', 'R', 'W', 'I', 'o', 0,
  /* 14432 */ 'R', 'L', 'D', 'C', 'L', 'o', 0,
  /* 14439 */ 'R', 'L', 'D', 'I', 'C', 'L', 'o', 0,
  /* 14447 */ 'F', 'M', 'U', 'L', 'o', 0,
  /* 14453 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 0,
  /* 14461 */ 'R', 'L', 'W', 'N', 'M', 'o', 0,
  /* 14468 */ 'B', 'C', 'D', 'C', 'F', 'N', 'o', 0,
  /* 14476 */ 'B', 'C', 'D', 'C', 'P', 'S', 'G', 'N', 'o', 0,
  /* 14486 */ 'B', 'C', 'D', 'S', 'E', 'T', 'S', 'G', 'N', 'o', 0,
  /* 14497 */ 'B', 'C', 'D', 'C', 'T', 'N', 'o', 0,
  /* 14505 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 'o', 0,
  /* 14516 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 'o', 0,
  /* 14527 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 'o', 0,
  /* 14538 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 'o', 0,
  /* 14549 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 'o', 0,
  /* 14558 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 'o', 0,
  /* 14568 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 'o', 0,
  /* 14578 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 'o', 0,
  /* 14588 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 'o', 0,
  /* 14599 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'S', 'P', 'o', 0,
  /* 14610 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 'o', 0,
  /* 14621 */ 'F', 'R', 'S', 'P', 'o', 0,
  /* 14627 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 'o', 0,
  /* 14638 */ 'B', 'C', 'D', 'C', 'F', 'S', 'Q', 'o', 0,
  /* 14647 */ 'B', 'C', 'D', 'C', 'T', 'S', 'Q', 'o', 0,
  /* 14656 */ 'R', 'L', 'D', 'C', 'R', 'o', 0,
  /* 14663 */ 'R', 'L', 'D', 'I', 'C', 'R', 'o', 0,
  /* 14671 */ 'F', 'M', 'R', 'o', 0,
  /* 14676 */ 'N', 'O', 'R', 'o', 0,
  /* 14681 */ 'X', 'O', 'R', 'o', 0,
  /* 14686 */ 'B', 'C', 'D', 'S', 'R', 'o', 0,
  /* 14693 */ 'F', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14700 */ 'F', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14708 */ 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 14717 */ 'B', 'C', 'D', 'S', 'o', 0,
  /* 14723 */ 'F', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14730 */ 'F', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14738 */ 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 14747 */ 'F', 'C', 'F', 'I', 'D', 'S', 'o', 0,
  /* 14755 */ 'F', 'R', 'E', 'S', 'o', 0,
  /* 14761 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'o', 0,
  /* 14771 */ 'M', 'F', 'F', 'S', 'o', 0,
  /* 14777 */ 'F', 'N', 'E', 'G', 'S', 'o', 0,
  /* 14784 */ 'A', 'N', 'D', 'I', 'S', 'o', 0,
  /* 14791 */ 'F', 'S', 'E', 'L', 'S', 'o', 0,
  /* 14798 */ 'F', 'M', 'U', 'L', 'S', 'o', 0,
  /* 14805 */ 'F', 'R', 'I', 'M', 'S', 'o', 0,
  /* 14812 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 'o', 0,
  /* 14821 */ 'F', 'R', 'I', 'N', 'S', 'o', 0,
  /* 14828 */ 'F', 'R', 'I', 'P', 'S', 'o', 0,
  /* 14835 */ 'F', 'A', 'B', 'S', 'S', 'o', 0,
  /* 14842 */ 'F', 'N', 'A', 'B', 'S', 'S', 'o', 0,
  /* 14850 */ 'F', 'S', 'Q', 'R', 'T', 'S', 'o', 0,
  /* 14858 */ 'B', 'C', 'D', 'U', 'S', 'o', 0,
  /* 14865 */ 'F', 'C', 'F', 'I', 'D', 'U', 'S', 'o', 0,
  /* 14874 */ 'F', 'D', 'I', 'V', 'S', 'o', 0,
  /* 14881 */ 'F', 'R', 'I', 'Z', 'S', 'o', 0,
  /* 14888 */ 'F', 'S', 'Q', 'R', 'T', 'o', 0,
  /* 14895 */ 'M', 'U', 'L', 'H', 'D', 'U', 'o', 0,
  /* 14903 */ 'F', 'C', 'F', 'I', 'D', 'U', 'o', 0,
  /* 14911 */ 'F', 'C', 'T', 'I', 'D', 'U', 'o', 0,
  /* 14919 */ 'D', 'I', 'V', 'D', 'U', 'o', 0,
  /* 14926 */ 'D', 'I', 'V', 'D', 'E', 'U', 'o', 0,
  /* 14934 */ 'D', 'I', 'V', 'W', 'E', 'U', 'o', 0,
  /* 14942 */ 'M', 'U', 'L', 'H', 'W', 'U', 'o', 0,
  /* 14950 */ 'F', 'C', 'T', 'I', 'W', 'U', 'o', 0,
  /* 14958 */ 'D', 'I', 'V', 'W', 'U', 'o', 0,
  /* 14965 */ 'F', 'D', 'I', 'V', 'o', 0,
  /* 14971 */ 'E', 'Q', 'V', 'o', 0,
  /* 14976 */ 'S', 'R', 'A', 'W', 'o', 0,
  /* 14982 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 'o', 0,
  /* 14991 */ 'M', 'U', 'L', 'H', 'W', 'o', 0,
  /* 14998 */ 'F', 'C', 'T', 'I', 'W', 'o', 0,
  /* 15005 */ 'M', 'U', 'L', 'L', 'W', 'o', 0,
  /* 15012 */ 'S', 'L', 'W', 'o', 0,
  /* 15017 */ 'S', 'R', 'W', 'o', 0,
  /* 15022 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 'o', 0,
  /* 15032 */ 'E', 'X', 'T', 'S', 'W', 'o', 0,
  /* 15039 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 'o', 0,
  /* 15049 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 'o', 0,
  /* 15059 */ 'D', 'I', 'V', 'W', 'o', 0,
  /* 15065 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 'o', 0,
  /* 15075 */ 'C', 'N', 'T', 'L', 'Z', 'W', 'o', 0,
  /* 15083 */ 'C', 'N', 'T', 'T', 'Z', 'W', 'o', 0,
  /* 15091 */ 'F', 'C', 'T', 'I', 'D', 'Z', 'o', 0,
  /* 15099 */ 'B', 'C', 'D', 'C', 'F', 'Z', 'o', 0,
  /* 15107 */ 'B', 'C', 'D', 'C', 'T', 'Z', 'o', 0,
  /* 15115 */ 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 'o', 0,
  /* 15124 */ 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 'o', 0,
  /* 15133 */ 'F', 'C', 'T', 'I', 'W', 'Z', 'o', 0,
  /* 15141 */ 'B', 'D', 'Z', 'L', 'A', 'p', 0,
  /* 15148 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'p', 0,
  /* 15156 */ 'B', 'D', 'Z', 'A', 'p', 0,
  /* 15162 */ 'B', 'D', 'N', 'Z', 'A', 'p', 0,
  /* 15169 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 15177 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 15186 */ 'B', 'D', 'Z', 'L', 'p', 0,
  /* 15192 */ 'B', 'D', 'N', 'Z', 'L', 'p', 0,
  /* 15199 */ 'B', 'D', 'Z', 'L', 'R', 'p', 0,
  /* 15206 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'p', 0,
  /* 15214 */ 'B', 'D', 'Z', 'p', 0,
  /* 15219 */ 'B', 'D', 'N', 'Z', 'p', 0,
  /* 15225 */ 'M', 'T', 'C', 'T', 'R', '8', 'l', 'o', 'o', 'p', 0,
  /* 15236 */ 'M', 'T', 'C', 'T', 'R', 'l', 'o', 'o', 'p', 0,
  /* 15246 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 0,
  /* 15260 */ 'V', 'S', 'P', 'L', 'T', 'B', 's', 0,
  /* 15268 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 's', 0,
  /* 15278 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 's', 0,
  /* 15288 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 's', 0,
  /* 15298 */ 'Q', 'V', 'F', 'N', 'E', 'G', 's', 0,
  /* 15306 */ 'V', 'S', 'P', 'L', 'T', 'H', 's', 0,
  /* 15314 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 's', 0,
  /* 15324 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 's', 0,
  /* 15334 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 's', 0,
  /* 15345 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 's', 0,
  /* 15357 */ 'Q', 'V', 'F', 'R', 'I', 'M', 's', 0,
  /* 15365 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 's', 0,
  /* 15374 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 's', 0,
  /* 15384 */ 'Q', 'V', 'F', 'R', 'I', 'N', 's', 0,
  /* 15392 */ 'Q', 'V', 'F', 'R', 'I', 'P', 's', 0,
  /* 15400 */ 'Q', 'V', 'F', 'R', 'S', 'P', 's', 0,
  /* 15408 */ 'Q', 'V', 'F', 'M', 'R', 's', 0,
  /* 15415 */ 'Q', 'V', 'F', 'A', 'B', 'S', 's', 0,
  /* 15423 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 's', 0,
  /* 15432 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 's', 0,
  /* 15441 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 15451 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 15462 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 's', 0,
  /* 15471 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 15481 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 15492 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 's', 0,
  /* 15504 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 's', 0,
  /* 15516 */ 'Q', 'V', 'F', 'R', 'E', 'S', 's', 0,
  /* 15524 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 's', 0,
  /* 15536 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 's', 0,
  /* 15545 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 's', 0,
  /* 15557 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 's', 0,
  /* 15569 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 's', 0,
  /* 15579 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 's', 0,
  /* 15589 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 's', 0,
  /* 15598 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 's', 0,
  /* 15607 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 's', 0,
  /* 15617 */ 'Q', 'V', 'L', 'F', 'S', 'X', 's', 0,
  /* 15625 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 's', 0,
  /* 15634 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 's', 0,
  /* 15644 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 's', 0,
  /* 15652 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 's', 0,
  /* 15661 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 's', 0,
  /* 15673 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 's', 0,
  /* 15684 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 's', 0,
  /* 15695 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 's', 0,
  /* 15706 */ 'B', 'C', 'L', 'a', 'l', 'w', 'a', 'y', 's', 0,
  /* 15716 */ 'g', 'B', 'C', 'A', 'a', 't', 0,
  /* 15723 */ 'g', 'B', 'C', 'L', 'A', 'a', 't', 0,
  /* 15731 */ 'g', 'B', 'C', 'a', 't', 0,
  /* 15737 */ 'g', 'B', 'C', 'L', 'a', 't', 0,
  /* 15744 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 'i', 'n', 't', 0,
  /* 15756 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 15766 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 15776 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 'v', 0,
  /* 15785 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 'v', 0,
  /* 15794 */ 'L', 'A', 'x', 0,
  /* 15798 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 'x', 0,
  /* 15808 */ 'D', 'C', 'B', 'F', 'x', 0,
  /* 15814 */ 'D', 'C', 'B', 'T', 'x', 0,
  /* 15820 */ 'D', 'C', 'B', 'T', 'S', 'T', 'x', 0,
  /* 15828 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 'x', 0,
  /* 15837 */ 'X', 'X', 'L', 'X', 'O', 'R', 'z', 0,
  /* 15845 */ 'X', 'X', 'L', 'X', 'O', 'R', 'd', 'p', 'z', 0,
  /* 15855 */ 'X', 'X', 'L', 'X', 'O', 'R', 's', 'p', 'z', 0,
  /* 15865 */ 'F', 'A', 'D', 'D', 'r', 't', 'z', 0,
};

extern const unsigned PPCInstrNameIndices[] = {
    5328U, 6360U, 6583U, 5797U, 5788U, 5887U, 4765U, 4780U, 
    4624U, 4794U, 9767U, 4496U, 4343U, 12978U, 4417U, 10560U, 
    4075U, 6831U, 5868U, 10489U, 4122U, 10478U, 4437U, 7838U, 
    7825U, 8904U, 10242U, 10381U, 5848U, 3883U, 3271U, 5988U, 
    10947U, 10960U, 6180U, 6187U, 4064U, 9107U, 9101U, 12227U, 
    4506U, 10194U, 9492U, 10575U, 4345U, 9509U, 10500U, 9186U, 
    10613U, 3781U, 4462U, 4102U, 10213U, 3424U, 9821U, 10740U, 
    3458U, 10467U, 10455U, 10550U, 4808U, 10733U, 10749U, 5842U, 
    8936U, 8929U, 7796U, 7789U, 10204U, 4356U, 4335U, 6649U, 
    6641U, 6712U, 6704U, 4883U, 4875U, 3815U, 3247U, 5973U, 
    10940U, 6173U, 11697U, 4752U, 10725U, 3448U, 5500U, 5537U, 
    7684U, 7693U, 7590U, 5740U, 8764U, 10426U, 10405U, 892U, 
    9666U, 13583U, 1310U, 9674U, 13140U, 13625U, 3333U, 1261U, 
    13597U, 13870U, 4359U, 1321U, 13638U, 14125U, 5198U, 1443U, 
    3381U, 1280U, 13896U, 9636U, 1881U, 2493U, 55U, 2477U, 
    2451U, 2464U, 2440U, 6111U, 349U, 6077U, 309U, 8833U, 
    363U, 6088U, 322U, 8848U, 380U, 6068U, 4424U, 1334U, 
    13653U, 14145U, 4601U, 1359U, 13681U, 14191U, 6624U, 8607U, 
    4026U, 1316U, 13632U, 3341U, 1267U, 13604U, 13876U, 14784U, 
    2208U, 14305U, 2201U, 10351U, 1915U, 10366U, 1931U, 14018U, 
    1081U, 209U, 655U, 1614U, 963U, 91U, 537U, 1502U, 
    1004U, 132U, 578U, 1541U, 1161U, 289U, 735U, 1700U, 
    1045U, 173U, 619U, 1580U, 983U, 111U, 557U, 1521U, 
    1121U, 249U, 695U, 1652U, 943U, 71U, 517U, 1470U, 
    1140U, 268U, 714U, 1680U, 1024U, 152U, 598U, 1560U, 
    1101U, 229U, 675U, 1633U, 1065U, 193U, 639U, 1599U, 
    6619U, 2941U, 2330U, 3326U, 3329U, 2353U, 9167U, 1859U, 
    5953U, 1744U, 5770U, 2705U, 8953U, 5917U, 9161U, 1852U, 
    13525U, 5946U, 1736U, 13516U, 13549U, 13563U, 14468U, 14638U, 
    15099U, 14476U, 14497U, 14647U, 15107U, 14486U, 14686U, 14717U, 
    13910U, 14858U, 13920U, 5766U, 8948U, 5911U, 13542U, 13557U, 
    15706U, 13537U, 9155U, 1846U, 5939U, 1729U, 13319U, 13533U, 
    13066U, 2154U, 2929U, 13398U, 15162U, 6055U, 2717U, 13384U, 
    15148U, 8975U, 1798U, 5931U, 13413U, 15177U, 13442U, 15206U, 
    13428U, 15192U, 13455U, 15219U, 12992U, 2144U, 2924U, 13392U, 
    15156U, 6050U, 2711U, 13377U, 15141U, 8969U, 1791U, 5924U, 
    13405U, 15169U, 13435U, 15199U, 13422U, 15186U, 13450U, 15214U, 
    5762U, 1719U, 7812U, 9704U, 9689U, 13149U, 2695U, 1218U, 
    7803U, 8943U, 1774U, 5905U, 9697U, 4008U, 3442U, 3040U, 
    5215U, 14287U, 5574U, 14374U, 5246U, 14311U, 5610U, 14400U, 
    3028U, 1230U, 4117U, 5240U, 3033U, 3977U, 5208U, 11463U, 
    5560U, 3048U, 1236U, 11704U, 5604U, 4307U, 14109U, 11977U, 
    2009U, 13775U, 15075U, 4320U, 14117U, 11990U, 2017U, 13784U, 
    15083U, 10591U, 12975U, 2130U, 10672U, 15828U, 4487U, 1349U, 
    13670U, 10648U, 14174U, 15798U, 10267U, 10288U, 4052U, 3346U, 
    10979U, 4038U, 9051U, 9063U, 3601U, 10305U, 10297U, 9089U, 
    2328U, 4614U, 5836U, 7782U, 15808U, 5127U, 10662U, 10184U, 
    10226U, 9379U, 10686U, 10233U, 9386U, 10710U, 15820U, 10699U, 
    15814U, 12983U, 6044U, 5142U, 440U, 836U, 450U, 846U, 
    4290U, 4364U, 10817U, 14926U, 14131U, 10811U, 14919U, 14096U, 
    11955U, 4587U, 10824U, 14934U, 14184U, 10911U, 14958U, 15059U, 
    9801U, 5880U, 10668U, 755U, 10693U, 761U, 10718U, 776U, 
    10705U, 769U, 3502U, 1295U, 10274U, 1900U, 461U, 857U, 
    479U, 875U, 15246U, 10975U, 1989U, 13757U, 14971U, 9212U, 
    11426U, 11071U, 11193U, 11132U, 11254U, 11340U, 4058U, 3353U, 
    8647U, 9848U, 10863U, 9857U, 10872U, 11760U, 11975U, 10008U, 
    10909U, 10985U, 3137U, 4988U, 3889U, 12161U, 4830U, 12267U, 
    11347U, 12877U, 10113U, 12646U, 10136U, 12671U, 10149U, 12685U, 
    4390U, 12241U, 9753U, 12621U, 10844U, 12788U, 10125U, 12659U, 
    10162U, 12699U, 5306U, 6687U, 6677U, 5316U, 2216U, 6418U, 
    2260U, 6462U, 2294U, 6496U, 4637U, 2358U, 11023U, 11498U, 
    5365U, 2519U, 11083U, 11546U, 4703U, 2397U, 11047U, 11522U, 
    11205U, 11618U, 5400U, 2558U, 11144U, 11582U, 11266U, 11654U, 
    2228U, 6430U, 2272U, 6474U, 2306U, 6508U, 4655U, 2378U, 
    11035U, 11510U, 5383U, 2539U, 11120U, 11570U, 4721U, 2417U, 
    11059U, 11534U, 11242U, 11642U, 5427U, 2588U, 11181U, 11606U, 
    11303U, 11678U, 2724U, 4646U, 2368U, 5374U, 2529U, 4712U, 
    2407U, 5409U, 2568U, 11108U, 11558U, 11230U, 11630U, 5418U, 
    2578U, 11169U, 11594U, 11291U, 11666U, 4664U, 2388U, 2240U, 
    6442U, 5392U, 2549U, 2284U, 6486U, 4730U, 2427U, 2250U, 
    6452U, 5436U, 2598U, 2318U, 6520U, 4045U, 4759U, 9057U, 
    9068U, 3607U, 11469U, 5567U, 11353U, 11475U, 5590U, 5296U, 
    5519U, 9652U, 10836U, 9944U, 10897U, 3903U, 12168U, 4836U, 
    12274U, 11360U, 12884U, 4397U, 12249U, 6657U, 12409U, 4593U, 
    12258U, 6823U, 12418U, 11095U, 11217U, 11156U, 11278U, 11382U, 
    11390U, 9095U, 5224U, 14297U, 5597U, 14392U, 5267U, 14335U, 
    5631U, 14424U, 3139U, 1243U, 785U, 13589U, 13812U, 4990U, 
    1431U, 798U, 13711U, 14243U, 11793U, 824U, 13570U, 15032U, 
    6665U, 4172U, 14051U, 9784U, 14835U, 3810U, 9297U, 14723U, 
    13942U, 15865U, 3939U, 9372U, 14747U, 10786U, 9875U, 14865U, 
    14903U, 13977U, 4258U, 9915U, 4088U, 14023U, 9739U, 14812U, 
    3953U, 10795U, 13073U, 15115U, 14911U, 12998U, 15091U, 13984U, 
    11436U, 10890U, 13083U, 15124U, 14950U, 13093U, 15133U, 14998U, 
    10942U, 9938U, 14874U, 14965U, 3824U, 9305U, 14730U, 13948U, 
    9007U, 14671U, 3256U, 9278U, 14700U, 13835U, 5968U, 9718U, 
    14798U, 14447U, 4178U, 14058U, 9790U, 14842U, 3919U, 13963U, 
    9544U, 14777U, 3832U, 9314U, 14738U, 13955U, 3264U, 9287U, 
    14708U, 13842U, 4458U, 9476U, 14755U, 14160U, 4001U, 14010U, 
    9733U, 14805U, 4096U, 14032U, 9747U, 14821U, 4111U, 14039U, 
    9761U, 14828U, 4295U, 14102U, 10096U, 14881U, 8481U, 14621U, 
    4479U, 9483U, 14761U, 14165U, 3965U, 13991U, 9660U, 14791U, 
    10600U, 9866U, 14850U, 14888U, 3242U, 9270U, 14693U, 13829U, 
    10954U, 10606U, 8876U, 412U, 8863U, 397U, 3945U, 5132U, 
    3436U, 8655U, 10189U, 9682U, 5148U, 5583U, 14384U, 5253U, 
    14319U, 5617U, 14408U, 5820U, 1723U, 3490U, 2696U, 15794U, 
    12464U, 6005U, 12988U, 2139U, 12342U, 10917U, 1971U, 12839U, 
    2085U, 12935U, 2112U, 3962U, 12470U, 6012U, 10102U, 12488U, 
    12315U, 12398U, 10802U, 12765U, 12196U, 6099U, 335U, 13306U, 
    2340U, 10532U, 5528U, 6061U, 3910U, 10766U, 12750U, 12178U, 
    12074U, 12955U, 9529U, 10852U, 12818U, 12599U, 2436U, 1213U, 
    12476U, 6019U, 10756U, 1947U, 12711U, 2057U, 12059U, 2025U, 
    12501U, 2043U, 13025U, 2149U, 12349U, 10922U, 1977U, 12845U, 
    2092U, 12948U, 2118U, 5335U, 1452U, 9642U, 1888U, 11481U, 
    5638U, 12094U, 12282U, 12892U, 5961U, 9146U, 12857U, 6033U, 
    2730U, 12482U, 6026U, 10173U, 12717U, 12089U, 432U, 425U, 
    12523U, 2050U, 13100U, 2160U, 12356U, 10927U, 1983U, 12851U, 
    2099U, 12970U, 2124U, 13312U, 4208U, 12209U, 12927U, 12940U, 
    12081U, 12962U, 8503U, 12449U, 10996U, 12027U, 11997U, 12584U, 
    12044U, 5994U, 5892U, 12012U, 12639U, 12866U, 8749U, 4672U, 
    9533U, 12554U, 4327U, 8787U, 1768U, 9174U, 1867U, 8769U, 
    9524U, 14771U, 8959U, 1779U, 9129U, 4677U, 1380U, 9011U, 
    9112U, 1828U, 9124U, 6569U, 3152U, 1250U, 4166U, 4521U, 
    15756U, 8799U, 4152U, 3983U, 13104U, 3482U, 3496U, 4691U, 
    1396U, 9180U, 1874U, 15225U, 15236U, 8781U, 0U, 48U, 
    4697U, 5289U, 14343U, 13176U, 14212U, 8964U, 1785U, 9135U, 
    4145U, 4684U, 1388U, 9017U, 9118U, 1835U, 9141U, 6576U, 
    4530U, 15766U, 8806U, 4159U, 3895U, 2734U, 9951U, 13112U, 
    3931U, 10777U, 14895U, 13970U, 11420U, 10881U, 14942U, 14991U, 
    3971U, 13998U, 5338U, 1449U, 11457U, 15005U, 8993U, 8982U, 
    1806U, 4033U, 1315U, 13631U, 14017U, 6840U, 4748U, 1426U, 
    13705U, 14219U, 7808U, 1181U, 1193U, 9047U, 1818U, 13745U, 
    14676U, 9041U, 1819U, 13746U, 3597U, 1305U, 13619U, 13931U, 
    5496U, 1465U, 9647U, 1894U, 14677U, 4230U, 11822U, 10511U, 
    10520U, 5451U, 13183U, 15324U, 5509U, 13193U, 15334U, 9197U, 
    15415U, 3808U, 9295U, 15462U, 3937U, 9370U, 10784U, 9873U, 
    13158U, 8638U, 13235U, 15673U, 10311U, 13252U, 15684U, 10446U, 
    13262U, 15695U, 6540U, 15374U, 3951U, 10793U, 13071U, 12996U, 
    13167U, 11434U, 10888U, 13081U, 13091U, 5751U, 13204U, 15345U, 
    3822U, 9303U, 15471U, 9005U, 13245U, 15408U, 3254U, 9276U, 
    15441U, 5966U, 9716U, 15536U, 9204U, 15423U, 4745U, 15298U, 
    3830U, 9312U, 15481U, 3262U, 9285U, 15451U, 6339U, 15365U, 
    4456U, 9474U, 15516U, 6277U, 15357U, 6562U, 15384U, 7775U, 
    15392U, 13059U, 15644U, 8479U, 15400U, 4477U, 9481U, 15524U, 
    5813U, 13216U, 13297U, 15652U, 3240U, 9268U, 15432U, 6530U, 
    13224U, 15661U, 3864U, 9349U, 5980U, 9724U, 3839U, 9322U, 
    3873U, 9359U, 3852U, 9336U, 5175U, 12729U, 2824U, 12144U, 
    2752U, 12797U, 2864U, 12567U, 2788U, 15598U, 12748U, 2845U, 
    12176U, 2771U, 13272U, 12072U, 2742U, 12953U, 2914U, 12816U, 
    2885U, 12597U, 2807U, 13289U, 15617U, 12191U, 12612U, 15744U, 
    12200U, 12630U, 12738U, 2834U, 5691U, 2649U, 12152U, 2761U, 
    5653U, 2607U, 12806U, 2874U, 5712U, 2672U, 12575U, 2797U, 
    5672U, 2628U, 15607U, 12756U, 2854U, 5702U, 2661U, 12183U, 
    2779U, 5663U, 2618U, 13280U, 12905U, 2904U, 12824U, 2894U, 
    5723U, 2684U, 15634U, 12604U, 2815U, 5682U, 2639U, 15625U, 
    8813U, 10325U, 4539U, 5164U, 5203U, 2949U, 5285U, 3946U, 
    5169U, 5775U, 14432U, 8775U, 14656U, 3387U, 5781U, 811U, 
    14439U, 8792U, 14663U, 13903U, 5351U, 14351U, 5358U, 1456U, 
    13719U, 13461U, 14359U, 13487U, 6291U, 1753U, 13728U, 13470U, 
    14453U, 13497U, 6299U, 1761U, 13737U, 13479U, 14461U, 13507U, 
    5260U, 14327U, 5624U, 14416U, 3186U, 3723U, 897U, 1403U, 
    920U, 1489U, 3511U, 3538U, 3640U, 3613U, 3565U, 3696U, 
    3667U, 910U, 1416U, 933U, 1670U, 3526U, 3553U, 3655U, 
    3628U, 3581U, 3711U, 3683U, 2507U, 4405U, 4738U, 4370U, 
    10932U, 4470U, 3466U, 3997U, 5219U, 14291U, 14005U, 11477U, 
    1994U, 13763U, 5578U, 14378U, 15012U, 8824U, 10339U, 4568U, 
    3789U, 5192U, 14280U, 13936U, 11327U, 5546U, 14367U, 14976U, 
    4148U, 5255U, 14321U, 14046U, 11716U, 1999U, 13769U, 5619U, 
    14410U, 15017U, 3182U, 1256U, 12308U, 12120U, 10761U, 1953U, 
    12723U, 2064U, 12115U, 2031U, 4247U, 10107U, 12494U, 12321U, 
    12126U, 10806U, 12770U, 12222U, 3914U, 10771U, 12758U, 12185U, 
    12907U, 9539U, 10857U, 12826U, 12606U, 5028U, 1438U, 12507U, 
    12328U, 12132U, 10831U, 1959U, 12782U, 2071U, 12303U, 2037U, 
    11485U, 7820U, 5643U, 12100U, 12288U, 12898U, 12861U, 6038U, 
    11849U, 2004U, 10178U, 12529U, 12335U, 12138U, 10904U, 1965U, 
    12833U, 2078U, 12922U, 2106U, 4213U, 12215U, 12107U, 15776U, 
    12295U, 15785U, 12914U, 8509U, 12456U, 11000U, 12035U, 12004U, 
    12051U, 5999U, 5898U, 12019U, 12871U, 4619U, 1374U, 13698U, 
    3369U, 1273U, 13611U, 13882U, 4384U, 1327U, 13645U, 14138U, 
    3393U, 1287U, 4430U, 1341U, 13661U, 14152U, 4607U, 1366U, 
    13689U, 14198U, 14206U, 5137U, 3375U, 13889U, 9630U, 3469U, 
    10584U, 3360U, 5154U, 3726U, 5182U, 3004U, 1223U, 2333U, 
    1205U, 9151U, 1842U, 6555U, 5733U, 10256U, 13344U, 2165U, 
    13355U, 2177U, 13366U, 2189U, 4226U, 5274U, 4070U, 2513U, 
    4411U, 5806U, 12064U, 3959U, 5332U, 4450U, 496U, 12561U, 
    510U, 3762U, 3474U, 4581U, 503U, 6844U, 10541U, 6238U, 
    9142U, 11810U, 5649U, 4554U, 8754U, 3193U, 5032U, 11869U, 
    8702U, 11861U, 8730U, 6330U, 7628U, 9235U, 9588U, 9976U, 
    6140U, 9260U, 6165U, 6221U, 9613U, 6313U, 6402U, 10000U, 
    4059U, 3354U, 3081U, 4932U, 11728U, 3209U, 5048U, 11885U, 
    4007U, 8661U, 12591U, 32U, 12776U, 40U, 8896U, 10636U, 
    3313U, 4301U, 5115U, 2955U, 11969U, 7596U, 14549U, 7702U, 
    14568U, 3231U, 13819U, 4265U, 14076U, 5070U, 14250U, 11907U, 
    15039U, 7643U, 14558U, 7711U, 14578U, 3128U, 13802U, 4192U, 
    14066U, 4979U, 14233U, 11784U, 15022U, 3288U, 13850U, 4274U, 
    14086U, 5090U, 14260U, 11939U, 15049U, 2973U, 13793U, 4843U, 
    14224U, 11374U, 14982U, 3304U, 13860U, 5106U, 14270U, 11960U, 
    15065U, 10082U, 14U, 10089U, 23U, 3319U, 4314U, 5121U, 
    2964U, 11984U, 10986U, 7658U, 4219U, 3277U, 5079U, 11916U, 
    3735U, 15268U, 11005U, 15569U, 3744U, 15278U, 11014U, 15579U, 
    3753U, 15288U, 12371U, 12514U, 12380U, 12536U, 12389U, 12545U, 
    3794U, 3173U, 4238U, 5019U, 11830U, 7635U, 7620U, 7720U, 
    3145U, 4201U, 4996U, 11799U, 3297U, 4283U, 5099U, 11948U, 
    9567U, 9577U, 7677U, 3113U, 4185U, 4964U, 11769U, 3216U, 
    4251U, 5055U, 11892U, 6211U, 11367U, 2981U, 4851U, 11405U, 
    2997U, 4858U, 11442U, 11690U, 6123U, 6194U, 9596U, 6148U, 
    6229U, 9621U, 8684U, 8710U, 8739U, 8675U, 3059U, 4910U, 
    11720U, 3201U, 5040U, 11877U, 3120U, 4971U, 11776U, 3223U, 
    5062U, 11899U, 6410U, 4046U, 8887U, 10623U, 3925U, 11399U, 
    7604U, 9058U, 9069U, 3608U, 6347U, 9023U, 9080U, 12435U, 
    9797U, 9883U, 9805U, 9899U, 9813U, 9922U, 6370U, 9891U, 
    6378U, 9907U, 6386U, 9930U, 3020U, 4015U, 4891U, 11490U, 
    3164U, 4229U, 5010U, 11821U, 3800U, 8630U, 11332U, 7652U, 
    6247U, 6549U, 7745U, 13029U, 3010U, 3991U, 5344U, 6284U, 
    4865U, 11470U, 5444U, 6298U, 7667U, 12403U, 5825U, 3770U, 
    11315U, 5962U, 3015U, 3996U, 5460U, 4870U, 6699U, 10967U, 
    11476U, 3157U, 15260U, 5003U, 15306U, 3096U, 4947U, 11743U, 
    11806U, 9147U, 2943U, 3788U, 4824U, 11326U, 3054U, 4154U, 
    4905U, 6818U, 10991U, 11715U, 8694U, 11853U, 8721U, 6321U, 
    7613U, 9227U, 9559U, 9968U, 6132U, 9252U, 6157U, 6203U, 
    9605U, 6305U, 6394U, 9992U, 9959U, 9218U, 9550U, 9243U, 
    9984U, 12427U, 3088U, 4939U, 11735U, 12441U, 3105U, 4956U, 
    11752U, 9096U, 7U, 2935U, 4816U, 9461U, 3067U, 4918U, 
    10320U, 4378U, 5278U, 9076U, 1823U, 13751U, 5495U, 1464U, 
    9646U, 1893U, 14681U, 7437U, 8023U, 6987U, 7906U, 6781U, 
    8177U, 7399U, 7370U, 7994U, 7043U, 7453U, 7063U, 7307U, 
    7967U, 7511U, 8040U, 7271U, 7957U, 7727U, 7976U, 8424U, 
    6609U, 9395U, 15492U, 10016U, 15545U, 9428U, 15504U, 10049U, 
    15557U, 7316U, 7325U, 6720U, 13005U, 13120U, 13015U, 13130U, 
    7914U, 7334U, 6599U, 7003U, 8193U, 7923U, 7023U, 8213U, 
    7520U, 8049U, 6809U, 8554U, 7352U, 7985U, 6913U, 8121U, 
    7251U, 8386U, 7897U, 6771U, 6978U, 7574U, 7162U, 6969U, 
    7291U, 7153U, 6871U, 8079U, 7209U, 8344U, 7860U, 6741U, 
    7171U, 7949U, 6790U, 8306U, 7419U, 8014U, 7119U, 7932U, 
    6891U, 8099U, 7229U, 8364U, 7887U, 6760U, 6849U, 8057U, 
    7187U, 8322U, 7850U, 6730U, 5467U, 3400U, 6253U, 7751U, 
    13035U, 7083U, 8253U, 5481U, 12363U, 8622U, 7097U, 8267U, 
    7473U, 8031U, 6799U, 8526U, 6933U, 7869U, 6751U, 8141U, 
    7528U, 7482U, 6949U, 7877U, 8157U, 7381U, 8005U, 7135U, 
    7940U, 7445U, 8495U, 6995U, 8185U, 7409U, 14527U, 8469U, 
    14610U, 7053U, 14505U, 8233U, 14588U, 7463U, 14538U, 8516U, 
    14627U, 7073U, 14516U, 8243U, 14599U, 7281U, 8406U, 8433U, 
    9406U, 10027U, 9439U, 10060U, 8442U, 7343U, 7736U, 9417U, 
    10038U, 9450U, 10071U, 7013U, 8203U, 7554U, 8579U, 7033U, 
    8223U, 7564U, 8589U, 7546U, 8571U, 7361U, 8451U, 6923U, 
    8131U, 7261U, 8396U, 7582U, 8599U, 7299U, 8416U, 6881U, 
    8089U, 7219U, 8354U, 7179U, 8314U, 7428U, 8486U, 7127U, 
    8289U, 6902U, 8110U, 7240U, 8375U, 6860U, 8068U, 7198U, 
    8333U, 5474U, 3408U, 6261U, 7759U, 13043U, 7090U, 8260U, 
    5488U, 3416U, 6269U, 7767U, 13051U, 7108U, 8278U, 7502U, 
    8545U, 6941U, 8149U, 7537U, 8562U, 7492U, 8535U, 6959U, 
    8167U, 7390U, 8460U, 7144U, 8297U, 4139U, 4899U, 8669U, 
    11709U, 11927U, 11839U, 4023U, 3338U, 10972U, 4030U, 9044U, 
    9038U, 3594U, 13337U, 9073U, 15845U, 15855U, 15837U, 11412U, 
    11449U, 6353U, 5231U, 15314U, 9030U, 5830U, 5552U, 2988U, 
    11813U, 15589U, 3325U, 2348U, 15716U, 9160U, 5945U, 5765U, 
    2699U, 15723U, 8947U, 5910U, 15737U, 15731U, 
};

static inline void InitPPCMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1966);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct PPCGenInstrInfo : public TargetInstrInfo {
  explicit PPCGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~PPCGenInstrInfo() override = default;
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc PPCInsts[];
extern const unsigned PPCInstrNameIndices[];
extern const char PPCInstrNameData[];
PPCGenInstrInfo::PPCGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1966);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace PPC {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace PPC {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace PPC {
namespace OpTypes {
enum OperandType {
  abscalltarget = 0,
  abscondbrtarget = 1,
  absdirectbrtarget = 2,
  atimm = 3,
  calltarget = 4,
  condbrtarget = 5,
  crbitm = 6,
  directbrtarget = 7,
  dispRI = 8,
  dispRIX = 9,
  dispRIX16 = 10,
  dispSPE2 = 11,
  dispSPE4 = 12,
  dispSPE8 = 13,
  f32imm = 14,
  f64imm = 15,
  i16imm = 16,
  i1imm = 17,
  i32imm = 18,
  i64imm = 19,
  i8imm = 20,
  imm32SExt16 = 21,
  imm64SExt16 = 22,
  imm64ZExt32 = 23,
  memr = 24,
  memri = 25,
  memrix = 26,
  memrix16 = 27,
  memrr = 28,
  pred = 29,
  ptr_rc_idx = 30,
  ptr_rc_nor0 = 31,
  s16imm = 32,
  s16imm64 = 33,
  s17imm = 34,
  s17imm64 = 35,
  s5imm = 36,
  spe2dis = 37,
  spe4dis = 38,
  spe8dis = 39,
  tlscall = 40,
  tlscall32 = 41,
  tlsgd = 42,
  tlsgd32 = 43,
  tlsreg = 44,
  tlsreg32 = 45,
  tocentry = 46,
  tocentry32 = 47,
  type0 = 48,
  type1 = 49,
  type2 = 50,
  type3 = 51,
  type4 = 52,
  type5 = 53,
  u10imm = 54,
  u12imm = 55,
  u16imm = 56,
  u16imm64 = 57,
  u1imm = 58,
  u2imm = 59,
  u3imm = 60,
  u4imm = 61,
  u5imm = 62,
  u6imm = 63,
  u7imm = 64,
  u8imm = 65,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace PPC {

enum IsVSXFMAAlt {
	IsVSXFMAAlt_1
};

enum RC {
	RC_0,
	RC_1
};

// getAltVSXFMAOpcode
LLVM_READONLY
int getAltVSXFMAOpcode(uint16_t Opcode) {
static const uint16_t getAltVSXFMAOpcodeTable[][2] = {
  { PPC::XSMADDADP, PPC::XSMADDMDP },
  { PPC::XSMADDASP, PPC::XSMADDMSP },
  { PPC::XSMSUBADP, PPC::XSMSUBMDP },
  { PPC::XSMSUBASP, PPC::XSMSUBMSP },
  { PPC::XSNMADDADP, PPC::XSNMADDMDP },
  { PPC::XSNMADDASP, PPC::XSNMADDMSP },
  { PPC::XSNMSUBADP, PPC::XSNMSUBMDP },
  { PPC::XSNMSUBASP, PPC::XSNMSUBMSP },
  { PPC::XVMADDADP, PPC::XVMADDMDP },
  { PPC::XVMADDASP, PPC::XVMADDMSP },
  { PPC::XVMSUBADP, PPC::XVMSUBMDP },
  { PPC::XVMSUBASP, PPC::XVMSUBMSP },
  { PPC::XVNMADDADP, PPC::XVNMADDMDP },
  { PPC::XVNMADDASP, PPC::XVNMADDMSP },
  { PPC::XVNMSUBADP, PPC::XVNMSUBMDP },
  { PPC::XVNMSUBASP, PPC::XVNMSUBMSP },
}; // End of getAltVSXFMAOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 16;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getAltVSXFMAOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getAltVSXFMAOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getAltVSXFMAOpcodeTable[mid][1];
}

// getNonRecordFormOpcode
LLVM_READONLY
int getNonRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getNonRecordFormOpcodeTable[][2] = {
  { PPC::ADD4o, PPC::ADD4 },
  { PPC::ADD8o, PPC::ADD8 },
  { PPC::ADDC8o, PPC::ADDC8 },
  { PPC::ADDCo, PPC::ADDC },
  { PPC::ADDE8o, PPC::ADDE8 },
  { PPC::ADDEo, PPC::ADDE },
  { PPC::ADDICo, PPC::ADDIC },
  { PPC::ADDME8o, PPC::ADDME8 },
  { PPC::ADDMEo, PPC::ADDME },
  { PPC::ADDZE8o, PPC::ADDZE8 },
  { PPC::ADDZEo, PPC::ADDZE },
  { PPC::AND8o, PPC::AND8 },
  { PPC::ANDC8o, PPC::ANDC8 },
  { PPC::ANDCo, PPC::ANDC },
  { PPC::ANDo, PPC::AND },
  { PPC::CNTLZDo, PPC::CNTLZD },
  { PPC::CNTLZW8o, PPC::CNTLZW8 },
  { PPC::CNTLZWo, PPC::CNTLZW },
  { PPC::CNTTZDo, PPC::CNTTZD },
  { PPC::CNTTZW8o, PPC::CNTTZW8 },
  { PPC::CNTTZWo, PPC::CNTTZW },
  { PPC::DIVDUo, PPC::DIVDU },
  { PPC::DIVDo, PPC::DIVD },
  { PPC::DIVWUo, PPC::DIVWU },
  { PPC::DIVWo, PPC::DIVW },
  { PPC::EQV8o, PPC::EQV8 },
  { PPC::EQVo, PPC::EQV },
  { PPC::EXTSB8o, PPC::EXTSB8 },
  { PPC::EXTSBo, PPC::EXTSB },
  { PPC::EXTSH8o, PPC::EXTSH8 },
  { PPC::EXTSHo, PPC::EXTSH },
  { PPC::EXTSW_32_64o, PPC::EXTSW_32_64 },
  { PPC::EXTSWo, PPC::EXTSW },
  { PPC::FABSDo, PPC::FABSD },
  { PPC::FABSSo, PPC::FABSS },
  { PPC::FADDSo, PPC::FADDS },
  { PPC::FADDo, PPC::FADD },
  { PPC::FCFIDSo, PPC::FCFIDS },
  { PPC::FCFIDUSo, PPC::FCFIDUS },
  { PPC::FCFIDUo, PPC::FCFIDU },
  { PPC::FCFIDo, PPC::FCFID },
  { PPC::FCPSGNDo, PPC::FCPSGND },
  { PPC::FCPSGNSo, PPC::FCPSGNS },
  { PPC::FCTIDUZo, PPC::FCTIDUZ },
  { PPC::FCTIDUo, PPC::FCTIDU },
  { PPC::FCTIDZo, PPC::FCTIDZ },
  { PPC::FCTIDo, PPC::FCTID },
  { PPC::FCTIWUZo, PPC::FCTIWUZ },
  { PPC::FCTIWUo, PPC::FCTIWU },
  { PPC::FCTIWZo, PPC::FCTIWZ },
  { PPC::FCTIWo, PPC::FCTIW },
  { PPC::FDIVSo, PPC::FDIVS },
  { PPC::FDIVo, PPC::FDIV },
  { PPC::FMADDSo, PPC::FMADDS },
  { PPC::FMADDo, PPC::FMADD },
  { PPC::FMRo, PPC::FMR },
  { PPC::FMSUBSo, PPC::FMSUBS },
  { PPC::FMSUBo, PPC::FMSUB },
  { PPC::FMULSo, PPC::FMULS },
  { PPC::FMULo, PPC::FMUL },
  { PPC::FNABSDo, PPC::FNABSD },
  { PPC::FNABSSo, PPC::FNABSS },
  { PPC::FNEGDo, PPC::FNEGD },
  { PPC::FNEGSo, PPC::FNEGS },
  { PPC::FNMADDSo, PPC::FNMADDS },
  { PPC::FNMADDo, PPC::FNMADD },
  { PPC::FNMSUBSo, PPC::FNMSUBS },
  { PPC::FNMSUBo, PPC::FNMSUB },
  { PPC::FRESo, PPC::FRES },
  { PPC::FREo, PPC::FRE },
  { PPC::FRIMDo, PPC::FRIMD },
  { PPC::FRIMSo, PPC::FRIMS },
  { PPC::FRINDo, PPC::FRIND },
  { PPC::FRINSo, PPC::FRINS },
  { PPC::FRIPDo, PPC::FRIPD },
  { PPC::FRIPSo, PPC::FRIPS },
  { PPC::FRIZDo, PPC::FRIZD },
  { PPC::FRIZSo, PPC::FRIZS },
  { PPC::FRSPo, PPC::FRSP },
  { PPC::FRSQRTESo, PPC::FRSQRTES },
  { PPC::FRSQRTEo, PPC::FRSQRTE },
  { PPC::FSELDo, PPC::FSELD },
  { PPC::FSELSo, PPC::FSELS },
  { PPC::FSQRTSo, PPC::FSQRTS },
  { PPC::FSQRTo, PPC::FSQRT },
  { PPC::FSUBSo, PPC::FSUBS },
  { PPC::FSUBo, PPC::FSUB },
  { PPC::MULHDUo, PPC::MULHDU },
  { PPC::MULHDo, PPC::MULHD },
  { PPC::MULHWUo, PPC::MULHWU },
  { PPC::MULHWo, PPC::MULHW },
  { PPC::MULLDo, PPC::MULLD },
  { PPC::MULLWo, PPC::MULLW },
  { PPC::NAND8o, PPC::NAND8 },
  { PPC::NANDo, PPC::NAND },
  { PPC::NEG8o, PPC::NEG8 },
  { PPC::NEGo, PPC::NEG },
  { PPC::NOR8o, PPC::NOR8 },
  { PPC::NORo, PPC::NOR },
  { PPC::OR8o, PPC::OR8 },
  { PPC::ORC8o, PPC::ORC8 },
  { PPC::ORCo, PPC::ORC },
  { PPC::ORo, PPC::OR },
  { PPC::RLDCLo, PPC::RLDCL },
  { PPC::RLDCRo, PPC::RLDCR },
  { PPC::RLDICLo, PPC::RLDICL },
  { PPC::RLDICRo, PPC::RLDICR },
  { PPC::RLDICo, PPC::RLDIC },
  { PPC::RLDIMIo, PPC::RLDIMI },
  { PPC::RLWIMI8o, PPC::RLWIMI8 },
  { PPC::RLWIMIo, PPC::RLWIMI },
  { PPC::RLWINM8o, PPC::RLWINM8 },
  { PPC::RLWINMo, PPC::RLWINM },
  { PPC::RLWNM8o, PPC::RLWNM8 },
  { PPC::RLWNMo, PPC::RLWNM },
  { PPC::SLDo, PPC::SLD },
  { PPC::SLW8o, PPC::SLW8 },
  { PPC::SLWo, PPC::SLW },
  { PPC::SRADIo, PPC::SRADI },
  { PPC::SRADo, PPC::SRAD },
  { PPC::SRAWIo, PPC::SRAWI },
  { PPC::SRAWo, PPC::SRAW },
  { PPC::SRDo, PPC::SRD },
  { PPC::SRW8o, PPC::SRW8 },
  { PPC::SRWo, PPC::SRW },
  { PPC::SUBF8o, PPC::SUBF8 },
  { PPC::SUBFC8o, PPC::SUBFC8 },
  { PPC::SUBFCo, PPC::SUBFC },
  { PPC::SUBFE8o, PPC::SUBFE8 },
  { PPC::SUBFEo, PPC::SUBFE },
  { PPC::SUBFME8o, PPC::SUBFME8 },
  { PPC::SUBFMEo, PPC::SUBFME },
  { PPC::SUBFZE8o, PPC::SUBFZE8 },
  { PPC::SUBFZEo, PPC::SUBFZE },
  { PPC::SUBFo, PPC::SUBF },
  { PPC::XOR8o, PPC::XOR8 },
  { PPC::XORo, PPC::XOR },
}; // End of getNonRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 137;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getNonRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getNonRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNonRecordFormOpcodeTable[mid][1];
}

// getRecordFormOpcode
LLVM_READONLY
int getRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getRecordFormOpcodeTable[][2] = {
  { PPC::ADD4, PPC::ADD4o },
  { PPC::ADD8, PPC::ADD8o },
  { PPC::ADDC, PPC::ADDCo },
  { PPC::ADDC8, PPC::ADDC8o },
  { PPC::ADDE, PPC::ADDEo },
  { PPC::ADDE8, PPC::ADDE8o },
  { PPC::ADDIC, PPC::ADDICo },
  { PPC::ADDME, PPC::ADDMEo },
  { PPC::ADDME8, PPC::ADDME8o },
  { PPC::ADDZE, PPC::ADDZEo },
  { PPC::ADDZE8, PPC::ADDZE8o },
  { PPC::AND, PPC::ANDo },
  { PPC::AND8, PPC::AND8o },
  { PPC::ANDC, PPC::ANDCo },
  { PPC::ANDC8, PPC::ANDC8o },
  { PPC::CNTLZD, PPC::CNTLZDo },
  { PPC::CNTLZW, PPC::CNTLZWo },
  { PPC::CNTLZW8, PPC::CNTLZW8o },
  { PPC::CNTTZD, PPC::CNTTZDo },
  { PPC::CNTTZW, PPC::CNTTZWo },
  { PPC::CNTTZW8, PPC::CNTTZW8o },
  { PPC::DIVD, PPC::DIVDo },
  { PPC::DIVDU, PPC::DIVDUo },
  { PPC::DIVW, PPC::DIVWo },
  { PPC::DIVWU, PPC::DIVWUo },
  { PPC::EQV, PPC::EQVo },
  { PPC::EQV8, PPC::EQV8o },
  { PPC::EXTSB, PPC::EXTSBo },
  { PPC::EXTSB8, PPC::EXTSB8o },
  { PPC::EXTSH, PPC::EXTSHo },
  { PPC::EXTSH8, PPC::EXTSH8o },
  { PPC::EXTSW, PPC::EXTSWo },
  { PPC::EXTSW_32_64, PPC::EXTSW_32_64o },
  { PPC::FABSD, PPC::FABSDo },
  { PPC::FABSS, PPC::FABSSo },
  { PPC::FADD, PPC::FADDo },
  { PPC::FADDS, PPC::FADDSo },
  { PPC::FCFID, PPC::FCFIDo },
  { PPC::FCFIDS, PPC::FCFIDSo },
  { PPC::FCFIDU, PPC::FCFIDUo },
  { PPC::FCFIDUS, PPC::FCFIDUSo },
  { PPC::FCPSGND, PPC::FCPSGNDo },
  { PPC::FCPSGNS, PPC::FCPSGNSo },
  { PPC::FCTID, PPC::FCTIDo },
  { PPC::FCTIDU, PPC::FCTIDUo },
  { PPC::FCTIDUZ, PPC::FCTIDUZo },
  { PPC::FCTIDZ, PPC::FCTIDZo },
  { PPC::FCTIW, PPC::FCTIWo },
  { PPC::FCTIWU, PPC::FCTIWUo },
  { PPC::FCTIWUZ, PPC::FCTIWUZo },
  { PPC::FCTIWZ, PPC::FCTIWZo },
  { PPC::FDIV, PPC::FDIVo },
  { PPC::FDIVS, PPC::FDIVSo },
  { PPC::FMADD, PPC::FMADDo },
  { PPC::FMADDS, PPC::FMADDSo },
  { PPC::FMR, PPC::FMRo },
  { PPC::FMSUB, PPC::FMSUBo },
  { PPC::FMSUBS, PPC::FMSUBSo },
  { PPC::FMUL, PPC::FMULo },
  { PPC::FMULS, PPC::FMULSo },
  { PPC::FNABSD, PPC::FNABSDo },
  { PPC::FNABSS, PPC::FNABSSo },
  { PPC::FNEGD, PPC::FNEGDo },
  { PPC::FNEGS, PPC::FNEGSo },
  { PPC::FNMADD, PPC::FNMADDo },
  { PPC::FNMADDS, PPC::FNMADDSo },
  { PPC::FNMSUB, PPC::FNMSUBo },
  { PPC::FNMSUBS, PPC::FNMSUBSo },
  { PPC::FRE, PPC::FREo },
  { PPC::FRES, PPC::FRESo },
  { PPC::FRIMD, PPC::FRIMDo },
  { PPC::FRIMS, PPC::FRIMSo },
  { PPC::FRIND, PPC::FRINDo },
  { PPC::FRINS, PPC::FRINSo },
  { PPC::FRIPD, PPC::FRIPDo },
  { PPC::FRIPS, PPC::FRIPSo },
  { PPC::FRIZD, PPC::FRIZDo },
  { PPC::FRIZS, PPC::FRIZSo },
  { PPC::FRSP, PPC::FRSPo },
  { PPC::FRSQRTE, PPC::FRSQRTEo },
  { PPC::FRSQRTES, PPC::FRSQRTESo },
  { PPC::FSELD, PPC::FSELDo },
  { PPC::FSELS, PPC::FSELSo },
  { PPC::FSQRT, PPC::FSQRTo },
  { PPC::FSQRTS, PPC::FSQRTSo },
  { PPC::FSUB, PPC::FSUBo },
  { PPC::FSUBS, PPC::FSUBSo },
  { PPC::MULHD, PPC::MULHDo },
  { PPC::MULHDU, PPC::MULHDUo },
  { PPC::MULHW, PPC::MULHWo },
  { PPC::MULHWU, PPC::MULHWUo },
  { PPC::MULLD, PPC::MULLDo },
  { PPC::MULLW, PPC::MULLWo },
  { PPC::NAND, PPC::NANDo },
  { PPC::NAND8, PPC::NAND8o },
  { PPC::NEG, PPC::NEGo },
  { PPC::NEG8, PPC::NEG8o },
  { PPC::NOR, PPC::NORo },
  { PPC::NOR8, PPC::NOR8o },
  { PPC::OR, PPC::ORo },
  { PPC::OR8, PPC::OR8o },
  { PPC::ORC, PPC::ORCo },
  { PPC::ORC8, PPC::ORC8o },
  { PPC::RLDCL, PPC::RLDCLo },
  { PPC::RLDCR, PPC::RLDCRo },
  { PPC::RLDIC, PPC::RLDICo },
  { PPC::RLDICL, PPC::RLDICLo },
  { PPC::RLDICR, PPC::RLDICRo },
  { PPC::RLDIMI, PPC::RLDIMIo },
  { PPC::RLWIMI, PPC::RLWIMIo },
  { PPC::RLWIMI8, PPC::RLWIMI8o },
  { PPC::RLWINM, PPC::RLWINMo },
  { PPC::RLWINM8, PPC::RLWINM8o },
  { PPC::RLWNM, PPC::RLWNMo },
  { PPC::RLWNM8, PPC::RLWNM8o },
  { PPC::SLD, PPC::SLDo },
  { PPC::SLW, PPC::SLWo },
  { PPC::SLW8, PPC::SLW8o },
  { PPC::SRAD, PPC::SRADo },
  { PPC::SRADI, PPC::SRADIo },
  { PPC::SRAW, PPC::SRAWo },
  { PPC::SRAWI, PPC::SRAWIo },
  { PPC::SRD, PPC::SRDo },
  { PPC::SRW, PPC::SRWo },
  { PPC::SRW8, PPC::SRW8o },
  { PPC::SUBF, PPC::SUBFo },
  { PPC::SUBF8, PPC::SUBF8o },
  { PPC::SUBFC, PPC::SUBFCo },
  { PPC::SUBFC8, PPC::SUBFC8o },
  { PPC::SUBFE, PPC::SUBFEo },
  { PPC::SUBFE8, PPC::SUBFE8o },
  { PPC::SUBFME, PPC::SUBFMEo },
  { PPC::SUBFME8, PPC::SUBFME8o },
  { PPC::SUBFZE, PPC::SUBFZEo },
  { PPC::SUBFZE8, PPC::SUBFZE8o },
  { PPC::XOR, PPC::XORo },
  { PPC::XOR8, PPC::XOR8o },
}; // End of getRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 137;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRecordFormOpcodeTable[mid][1];
}

} // End PPC namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

