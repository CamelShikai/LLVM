/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void ARMInstPrinter::printInstruction(const MCInst *MI, const MCSubtargetInfo &STI, raw_ostream &O) {
  static const char AsmStrs[] = {
  /* 0 */ 's', 'h', 'a', '1', 's', 'u', '0', '.', '3', '2', 9, 0,
  /* 12 */ 's', 'h', 'a', '2', '5', '6', 's', 'u', '0', '.', '3', '2', 9, 0,
  /* 26 */ 's', 'h', 'a', '1', 's', 'u', '1', '.', '3', '2', 9, 0,
  /* 38 */ 's', 'h', 'a', '2', '5', '6', 's', 'u', '1', '.', '3', '2', 9, 0,
  /* 52 */ 's', 'h', 'a', '2', '5', '6', 'h', '2', '.', '3', '2', 9, 0,
  /* 65 */ 's', 'h', 'a', '1', 'c', '.', '3', '2', 9, 0,
  /* 75 */ 's', 'h', 'a', '1', 'h', '.', '3', '2', 9, 0,
  /* 85 */ 's', 'h', 'a', '2', '5', '6', 'h', '.', '3', '2', 9, 0,
  /* 97 */ 's', 'h', 'a', '1', 'm', '.', '3', '2', 9, 0,
  /* 107 */ 's', 'h', 'a', '1', 'p', '.', '3', '2', 9, 0,
  /* 117 */ 'v', 'c', 'v', 't', 'a', '.', 's', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 132 */ 'v', 'c', 'v', 't', 'm', '.', 's', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 147 */ 'v', 'c', 'v', 't', 'n', '.', 's', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 162 */ 'v', 'c', 'v', 't', 'p', '.', 's', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 177 */ 'v', 'c', 'v', 't', 'a', '.', 'u', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 192 */ 'v', 'c', 'v', 't', 'm', '.', 'u', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 207 */ 'v', 'c', 'v', 't', 'n', '.', 'u', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 222 */ 'v', 'c', 'v', 't', 'p', '.', 'u', '3', '2', '.', 'f', '3', '2', 9, 0,
  /* 237 */ 'v', 'r', 'i', 'n', 't', 'a', '.', 'f', '3', '2', 9, 0,
  /* 249 */ 'v', 's', 'e', 'l', 'g', 'e', '.', 'f', '3', '2', 9, 0,
  /* 261 */ 'v', 'm', 'i', 'n', 'n', 'm', '.', 'f', '3', '2', 9, 0,
  /* 273 */ 'v', 'm', 'a', 'x', 'n', 'm', '.', 'f', '3', '2', 9, 0,
  /* 285 */ 'v', 'r', 'i', 'n', 't', 'm', '.', 'f', '3', '2', 9, 0,
  /* 297 */ 'v', 'r', 'i', 'n', 't', 'n', '.', 'f', '3', '2', 9, 0,
  /* 309 */ 'v', 'r', 'i', 'n', 't', 'p', '.', 'f', '3', '2', 9, 0,
  /* 321 */ 'v', 's', 'e', 'l', 'e', 'q', '.', 'f', '3', '2', 9, 0,
  /* 333 */ 'v', 's', 'e', 'l', 'v', 's', '.', 'f', '3', '2', 9, 0,
  /* 345 */ 'v', 's', 'e', 'l', 'g', 't', '.', 'f', '3', '2', 9, 0,
  /* 357 */ 'v', 'r', 'i', 'n', 't', 'x', '.', 'f', '3', '2', 9, 0,
  /* 369 */ 'v', 'r', 'i', 'n', 't', 'z', '.', 'f', '3', '2', 9, 0,
  /* 381 */ 'l', 'd', 'c', '2', 9, 0,
  /* 387 */ 'm', 'r', 'c', '2', 9, 0,
  /* 393 */ 'm', 'r', 'r', 'c', '2', 9, 0,
  /* 400 */ 's', 't', 'c', '2', 9, 0,
  /* 406 */ 'c', 'd', 'p', '2', 9, 0,
  /* 412 */ 'm', 'c', 'r', '2', 9, 0,
  /* 418 */ 'm', 'c', 'r', 'r', '2', 9, 0,
  /* 425 */ 'v', 'c', 'v', 't', 'a', '.', 's', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 440 */ 'v', 'c', 'v', 't', 'm', '.', 's', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 455 */ 'v', 'c', 'v', 't', 'n', '.', 's', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 470 */ 'v', 'c', 'v', 't', 'p', '.', 's', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 485 */ 'v', 'c', 'v', 't', 'a', '.', 'u', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 500 */ 'v', 'c', 'v', 't', 'm', '.', 'u', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 515 */ 'v', 'c', 'v', 't', 'n', '.', 'u', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 530 */ 'v', 'c', 'v', 't', 'p', '.', 'u', '3', '2', '.', 'f', '6', '4', 9, 0,
  /* 545 */ 'v', 'r', 'i', 'n', 't', 'a', '.', 'f', '6', '4', 9, 0,
  /* 557 */ 'v', 's', 'e', 'l', 'g', 'e', '.', 'f', '6', '4', 9, 0,
  /* 569 */ 'v', 'm', 'i', 'n', 'n', 'm', '.', 'f', '6', '4', 9, 0,
  /* 581 */ 'v', 'm', 'a', 'x', 'n', 'm', '.', 'f', '6', '4', 9, 0,
  /* 593 */ 'v', 'r', 'i', 'n', 't', 'm', '.', 'f', '6', '4', 9, 0,
  /* 605 */ 'v', 'r', 'i', 'n', 't', 'n', '.', 'f', '6', '4', 9, 0,
  /* 617 */ 'v', 'r', 'i', 'n', 't', 'p', '.', 'f', '6', '4', 9, 0,
  /* 629 */ 'v', 's', 'e', 'l', 'e', 'q', '.', 'f', '6', '4', 9, 0,
  /* 641 */ 'v', 's', 'e', 'l', 'v', 's', '.', 'f', '6', '4', 9, 0,
  /* 653 */ 'v', 's', 'e', 'l', 'g', 't', '.', 'f', '6', '4', 9, 0,
  /* 665 */ 'v', 'm', 'u', 'l', 'l', '.', 'p', '6', '4', 9, 0,
  /* 676 */ 'v', 'c', 'v', 't', 'a', '.', 's', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 691 */ 'v', 'c', 'v', 't', 'm', '.', 's', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 706 */ 'v', 'c', 'v', 't', 'n', '.', 's', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 721 */ 'v', 'c', 'v', 't', 'p', '.', 's', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 736 */ 'v', 'c', 'v', 't', 'a', '.', 'u', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 751 */ 'v', 'c', 'v', 't', 'm', '.', 'u', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 766 */ 'v', 'c', 'v', 't', 'n', '.', 'u', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 781 */ 'v', 'c', 'v', 't', 'p', '.', 'u', '3', '2', '.', 'f', '1', '6', 9, 0,
  /* 796 */ 'v', 'c', 'v', 't', 'a', '.', 's', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 811 */ 'v', 'c', 'v', 't', 'm', '.', 's', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 826 */ 'v', 'c', 'v', 't', 'n', '.', 's', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 841 */ 'v', 'c', 'v', 't', 'p', '.', 's', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 856 */ 'v', 'c', 'v', 't', 'a', '.', 'u', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 871 */ 'v', 'c', 'v', 't', 'm', '.', 'u', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 886 */ 'v', 'c', 'v', 't', 'n', '.', 'u', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 901 */ 'v', 'c', 'v', 't', 'p', '.', 'u', '1', '6', '.', 'f', '1', '6', 9, 0,
  /* 916 */ 'v', 'r', 'i', 'n', 't', 'a', '.', 'f', '1', '6', 9, 0,
  /* 928 */ 'v', 's', 'e', 'l', 'g', 'e', '.', 'f', '1', '6', 9, 0,
  /* 940 */ 'v', 'm', 'i', 'n', 'n', 'm', '.', 'f', '1', '6', 9, 0,
  /* 952 */ 'v', 'm', 'a', 'x', 'n', 'm', '.', 'f', '1', '6', 9, 0,
  /* 964 */ 'v', 'r', 'i', 'n', 't', 'm', '.', 'f', '1', '6', 9, 0,
  /* 976 */ 'v', 'r', 'i', 'n', 't', 'n', '.', 'f', '1', '6', 9, 0,
  /* 988 */ 'v', 'r', 'i', 'n', 't', 'p', '.', 'f', '1', '6', 9, 0,
  /* 1000 */ 'v', 's', 'e', 'l', 'e', 'q', '.', 'f', '1', '6', 9, 0,
  /* 1012 */ 'v', 'i', 'n', 's', '.', 'f', '1', '6', 9, 0,
  /* 1022 */ 'v', 's', 'e', 'l', 'v', 's', '.', 'f', '1', '6', 9, 0,
  /* 1034 */ 'v', 's', 'e', 'l', 'g', 't', '.', 'f', '1', '6', 9, 0,
  /* 1046 */ 'v', 'r', 'i', 'n', 't', 'x', '.', 'f', '1', '6', 9, 0,
  /* 1058 */ 'v', 'm', 'o', 'v', 'x', '.', 'f', '1', '6', 9, 0,
  /* 1069 */ 'v', 'r', 'i', 'n', 't', 'z', '.', 'f', '1', '6', 9, 0,
  /* 1081 */ 'a', 'e', 's', 'i', 'm', 'c', '.', '8', 9, 0,
  /* 1091 */ 'a', 'e', 's', 'm', 'c', '.', '8', 9, 0,
  /* 1100 */ 'a', 'e', 's', 'd', '.', '8', 9, 0,
  /* 1108 */ 'a', 'e', 's', 'e', '.', '8', 9, 0,
  /* 1116 */ 'r', 'f', 'e', 'd', 'a', 9, 0,
  /* 1123 */ 'r', 'f', 'e', 'i', 'a', 9, 0,
  /* 1130 */ 'c', 'r', 'c', '3', '2', 'b', 9, 0,
  /* 1138 */ 'c', 'r', 'c', '3', '2', 'c', 'b', 9, 0,
  /* 1147 */ 'r', 'f', 'e', 'd', 'b', 9, 0,
  /* 1154 */ 'r', 'f', 'e', 'i', 'b', 9, 0,
  /* 1161 */ 'd', 'm', 'b', 9, 0,
  /* 1166 */ 'd', 's', 'b', 9, 0,
  /* 1171 */ 'i', 's', 'b', 9, 0,
  /* 1176 */ 'h', 'v', 'c', 9, 0,
  /* 1181 */ 'p', 'l', 'd', 9, 0,
  /* 1186 */ 's', 'e', 't', 'e', 'n', 'd', 9, 0,
  /* 1194 */ 'u', 'd', 'f', 9, 0,
  /* 1199 */ 'c', 'r', 'c', '3', '2', 'h', 9, 0,
  /* 1207 */ 'c', 'r', 'c', '3', '2', 'c', 'h', 9, 0,
  /* 1216 */ 'p', 'l', 'i', 9, 0,
  /* 1221 */ 'l', 'd', 'c', '2', 'l', 9, 0,
  /* 1228 */ 's', 't', 'c', '2', 'l', 9, 0,
  /* 1235 */ 'b', 'l', 9, 0,
  /* 1239 */ 's', 'e', 't', 'p', 'a', 'n', 9, 0,
  /* 1247 */ 'c', 'p', 's', 9, 0,
  /* 1252 */ 'm', 'o', 'v', 's', 9, 0,
  /* 1258 */ 'h', 'l', 't', 9, 0,
  /* 1263 */ 'b', 'k', 'p', 't', 9, 0,
  /* 1269 */ 'h', 'v', 'c', '.', 'w', 9, 0,
  /* 1276 */ 'u', 'd', 'f', '.', 'w', 9, 0,
  /* 1283 */ 'c', 'r', 'c', '3', '2', 'w', 9, 0,
  /* 1291 */ 'c', 'r', 'c', '3', '2', 'c', 'w', 9, 0,
  /* 1300 */ 'p', 'l', 'd', 'w', 9, 0,
  /* 1306 */ 'b', 'x', 9, 0,
  /* 1310 */ 'b', 'l', 'x', 9, 0,
  /* 1315 */ 'c', 'b', 'z', 9, 0,
  /* 1320 */ 'c', 'b', 'n', 'z', 9, 0,
  /* 1326 */ 's', 'r', 's', 'd', 'a', 9, 's', 'p', '!', ',', 32, 0,
  /* 1338 */ 's', 'r', 's', 'i', 'a', 9, 's', 'p', '!', ',', 32, 0,
  /* 1350 */ 's', 'r', 's', 'd', 'b', 9, 's', 'p', '!', ',', 32, 0,
  /* 1362 */ 's', 'r', 's', 'i', 'b', 9, 's', 'p', '!', ',', 32, 0,
  /* 1374 */ 's', 'r', 's', 'd', 'a', 9, 's', 'p', ',', 32, 0,
  /* 1385 */ 's', 'r', 's', 'i', 'a', 9, 's', 'p', ',', 32, 0,
  /* 1396 */ 's', 'r', 's', 'd', 'b', 9, 's', 'p', ',', 32, 0,
  /* 1407 */ 's', 'r', 's', 'i', 'b', 9, 's', 'p', ',', 32, 0,
  /* 1418 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'P', 'a', 't', 'c', 'h', 'a', 'b', 'l', 'e', 32, 'R', 'E', 'T', '.', 0,
  /* 1449 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 1472 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'T', 'a', 'i', 'l', 32, 'C', 'a', 'l', 'l', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 1495 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 1517 */ '_', '_', 'b', 'r', 'k', 'd', 'i', 'v', '0', 0,
  /* 1527 */ 'v', 'l', 'd', '1', 0,
  /* 1532 */ 'd', 'c', 'p', 's', '1', 0,
  /* 1538 */ 'v', 's', 't', '1', 0,
  /* 1543 */ 'v', 'r', 'e', 'v', '3', '2', 0,
  /* 1550 */ 'l', 'd', 'c', '2', 0,
  /* 1555 */ 'm', 'r', 'c', '2', 0,
  /* 1560 */ 'm', 'r', 'r', 'c', '2', 0,
  /* 1566 */ 's', 't', 'c', '2', 0,
  /* 1571 */ 'v', 'l', 'd', '2', 0,
  /* 1576 */ 'c', 'd', 'p', '2', 0,
  /* 1581 */ 'm', 'c', 'r', '2', 0,
  /* 1586 */ 'm', 'c', 'r', 'r', '2', 0,
  /* 1592 */ 'd', 'c', 'p', 's', '2', 0,
  /* 1598 */ 'v', 's', 't', '2', 0,
  /* 1603 */ 'v', 'l', 'd', '3', 0,
  /* 1608 */ 'd', 'c', 'p', 's', '3', 0,
  /* 1614 */ 'v', 's', 't', '3', 0,
  /* 1619 */ 'v', 'r', 'e', 'v', '6', '4', 0,
  /* 1626 */ 'v', 'l', 'd', '4', 0,
  /* 1631 */ 'v', 's', 't', '4', 0,
  /* 1636 */ 's', 'x', 't', 'a', 'b', '1', '6', 0,
  /* 1644 */ 'u', 'x', 't', 'a', 'b', '1', '6', 0,
  /* 1652 */ 's', 'x', 't', 'b', '1', '6', 0,
  /* 1659 */ 'u', 'x', 't', 'b', '1', '6', 0,
  /* 1666 */ 's', 'h', 's', 'u', 'b', '1', '6', 0,
  /* 1674 */ 'u', 'h', 's', 'u', 'b', '1', '6', 0,
  /* 1682 */ 'u', 'q', 's', 'u', 'b', '1', '6', 0,
  /* 1690 */ 's', 's', 'u', 'b', '1', '6', 0,
  /* 1697 */ 'u', 's', 'u', 'b', '1', '6', 0,
  /* 1704 */ 's', 'h', 'a', 'd', 'd', '1', '6', 0,
  /* 1712 */ 'u', 'h', 'a', 'd', 'd', '1', '6', 0,
  /* 1720 */ 'u', 'q', 'a', 'd', 'd', '1', '6', 0,
  /* 1728 */ 's', 'a', 'd', 'd', '1', '6', 0,
  /* 1735 */ 'u', 'a', 'd', 'd', '1', '6', 0,
  /* 1742 */ 's', 's', 'a', 't', '1', '6', 0,
  /* 1749 */ 'u', 's', 'a', 't', '1', '6', 0,
  /* 1756 */ 'v', 'r', 'e', 'v', '1', '6', 0,
  /* 1763 */ 'u', 's', 'a', 'd', 'a', '8', 0,
  /* 1770 */ 's', 'h', 's', 'u', 'b', '8', 0,
  /* 1777 */ 'u', 'h', 's', 'u', 'b', '8', 0,
  /* 1784 */ 'u', 'q', 's', 'u', 'b', '8', 0,
  /* 1791 */ 's', 's', 'u', 'b', '8', 0,
  /* 1797 */ 'u', 's', 'u', 'b', '8', 0,
  /* 1803 */ 'u', 's', 'a', 'd', '8', 0,
  /* 1809 */ 's', 'h', 'a', 'd', 'd', '8', 0,
  /* 1816 */ 'u', 'h', 'a', 'd', 'd', '8', 0,
  /* 1823 */ 'u', 'q', 'a', 'd', 'd', '8', 0,
  /* 1830 */ 's', 'a', 'd', 'd', '8', 0,
  /* 1836 */ 'u', 'a', 'd', 'd', '8', 0,
  /* 1842 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 1855 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1862 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1872 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 1887 */ 'v', 'a', 'b', 'a', 0,
  /* 1892 */ 'l', 'd', 'a', 0,
  /* 1896 */ 'l', 'd', 'm', 'd', 'a', 0,
  /* 1902 */ 's', 't', 'm', 'd', 'a', 0,
  /* 1908 */ 'r', 'f', 'e', 'i', 'a', 0,
  /* 1914 */ 'v', 'l', 'd', 'm', 'i', 'a', 0,
  /* 1921 */ 'v', 's', 't', 'm', 'i', 'a', 0,
  /* 1928 */ 's', 'r', 's', 'i', 'a', 0,
  /* 1934 */ 's', 'm', 'm', 'l', 'a', 0,
  /* 1940 */ 'v', 'n', 'm', 'l', 'a', 0,
  /* 1946 */ 'v', 'm', 'l', 'a', 0,
  /* 1951 */ 'v', 'f', 'm', 'a', 0,
  /* 1956 */ 'v', 'f', 'n', 'm', 'a', 0,
  /* 1962 */ 'v', 'r', 's', 'r', 'a', 0,
  /* 1968 */ 'v', 's', 'r', 'a', 0,
  /* 1973 */ 't', 't', 'a', 0,
  /* 1977 */ 'l', 'd', 'a', 'b', 0,
  /* 1982 */ 's', 'x', 't', 'a', 'b', 0,
  /* 1988 */ 'u', 'x', 't', 'a', 'b', 0,
  /* 1994 */ 's', 'm', 'l', 'a', 'b', 'b', 0,
  /* 2001 */ 's', 'm', 'l', 'a', 'l', 'b', 'b', 0,
  /* 2009 */ 's', 'm', 'u', 'l', 'b', 'b', 0,
  /* 2016 */ 't', 'b', 'b', 0,
  /* 2020 */ 'r', 'f', 'e', 'd', 'b', 0,
  /* 2026 */ 'v', 'l', 'd', 'm', 'd', 'b', 0,
  /* 2033 */ 'v', 's', 't', 'm', 'd', 'b', 0,
  /* 2040 */ 's', 'r', 's', 'd', 'b', 0,
  /* 2046 */ 'l', 'd', 'm', 'i', 'b', 0,
  /* 2052 */ 's', 't', 'm', 'i', 'b', 0,
  /* 2058 */ 's', 't', 'l', 'b', 0,
  /* 2063 */ 'd', 'm', 'b', 0,
  /* 2067 */ 's', 'w', 'p', 'b', 0,
  /* 2072 */ 'l', 'd', 'r', 'b', 0,
  /* 2077 */ 's', 't', 'r', 'b', 0,
  /* 2082 */ 'd', 's', 'b', 0,
  /* 2086 */ 'i', 's', 'b', 0,
  /* 2090 */ 'l', 'd', 'r', 's', 'b', 0,
  /* 2096 */ 's', 'm', 'l', 'a', 't', 'b', 0,
  /* 2103 */ 'p', 'k', 'h', 't', 'b', 0,
  /* 2109 */ 's', 'm', 'l', 'a', 'l', 't', 'b', 0,
  /* 2117 */ 's', 'm', 'u', 'l', 't', 'b', 0,
  /* 2124 */ 'v', 'c', 'v', 't', 'b', 0,
  /* 2130 */ 's', 'x', 't', 'b', 0,
  /* 2135 */ 'u', 'x', 't', 'b', 0,
  /* 2140 */ 'q', 'd', 's', 'u', 'b', 0,
  /* 2146 */ 'v', 'h', 's', 'u', 'b', 0,
  /* 2152 */ 'v', 'q', 's', 'u', 'b', 0,
  /* 2158 */ 'v', 's', 'u', 'b', 0,
  /* 2163 */ 's', 'm', 'l', 'a', 'w', 'b', 0,
  /* 2170 */ 's', 'm', 'u', 'l', 'w', 'b', 0,
  /* 2177 */ 'l', 'd', 'a', 'e', 'x', 'b', 0,
  /* 2184 */ 's', 't', 'l', 'e', 'x', 'b', 0,
  /* 2191 */ 'l', 'd', 'r', 'e', 'x', 'b', 0,
  /* 2198 */ 's', 't', 'r', 'e', 'x', 'b', 0,
  /* 2205 */ 's', 'b', 'c', 0,
  /* 2209 */ 'a', 'd', 'c', 0,
  /* 2213 */ 'l', 'd', 'c', 0,
  /* 2217 */ 'b', 'f', 'c', 0,
  /* 2221 */ 'v', 'b', 'i', 'c', 0,
  /* 2226 */ 's', 'm', 'c', 0,
  /* 2230 */ 'm', 'r', 'c', 0,
  /* 2234 */ 'm', 'r', 'r', 'c', 0,
  /* 2239 */ 'r', 's', 'c', 0,
  /* 2243 */ 's', 't', 'c', 0,
  /* 2247 */ 's', 'v', 'c', 0,
  /* 2251 */ 's', 'm', 'l', 'a', 'd', 0,
  /* 2257 */ 's', 'm', 'u', 'a', 'd', 0,
  /* 2263 */ 'v', 'a', 'b', 'd', 0,
  /* 2268 */ 'q', 'd', 'a', 'd', 'd', 0,
  /* 2274 */ 'v', 'r', 'h', 'a', 'd', 'd', 0,
  /* 2281 */ 'v', 'h', 'a', 'd', 'd', 0,
  /* 2287 */ 'v', 'p', 'a', 'd', 'd', 0,
  /* 2293 */ 'v', 'q', 'a', 'd', 'd', 0,
  /* 2299 */ 'v', 'a', 'd', 'd', 0,
  /* 2304 */ 's', 'm', 'l', 'a', 'l', 'd', 0,
  /* 2311 */ 'p', 'l', 'd', 0,
  /* 2315 */ 's', 'm', 'l', 's', 'l', 'd', 0,
  /* 2322 */ 'v', 'a', 'n', 'd', 0,
  /* 2327 */ 'l', 'd', 'r', 'd', 0,
  /* 2332 */ 's', 't', 'r', 'd', 0,
  /* 2337 */ 's', 'm', 'l', 's', 'd', 0,
  /* 2343 */ 's', 'm', 'u', 's', 'd', 0,
  /* 2349 */ 'l', 'd', 'a', 'e', 'x', 'd', 0,
  /* 2356 */ 's', 't', 'l', 'e', 'x', 'd', 0,
  /* 2363 */ 'l', 'd', 'r', 'e', 'x', 'd', 0,
  /* 2370 */ 's', 't', 'r', 'e', 'x', 'd', 0,
  /* 2377 */ 'v', 'a', 'c', 'g', 'e', 0,
  /* 2383 */ 'v', 'c', 'g', 'e', 0,
  /* 2388 */ 'v', 'c', 'l', 'e', 0,
  /* 2393 */ 'v', 'r', 'e', 'c', 'p', 'e', 0,
  /* 2400 */ 'v', 'c', 'm', 'p', 'e', 0,
  /* 2406 */ 'v', 'r', 's', 'q', 'r', 't', 'e', 0,
  /* 2414 */ 'v', 'b', 'i', 'f', 0,
  /* 2419 */ 'd', 'b', 'g', 0,
  /* 2423 */ 'v', 'q', 'n', 'e', 'g', 0,
  /* 2429 */ 'v', 'n', 'e', 'g', 0,
  /* 2434 */ 's', 'g', 0,
  /* 2437 */ 'l', 'd', 'a', 'h', 0,
  /* 2442 */ 'v', 'q', 'r', 'd', 'm', 'l', 'a', 'h', 0,
  /* 2451 */ 's', 'x', 't', 'a', 'h', 0,
  /* 2457 */ 'u', 'x', 't', 'a', 'h', 0,
  /* 2463 */ 't', 'b', 'h', 0,
  /* 2467 */ 's', 't', 'l', 'h', 0,
  /* 2472 */ 'v', 'q', 'd', 'm', 'u', 'l', 'h', 0,
  /* 2480 */ 'v', 'q', 'r', 'd', 'm', 'u', 'l', 'h', 0,
  /* 2489 */ 'l', 'd', 'r', 'h', 0,
  /* 2494 */ 's', 't', 'r', 'h', 0,
  /* 2499 */ 'v', 'q', 'r', 'd', 'm', 'l', 's', 'h', 0,
  /* 2508 */ 'l', 'd', 'r', 's', 'h', 0,
  /* 2514 */ 'p', 'u', 's', 'h', 0,
  /* 2519 */ 'r', 'e', 'v', 's', 'h', 0,
  /* 2525 */ 's', 'x', 't', 'h', 0,
  /* 2530 */ 'u', 'x', 't', 'h', 0,
  /* 2535 */ 'l', 'd', 'a', 'e', 'x', 'h', 0,
  /* 2542 */ 's', 't', 'l', 'e', 'x', 'h', 0,
  /* 2549 */ 'l', 'd', 'r', 'e', 'x', 'h', 0,
  /* 2556 */ 's', 't', 'r', 'e', 'x', 'h', 0,
  /* 2563 */ 'b', 'f', 'i', 0,
  /* 2567 */ 'p', 'l', 'i', 0,
  /* 2571 */ 'v', 's', 'l', 'i', 0,
  /* 2576 */ 'v', 's', 'r', 'i', 0,
  /* 2581 */ 'b', 'x', 'j', 0,
  /* 2585 */ 'l', 'd', 'c', '2', 'l', 0,
  /* 2591 */ 's', 't', 'c', '2', 'l', 0,
  /* 2597 */ 'u', 'm', 'a', 'a', 'l', 0,
  /* 2603 */ 'v', 'a', 'b', 'a', 'l', 0,
  /* 2609 */ 'v', 'p', 'a', 'd', 'a', 'l', 0,
  /* 2616 */ 'v', 'q', 'd', 'm', 'l', 'a', 'l', 0,
  /* 2624 */ 's', 'm', 'l', 'a', 'l', 0,
  /* 2630 */ 'u', 'm', 'l', 'a', 'l', 0,
  /* 2636 */ 'v', 'm', 'l', 'a', 'l', 0,
  /* 2642 */ 'v', 't', 'b', 'l', 0,
  /* 2647 */ 'v', 's', 'u', 'b', 'l', 0,
  /* 2653 */ 'l', 'd', 'c', 'l', 0,
  /* 2658 */ 's', 't', 'c', 'l', 0,
  /* 2663 */ 'v', 'a', 'b', 'd', 'l', 0,
  /* 2669 */ 'v', 'p', 'a', 'd', 'd', 'l', 0,
  /* 2676 */ 'v', 'a', 'd', 'd', 'l', 0,
  /* 2682 */ 's', 'e', 'l', 0,
  /* 2686 */ 'v', 'q', 's', 'h', 'l', 0,
  /* 2692 */ 'v', 'q', 'r', 's', 'h', 'l', 0,
  /* 2699 */ 'v', 'r', 's', 'h', 'l', 0,
  /* 2705 */ 'v', 's', 'h', 'l', 0,
  /* 2710 */ '#', 32, 'F', 'E', 'n', 't', 'r', 'y', 32, 'c', 'a', 'l', 'l', 0,
  /* 2724 */ 'v', 's', 'h', 'l', 'l', 0,
  /* 2730 */ 'v', 'q', 'd', 'm', 'u', 'l', 'l', 0,
  /* 2738 */ 's', 'm', 'u', 'l', 'l', 0,
  /* 2744 */ 'u', 'm', 'u', 'l', 'l', 0,
  /* 2750 */ 'v', 'm', 'u', 'l', 'l', 0,
  /* 2756 */ 'v', 'b', 's', 'l', 0,
  /* 2761 */ 'v', 'q', 'd', 'm', 'l', 's', 'l', 0,
  /* 2769 */ 'v', 'm', 'l', 's', 'l', 0,
  /* 2775 */ 's', 't', 'l', 0,
  /* 2779 */ 's', 'm', 'm', 'u', 'l', 0,
  /* 2785 */ 'v', 'n', 'm', 'u', 'l', 0,
  /* 2791 */ 'v', 'm', 'u', 'l', 0,
  /* 2796 */ 'v', 'm', 'o', 'v', 'l', 0,
  /* 2802 */ 'v', 'l', 'l', 'd', 'm', 0,
  /* 2808 */ 'v', 'l', 's', 't', 'm', 0,
  /* 2814 */ 'v', 'r', 's', 'u', 'b', 'h', 'n', 0,
  /* 2822 */ 'v', 's', 'u', 'b', 'h', 'n', 0,
  /* 2829 */ 'v', 'r', 'a', 'd', 'd', 'h', 'n', 0,
  /* 2837 */ 'v', 'a', 'd', 'd', 'h', 'n', 0,
  /* 2844 */ 'v', 'p', 'm', 'i', 'n', 0,
  /* 2850 */ 'v', 'm', 'i', 'n', 0,
  /* 2855 */ 'c', 'm', 'n', 0,
  /* 2859 */ 'v', 'q', 's', 'h', 'r', 'n', 0,
  /* 2866 */ 'v', 'q', 'r', 's', 'h', 'r', 'n', 0,
  /* 2874 */ 'v', 'r', 's', 'h', 'r', 'n', 0,
  /* 2881 */ 'v', 's', 'h', 'r', 'n', 0,
  /* 2887 */ 'v', 'o', 'r', 'n', 0,
  /* 2892 */ 'v', 't', 'r', 'n', 0,
  /* 2897 */ 'v', 'q', 's', 'h', 'r', 'u', 'n', 0,
  /* 2905 */ 'v', 'q', 'r', 's', 'h', 'r', 'u', 'n', 0,
  /* 2914 */ 'v', 'q', 'm', 'o', 'v', 'u', 'n', 0,
  /* 2922 */ 'v', 'm', 'v', 'n', 0,
  /* 2927 */ 'v', 'q', 'm', 'o', 'v', 'n', 0,
  /* 2934 */ 'v', 'm', 'o', 'v', 'n', 0,
  /* 2940 */ 't', 'r', 'a', 'p', 0,
  /* 2945 */ 'c', 'd', 'p', 0,
  /* 2949 */ 'v', 'z', 'i', 'p', 0,
  /* 2954 */ 'v', 'c', 'm', 'p', 0,
  /* 2959 */ 'p', 'o', 'p', 0,
  /* 2963 */ 'v', 'd', 'u', 'p', 0,
  /* 2968 */ 'v', 's', 'w', 'p', 0,
  /* 2973 */ 'v', 'u', 'z', 'p', 0,
  /* 2978 */ 'v', 'c', 'e', 'q', 0,
  /* 2983 */ 't', 'e', 'q', 0,
  /* 2987 */ 's', 'm', 'm', 'l', 'a', 'r', 0,
  /* 2994 */ 'm', 'c', 'r', 0,
  /* 2998 */ 'a', 'd', 'r', 0,
  /* 3002 */ 'v', 'l', 'd', 'r', 0,
  /* 3007 */ 'v', 'r', 's', 'h', 'r', 0,
  /* 3013 */ 'v', 's', 'h', 'r', 0,
  /* 3018 */ 's', 'm', 'm', 'u', 'l', 'r', 0,
  /* 3025 */ 'v', 'e', 'o', 'r', 0,
  /* 3030 */ 'r', 'o', 'r', 0,
  /* 3034 */ 'm', 'c', 'r', 'r', 0,
  /* 3039 */ 'v', 'o', 'r', 'r', 0,
  /* 3044 */ 'a', 's', 'r', 0,
  /* 3048 */ 's', 'm', 'm', 'l', 's', 'r', 0,
  /* 3055 */ 'v', 'm', 's', 'r', 0,
  /* 3060 */ 'v', 'r', 'i', 'n', 't', 'r', 0,
  /* 3067 */ 'v', 's', 't', 'r', 0,
  /* 3072 */ 'v', 'c', 'v', 't', 'r', 0,
  /* 3078 */ 'v', 'q', 'a', 'b', 's', 0,
  /* 3084 */ 'v', 'a', 'b', 's', 0,
  /* 3089 */ 's', 'u', 'b', 's', 0,
  /* 3094 */ 'v', 'c', 'l', 's', 0,
  /* 3099 */ 's', 'm', 'm', 'l', 's', 0,
  /* 3105 */ 'v', 'n', 'm', 'l', 's', 0,
  /* 3111 */ 'v', 'm', 'l', 's', 0,
  /* 3116 */ 'v', 'f', 'm', 's', 0,
  /* 3121 */ 'v', 'f', 'n', 'm', 's', 0,
  /* 3127 */ 'b', 'x', 'n', 's', 0,
  /* 3132 */ 'b', 'l', 'x', 'n', 's', 0,
  /* 3138 */ 'v', 'r', 'e', 'c', 'p', 's', 0,
  /* 3145 */ 'v', 'm', 'r', 's', 0,
  /* 3150 */ 'a', 's', 'r', 's', 0,
  /* 3155 */ 'l', 's', 'r', 's', 0,
  /* 3160 */ 'v', 'r', 's', 'q', 'r', 't', 's', 0,
  /* 3168 */ 'm', 'o', 'v', 's', 0,
  /* 3173 */ 's', 's', 'a', 't', 0,
  /* 3178 */ 'u', 's', 'a', 't', 0,
  /* 3183 */ 't', 't', 'a', 't', 0,
  /* 3188 */ 's', 'm', 'l', 'a', 'b', 't', 0,
  /* 3195 */ 'p', 'k', 'h', 'b', 't', 0,
  /* 3201 */ 's', 'm', 'l', 'a', 'l', 'b', 't', 0,
  /* 3209 */ 's', 'm', 'u', 'l', 'b', 't', 0,
  /* 3216 */ 'l', 'd', 'r', 'b', 't', 0,
  /* 3222 */ 's', 't', 'r', 'b', 't', 0,
  /* 3228 */ 'l', 'd', 'r', 's', 'b', 't', 0,
  /* 3235 */ 'e', 'r', 'e', 't', 0,
  /* 3240 */ 'v', 'a', 'c', 'g', 't', 0,
  /* 3246 */ 'v', 'c', 'g', 't', 0,
  /* 3251 */ 'l', 'd', 'r', 'h', 't', 0,
  /* 3257 */ 's', 't', 'r', 'h', 't', 0,
  /* 3263 */ 'l', 'd', 'r', 's', 'h', 't', 0,
  /* 3270 */ 'r', 'b', 'i', 't', 0,
  /* 3275 */ 'v', 'b', 'i', 't', 0,
  /* 3280 */ 'v', 'c', 'l', 't', 0,
  /* 3285 */ 'v', 'c', 'n', 't', 0,
  /* 3290 */ 'h', 'i', 'n', 't', 0,
  /* 3295 */ 'l', 'd', 'r', 't', 0,
  /* 3300 */ 'v', 's', 'q', 'r', 't', 0,
  /* 3306 */ 's', 't', 'r', 't', 0,
  /* 3311 */ 'v', 't', 's', 't', 0,
  /* 3316 */ 's', 'm', 'l', 'a', 't', 't', 0,
  /* 3323 */ 's', 'm', 'l', 'a', 'l', 't', 't', 0,
  /* 3331 */ 's', 'm', 'u', 'l', 't', 't', 0,
  /* 3338 */ 't', 't', 't', 0,
  /* 3342 */ 'v', 'c', 'v', 't', 't', 0,
  /* 3348 */ 'v', 'c', 'v', 't', 0,
  /* 3353 */ 'm', 'o', 'v', 't', 0,
  /* 3358 */ 's', 'm', 'l', 'a', 'w', 't', 0,
  /* 3365 */ 's', 'm', 'u', 'l', 'w', 't', 0,
  /* 3372 */ 'v', 'e', 'x', 't', 0,
  /* 3377 */ 'v', 'q', 's', 'h', 'l', 'u', 0,
  /* 3384 */ 'r', 'e', 'v', 0,
  /* 3388 */ 's', 'd', 'i', 'v', 0,
  /* 3393 */ 'u', 'd', 'i', 'v', 0,
  /* 3398 */ 'v', 'd', 'i', 'v', 0,
  /* 3403 */ 'v', 'm', 'o', 'v', 0,
  /* 3408 */ 'v', 's', 'u', 'b', 'w', 0,
  /* 3414 */ 'v', 'a', 'd', 'd', 'w', 0,
  /* 3420 */ 'p', 'l', 'd', 'w', 0,
  /* 3425 */ 'm', 'o', 'v', 'w', 0,
  /* 3430 */ 'f', 'l', 'd', 'm', 'i', 'a', 'x', 0,
  /* 3438 */ 'f', 's', 't', 'm', 'i', 'a', 'x', 0,
  /* 3446 */ 'v', 'p', 'm', 'a', 'x', 0,
  /* 3452 */ 'v', 'm', 'a', 'x', 0,
  /* 3457 */ 's', 'h', 's', 'a', 'x', 0,
  /* 3463 */ 'u', 'h', 's', 'a', 'x', 0,
  /* 3469 */ 'u', 'q', 's', 'a', 'x', 0,
  /* 3475 */ 's', 's', 'a', 'x', 0,
  /* 3480 */ 'u', 's', 'a', 'x', 0,
  /* 3485 */ 'f', 'l', 'd', 'm', 'd', 'b', 'x', 0,
  /* 3493 */ 'f', 's', 't', 'm', 'd', 'b', 'x', 0,
  /* 3501 */ 'v', 't', 'b', 'x', 0,
  /* 3506 */ 's', 'm', 'l', 'a', 'd', 'x', 0,
  /* 3513 */ 's', 'm', 'u', 'a', 'd', 'x', 0,
  /* 3520 */ 's', 'm', 'l', 'a', 'l', 'd', 'x', 0,
  /* 3528 */ 's', 'm', 'l', 's', 'l', 'd', 'x', 0,
  /* 3536 */ 's', 'm', 'l', 's', 'd', 'x', 0,
  /* 3543 */ 's', 'm', 'u', 's', 'd', 'x', 0,
  /* 3550 */ 'l', 'd', 'a', 'e', 'x', 0,
  /* 3556 */ 's', 't', 'l', 'e', 'x', 0,
  /* 3562 */ 'l', 'd', 'r', 'e', 'x', 0,
  /* 3568 */ 'c', 'l', 'r', 'e', 'x', 0,
  /* 3574 */ 's', 't', 'r', 'e', 'x', 0,
  /* 3580 */ 's', 'b', 'f', 'x', 0,
  /* 3585 */ 'u', 'b', 'f', 'x', 0,
  /* 3590 */ 'b', 'l', 'x', 0,
  /* 3594 */ 'r', 'r', 'x', 0,
  /* 3598 */ 's', 'h', 'a', 's', 'x', 0,
  /* 3604 */ 'u', 'h', 'a', 's', 'x', 0,
  /* 3610 */ 'u', 'q', 'a', 's', 'x', 0,
  /* 3616 */ 's', 'a', 's', 'x', 0,
  /* 3621 */ 'u', 'a', 's', 'x', 0,
  /* 3626 */ 'v', 'r', 'i', 'n', 't', 'x', 0,
  /* 3633 */ 'v', 'c', 'l', 'z', 0,
  /* 3638 */ 'v', 'r', 'i', 'n', 't', 'z', 0,
  };

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    1863U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    1856U,	// BUNDLE
    1873U,	// LIFETIME_START
    1843U,	// LIFETIME_END
    0U,	// STACKMAP
    2711U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    1450U,	// PATCHABLE_FUNCTION_ENTER
    1419U,	// PATCHABLE_RET
    1496U,	// PATCHABLE_FUNCTION_EXIT
    1473U,	// PATCHABLE_TAIL_CALL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_SEQUENCE
    0U,	// G_MERGE_VALUES
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_LOAD
    0U,	// G_STORE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDE
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SSUBO
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_GEP
    0U,	// G_PTR_MASK
    0U,	// G_BR
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// ABS
    6306U,	// ADCri
    6306U,	// ADCrr
    10402U,	// ADCrsi
    14498U,	// ADCrsr
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    6367U,	// ADDri
    6367U,	// ADDrr
    10463U,	// ADDrsi
    14559U,	// ADDrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    19383U,	// ADR
    1090671693U,	// AESD
    1090671701U,	// AESE
    1107448890U,	// AESIMC
    1107448900U,	// AESMC
    6420U,	// ANDri
    6420U,	// ANDrr
    10516U,	// ANDrsi
    14612U,	// ANDrsr
    269285U,	// ASRi
    269285U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    26794U,	// BFC
    31236U,	// BFI
    6319U,	// BICri
    6319U,	// BICrr
    10415U,	// BICrsi
    14511U,	// BICrsr
    414960U,	// BKPT
    414932U,	// BL
    415007U,	// BLX
    1073778183U,	// BLX_pred
    415007U,	// BLXi
    1073777237U,	// BL_pred
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm
    0U,	// BR_JTr
    415003U,	// BX
    1073777174U,	// BXJ
    0U,	// BX_CALL
    564643U,	// BX_RET
    1073778083U,	// BX_pred
    1073776573U,	// Bcc
    2197859202U,	// CDP
    67809687U,	// CDP2
    3569U,	// CLREX
    20019U,	// CLZ
    19240U,	// CMNri
    19240U,	// CMNzrr
    27432U,	// CMNzrsi
    31528U,	// CMNzrsr
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    19340U,	// CMPri
    19340U,	// CMPrr
    27532U,	// CMPrsi
    31628U,	// CMPrsr
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    414944U,	// CPS1p
    1157680198U,	// CPS2p
    83938374U,	// CPS3p
    33707115U,	// CRC32B
    33707123U,	// CRC32CB
    33707192U,	// CRC32CH
    33707276U,	// CRC32CW
    33707184U,	// CRC32H
    33707268U,	// CRC32W
    1073777012U,	// DBG
    54410U,	// DMB
    54415U,	// DSB
    7123U,	// EORri
    7123U,	// EORrr
    11219U,	// EORrsi
    15315U,	// EORrsr
    433316U,	// ERET
    3322694988U,	// FCONSTD
    3322826060U,	// FCONSTH
    3322957132U,	// FCONSTS
    33574302U,	// FLDMXDB_UPD
    36199U,	// FLDMXIA
    33574247U,	// FLDMXIA_UPD
    1219658U,	// FMSTAT
    33574310U,	// FSTMXDB_UPD
    36207U,	// FSTMXIA
    33574255U,	// FSTMXIA_UPD
    1073777883U,	// HINT
    414955U,	// HLT
    414873U,	// HVC
    58516U,	// ISB
    117767369U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    18277U,	// LDA
    18362U,	// LDAB
    19935U,	// LDAEX
    18562U,	// LDAEXB
    134236462U,	// LDAEXD
    18920U,	// LDAEXH
    18822U,	// LDAH
    152351942U,	// LDC2L_OFFSET
    1242870982U,	// LDC2L_OPTION
    2316612806U,	// LDC2L_POST
    185906374U,	// LDC2L_PRE
    152351102U,	// LDC2_OFFSET
    1242870142U,	// LDC2_OPTION
    2316611966U,	// LDC2_POST
    185905534U,	// LDC2_PRE
    3271588446U,	// LDCL_OFFSET
    3271588446U,	// LDCL_OPTION
    3271588446U,	// LDCL_POST
    3271588446U,	// LDCL_PRE
    3271588006U,	// LDC_OFFSET
    3271588006U,	// LDC_OPTION
    3271588006U,	// LDC_POST
    3271588006U,	// LDC_PRE
    34665U,	// LDMDA
    33572713U,	// LDMDA_UPD
    34796U,	// LDMDB
    33572844U,	// LDMDB_UPD
    35573U,	// LDMIA
    0U,	// LDMIA_RET
    33573621U,	// LDMIA_UPD
    34815U,	// LDMIB
    33572863U,	// LDMIB_UPD
    281745U,	// LDRBT_POST
    68753U,	// LDRBT_POST_IMM
    68753U,	// LDRBT_POST_REG
    67609U,	// LDRB_POST_IMM
    67609U,	// LDRB_POST_REG
    30745U,	// LDRB_PRE_IMM
    67609U,	// LDRB_PRE_REG
    26649U,	// LDRBi12
    30745U,	// LDRBrs
    281532U,	// LDRConstPool
    67864U,	// LDRD
    43288U,	// LDRD_POST
    43288U,	// LDRD_PRE
    19947U,	// LDREX
    18576U,	// LDREXB
    134236476U,	// LDREXD
    18934U,	// LDREXH
    31162U,	// LDRH
    31924U,	// LDRHTi
    68788U,	// LDRHTr
    68026U,	// LDRH_POST
    68026U,	// LDRH_PRE
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    30763U,	// LDRSB
    31901U,	// LDRSBTi
    68765U,	// LDRSBTr
    67627U,	// LDRSB_POST
    67627U,	// LDRSB_PRE
    31181U,	// LDRSH
    31936U,	// LDRSHTi
    68800U,	// LDRSHTr
    68045U,	// LDRSH_POST
    68045U,	// LDRSH_PRE
    281824U,	// LDRT_POST
    68832U,	// LDRT_POST_IMM
    68832U,	// LDRT_POST_REG
    68540U,	// LDR_POST_IMM
    68540U,	// LDR_POST_REG
    31676U,	// LDR_PRE_IMM
    68540U,	// LDR_PRE_REG
    27580U,	// LDRcp
    27580U,	// LDRi12
    31676U,	// LDRrs
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    269006U,	// LSLi
    269006U,	// LSLr
    269292U,	// LSRi
    269292U,	// LSRr
    2197859251U,	// MCR
    17478045U,	// MCR2
    2197883867U,	// MCRR
    17478051U,	// MCRR2
    0U,	// MEMCPY
    10129U,	// MLA
    0U,	// MLAv5
    31774U,	// MLS
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    1482061U,	// MOVPCLR
    0U,	// MOVPCRX
    27930U,	// MOVTi16
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    73037U,	// MOVi
    19810U,	// MOVi16
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    73037U,	// MOVr
    73037U,	// MOVr_TC
    7501U,	// MOVsi
    11597U,	// MOVsr
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    201369783U,	// MRC
    74116U,	// MRC2
    218171579U,	// MRRC
    78218U,	// MRRC2
    35915U,	// MRS
    19531U,	// MRSbanked
    1073777739U,	// MRSsys
    2382384113U,	// MSR
    251677681U,	// MSRbanked
    2382384113U,	// MSRi
    6878U,	// MUL
    0U,	// MULv5
    0U,	// MVNCCi
    72556U,	// MVNi
    72556U,	// MVNr
    7020U,	// MVNsi
    11116U,	// MVNsr
    7137U,	// ORRri
    7137U,	// ORRrr
    11233U,	// ORRrsi
    15329U,	// ORRrsr
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    31868U,	// PKHBT
    30776U,	// PKHTB
    83221U,	// PLDWi12
    87317U,	// PLDWrs
    83102U,	// PLDi12
    87198U,	// PLDrs
    83137U,	// PLIi12
    87233U,	// PLIrs
    26871U,	// QADD
    26298U,	// QADD16
    26401U,	// QADD8
    28188U,	// QASX
    26845U,	// QDADD
    26717U,	// QDSUB
    28047U,	// QSAX
    26730U,	// QSUB
    26260U,	// QSUB16
    26362U,	// QSUB8
    19655U,	// RBIT
    19769U,	// REV
    18142U,	// REV16
    18904U,	// REVSH
    414813U,	// RFEDA
    1594461U,	// RFEDA_UPD
    414844U,	// RFEDB
    1594492U,	// RFEDB_UPD
    414820U,	// RFEIA
    1594468U,	// RFEIA_UPD
    414851U,	// RFEIB
    1594499U,	// RFEIB_UPD
    269271U,	// RORi
    269271U,	// RORr
    0U,	// RRX
    335371U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    6189U,	// RSBri
    6189U,	// RSBrr
    10285U,	// RSBrsi
    14381U,	// RSBrsr
    6336U,	// RSCri
    6336U,	// RSCrr
    10432U,	// RSCrsi
    14528U,	// RSCrsr
    26305U,	// SADD16
    26407U,	// SADD8
    28193U,	// SASX
    6302U,	// SBCri
    6302U,	// SBCrr
    10398U,	// SBCrsi
    14494U,	// SBCrsr
    32253U,	// SBFX
    27965U,	// SDIV
    27259U,	// SEL
    91299U,	// SETEND
    414936U,	// SETPAN
    16928834U,	// SHA1C
    1107447884U,	// SHA1H
    16928866U,	// SHA1M
    16928876U,	// SHA1P
    16928769U,	// SHA1SU0
    1090670619U,	// SHA1SU1
    16928854U,	// SHA256H
    16928821U,	// SHA256H2
    1090670605U,	// SHA256SU0
    16928807U,	// SHA256SU1
    26281U,	// SHADD16
    26386U,	// SHADD8
    28175U,	// SHASX
    28034U,	// SHSAX
    26243U,	// SHSUB16
    26347U,	// SHSUB8
    1073776819U,	// SMC
    30667U,	// SMLABB
    31861U,	// SMLABT
    30924U,	// SMLAD
    32179U,	// SMLADX
    96833U,	// SMLAL
    42962U,	// SMLALBB
    44162U,	// SMLALBT
    30977U,	// SMLALD
    32193U,	// SMLALDX
    43070U,	// SMLALTB
    44284U,	// SMLALTT
    0U,	// SMLALv5
    30769U,	// SMLATB
    31989U,	// SMLATT
    30836U,	// SMLAWB
    32031U,	// SMLAWT
    31010U,	// SMLSD
    32209U,	// SMLSDX
    30988U,	// SMLSLD
    32201U,	// SMLSLDX
    30607U,	// SMMLA
    31660U,	// SMMLAR
    31772U,	// SMMLS
    31721U,	// SMMLSR
    27356U,	// SMMUL
    27595U,	// SMMULR
    26834U,	// SMUAD
    28090U,	// SMUADX
    26586U,	// SMULBB
    27786U,	// SMULBT
    10931U,	// SMULL
    0U,	// SMULLv5
    26694U,	// SMULTB
    27908U,	// SMULTT
    26747U,	// SMULWB
    27942U,	// SMULWT
    26920U,	// SMUSD
    28120U,	// SMUSDX
    0U,	// SPACE
    415071U,	// SRSDA
    415023U,	// SRSDA_UPD
    415093U,	// SRSDB
    415047U,	// SRSDB_UPD
    415082U,	// SRSIA
    415035U,	// SRSIA_UPD
    415104U,	// SRSIB
    415059U,	// SRSIB_UPD
    31846U,	// SSAT
    26319U,	// SSAT16
    28052U,	// SSAX
    26267U,	// SSUB16
    26368U,	// SSUB8
    152351949U,	// STC2L_OFFSET
    1242870989U,	// STC2L_OPTION
    2316612813U,	// STC2L_POST
    185906381U,	// STC2L_PRE
    152351121U,	// STC2_OFFSET
    1242870161U,	// STC2_OPTION
    2316611985U,	// STC2_POST
    185905553U,	// STC2_PRE
    3271588451U,	// STCL_OFFSET
    3271588451U,	// STCL_OPTION
    3271588451U,	// STCL_POST
    3271588451U,	// STCL_PRE
    3271588036U,	// STC_OFFSET
    3271588036U,	// STC_OPTION
    3271588036U,	// STC_POST
    3271588036U,	// STC_PRE
    19160U,	// STL
    18443U,	// STLB
    28133U,	// STLEX
    26761U,	// STLEXB
    26933U,	// STLEXD
    27119U,	// STLEXH
    18852U,	// STLH
    34671U,	// STMDA
    33572719U,	// STMDA_UPD
    34803U,	// STMDB
    33572851U,	// STMDB_UPD
    35579U,	// STMIA
    33573627U,	// STMIA_UPD
    34821U,	// STMIB
    33572869U,	// STMIB_UPD
    281751U,	// STRBT_POST
    33623191U,	// STRBT_POST_IMM
    33623191U,	// STRBT_POST_REG
    33622046U,	// STRB_POST_IMM
    33622046U,	// STRB_POST_REG
    33585182U,	// STRB_PRE_IMM
    33622046U,	// STRB_PRE_REG
    26654U,	// STRBi12
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    30750U,	// STRBrs
    67869U,	// STRD
    33597725U,	// STRD_POST
    33597725U,	// STRD_PRE
    28151U,	// STREX
    26775U,	// STREXB
    26947U,	// STREXD
    27133U,	// STREXH
    31167U,	// STRH
    33586362U,	// STRHTi
    33623226U,	// STRHTr
    33622463U,	// STRH_POST
    33622463U,	// STRH_PRE
    0U,	// STRH_preidx
    281835U,	// STRT_POST
    33623275U,	// STRT_POST_IMM
    33623275U,	// STRT_POST_REG
    33623037U,	// STR_POST_IMM
    33623037U,	// STR_POST_REG
    33586173U,	// STR_PRE_IMM
    33623037U,	// STR_PRE_REG
    27645U,	// STRi12
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    31741U,	// STRrs
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    6239U,	// SUBri
    6239U,	// SUBrr
    10335U,	// SUBrsi
    14431U,	// SUBrsr
    1073776840U,	// SVC
    27546U,	// SWP
    26644U,	// SWPB
    30655U,	// SXTAB
    30309U,	// SXTAB16
    31124U,	// SXTAH
    26707U,	// SXTB
    26229U,	// SXTB16
    27102U,	// SXTH
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    19368U,	// TEQri
    19368U,	// TEQrr
    27560U,	// TEQrsi
    31656U,	// TEQrsr
    0U,	// TPsoft
    2941U,	// TRAP
    2941U,	// TRAPNaCl
    19697U,	// TSTri
    19697U,	// TSTrr
    27889U,	// TSTrsi
    31985U,	// TSTrsr
    26312U,	// UADD16
    26413U,	// UADD8
    28198U,	// UASX
    32258U,	// UBFX
    414891U,	// UDF
    27970U,	// UDIV
    26289U,	// UHADD16
    26393U,	// UHADD8
    28181U,	// UHASX
    28040U,	// UHSAX
    26251U,	// UHSUB16
    26354U,	// UHSUB8
    43558U,	// UMAAL
    96839U,	// UMLAL
    0U,	// UMLALv5
    10937U,	// UMULL
    0U,	// UMULLv5
    26297U,	// UQADD16
    26400U,	// UQADD8
    28187U,	// UQASX
    28046U,	// UQSAX
    26259U,	// UQSUB16
    26361U,	// UQSUB8
    26380U,	// USAD8
    30436U,	// USADA8
    31851U,	// USAT
    26326U,	// USAT16
    28057U,	// USAX
    26274U,	// USUB16
    26374U,	// USUB8
    30661U,	// UXTAB
    30317U,	// UXTAB16
    31130U,	// UXTAH
    26712U,	// UXTB
    26236U,	// UXTB16
    27107U,	// UXTH
    18512428U,	// VABALsv2i64
    18643500U,	// VABALsv4i32
    18774572U,	// VABALsv8i16
    18905644U,	// VABALuv2i64
    19036716U,	// VABALuv4i32
    19167788U,	// VABALuv8i16
    18773856U,	// VABAsv16i8
    18511712U,	// VABAsv2i32
    18642784U,	// VABAsv4i16
    18511712U,	// VABAsv4i32
    18642784U,	// VABAsv8i16
    18773856U,	// VABAsv8i8
    19167072U,	// VABAuv16i8
    18904928U,	// VABAuv2i32
    19036000U,	// VABAuv4i16
    18904928U,	// VABAuv4i32
    19036000U,	// VABAuv8i16
    19167072U,	// VABAuv8i8
    35285608U,	// VABDLsv2i64
    35416680U,	// VABDLsv4i32
    35547752U,	// VABDLsv8i16
    35678824U,	// VABDLuv2i64
    35809896U,	// VABDLuv4i32
    35940968U,	// VABDLuv8i16
    2249222360U,	// VABDfd
    2249222360U,	// VABDfq
    2249091288U,	// VABDhd
    2249091288U,	// VABDhq
    35547352U,	// VABDsv16i8
    35285208U,	// VABDsv2i32
    35416280U,	// VABDsv4i16
    35285208U,	// VABDsv4i32
    35416280U,	// VABDsv8i16
    35547352U,	// VABDsv8i8
    35940568U,	// VABDuv16i8
    35678424U,	// VABDuv2i32
    35809496U,	// VABDuv4i16
    35678424U,	// VABDuv4i32
    35809496U,	// VABDuv8i16
    35940568U,	// VABDuv8i8
    2248952845U,	// VABSD
    2249083917U,	// VABSH
    2249214989U,	// VABSS
    2249214989U,	// VABSfd
    2249214989U,	// VABSfq
    2249083917U,	// VABShd
    2249083917U,	// VABShq
    1109281805U,	// VABSv16i8
    1109019661U,	// VABSv2i32
    1109150733U,	// VABSv4i16
    1109019661U,	// VABSv4i32
    1109150733U,	// VABSv8i16
    1109281805U,	// VABSv8i8
    2249222474U,	// VACGEfd
    2249222474U,	// VACGEfq
    2249091402U,	// VACGEhd
    2249091402U,	// VACGEhq
    2249223337U,	// VACGTfd
    2249223337U,	// VACGTfq
    2249092265U,	// VACGThd
    2249092265U,	// VACGThq
    2248960252U,	// VADDD
    2249091324U,	// VADDH
    36072214U,	// VADDHNv2i32
    36203286U,	// VADDHNv4i16
    36334358U,	// VADDHNv8i8
    35285621U,	// VADDLsv2i64
    35416693U,	// VADDLsv4i32
    35547765U,	// VADDLsv8i16
    35678837U,	// VADDLuv2i64
    35809909U,	// VADDLuv4i32
    35940981U,	// VADDLuv8i16
    2249222396U,	// VADDS
    35286359U,	// VADDWsv2i64
    35417431U,	// VADDWsv4i32
    35548503U,	// VADDWsv8i16
    35679575U,	// VADDWuv2i64
    35810647U,	// VADDWuv4i32
    35941719U,	// VADDWuv8i16
    2249222396U,	// VADDfd
    2249222396U,	// VADDfq
    2249091324U,	// VADDhd
    2249091324U,	// VADDhq
    36464892U,	// VADDv16i8
    36071676U,	// VADDv1i64
    36202748U,	// VADDv2i32
    36071676U,	// VADDv2i64
    36333820U,	// VADDv4i16
    36202748U,	// VADDv4i32
    36333820U,	// VADDv8i16
    36464892U,	// VADDv8i8
    26899U,	// VANDd
    26899U,	// VANDq
    26798U,	// VBICd
    271083694U,	// VBICiv2i32
    271214766U,	// VBICiv4i16
    271083694U,	// VBICiv4i32
    271214766U,	// VBICiv8i16
    26798U,	// VBICq
    31087U,	// VBIFd
    31087U,	// VBIFq
    31948U,	// VBITd
    31948U,	// VBITq
    31429U,	// VBSLd
    31429U,	// VBSLq
    2249223075U,	// VCEQfd
    2249223075U,	// VCEQfq
    2249092003U,	// VCEQhd
    2249092003U,	// VCEQhq
    36465571U,	// VCEQv16i8
    36203427U,	// VCEQv2i32
    36334499U,	// VCEQv4i16
    36203427U,	// VCEQv4i32
    36334499U,	// VCEQv8i16
    36465571U,	// VCEQv8i8
    3257682851U,	// VCEQzv16i8
    2249214883U,	// VCEQzv2f32
    3257420707U,	// VCEQzv2i32
    2249083811U,	// VCEQzv4f16
    2249214883U,	// VCEQzv4f32
    3257551779U,	// VCEQzv4i16
    3257420707U,	// VCEQzv4i32
    2249083811U,	// VCEQzv8f16
    3257551779U,	// VCEQzv8i16
    3257682851U,	// VCEQzv8i8
    2249222480U,	// VCGEfd
    2249222480U,	// VCGEfq
    2249091408U,	// VCGEhd
    2249091408U,	// VCGEhq
    35547472U,	// VCGEsv16i8
    35285328U,	// VCGEsv2i32
    35416400U,	// VCGEsv4i16
    35285328U,	// VCGEsv4i32
    35416400U,	// VCGEsv8i16
    35547472U,	// VCGEsv8i8
    35940688U,	// VCGEuv16i8
    35678544U,	// VCGEuv2i32
    35809616U,	// VCGEuv4i16
    35678544U,	// VCGEuv4i32
    35809616U,	// VCGEuv8i16
    35940688U,	// VCGEuv8i8
    3256764752U,	// VCGEzv16i8
    2249214288U,	// VCGEzv2f32
    3256502608U,	// VCGEzv2i32
    2249083216U,	// VCGEzv4f16
    2249214288U,	// VCGEzv4f32
    3256633680U,	// VCGEzv4i16
    3256502608U,	// VCGEzv4i32
    2249083216U,	// VCGEzv8f16
    3256633680U,	// VCGEzv8i16
    3256764752U,	// VCGEzv8i8
    2249223343U,	// VCGTfd
    2249223343U,	// VCGTfq
    2249092271U,	// VCGThd
    2249092271U,	// VCGThq
    35548335U,	// VCGTsv16i8
    35286191U,	// VCGTsv2i32
    35417263U,	// VCGTsv4i16
    35286191U,	// VCGTsv4i32
    35417263U,	// VCGTsv8i16
    35548335U,	// VCGTsv8i8
    35941551U,	// VCGTuv16i8
    35679407U,	// VCGTuv2i32
    35810479U,	// VCGTuv4i16
    35679407U,	// VCGTuv4i32
    35810479U,	// VCGTuv8i16
    35941551U,	// VCGTuv8i8
    3256765615U,	// VCGTzv16i8
    2249215151U,	// VCGTzv2f32
    3256503471U,	// VCGTzv2i32
    2249084079U,	// VCGTzv4f16
    2249215151U,	// VCGTzv4f32
    3256634543U,	// VCGTzv4i16
    3256503471U,	// VCGTzv4i32
    2249084079U,	// VCGTzv8f16
    3256634543U,	// VCGTzv8i16
    3256765615U,	// VCGTzv8i8
    3256764757U,	// VCLEzv16i8
    2249214293U,	// VCLEzv2f32
    3256502613U,	// VCLEzv2i32
    2249083221U,	// VCLEzv4f16
    2249214293U,	// VCLEzv4f32
    3256633685U,	// VCLEzv4i16
    3256502613U,	// VCLEzv4i32
    2249083221U,	// VCLEzv8f16
    3256633685U,	// VCLEzv8i16
    3256764757U,	// VCLEzv8i8
    1109281815U,	// VCLSv16i8
    1109019671U,	// VCLSv2i32
    1109150743U,	// VCLSv4i16
    1109019671U,	// VCLSv4i32
    1109150743U,	// VCLSv8i16
    1109281815U,	// VCLSv8i8
    3256765649U,	// VCLTzv16i8
    2249215185U,	// VCLTzv2f32
    3256503505U,	// VCLTzv2i32
    2249084113U,	// VCLTzv4f16
    2249215185U,	// VCLTzv4f32
    3256634577U,	// VCLTzv4i16
    3256503505U,	// VCLTzv4i32
    2249084113U,	// VCLTzv8f16
    3256634577U,	// VCLTzv8i16
    3256765649U,	// VCLTzv8i8
    1110199858U,	// VCLZv16i8
    1109937714U,	// VCLZv2i32
    1110068786U,	// VCLZv4i16
    1109937714U,	// VCLZv4i32
    1110068786U,	// VCLZv8i16
    1110199858U,	// VCLZv8i8
    2248952715U,	// VCMPD
    2248952161U,	// VCMPED
    2249083233U,	// VCMPEH
    2249214305U,	// VCMPES
    286034273U,	// VCMPEZD
    286165345U,	// VCMPEZH
    286296417U,	// VCMPEZS
    2249083787U,	// VCMPH
    2249214859U,	// VCMPS
    286034827U,	// VCMPZD
    286165899U,	// VCMPZH
    286296971U,	// VCMPZS
    3034326U,	// VCNTd
    3034326U,	// VCNTq
    1107447926U,	// VCVTANSDf
    1107448605U,	// VCVTANSDh
    1107447926U,	// VCVTANSQf
    1107448605U,	// VCVTANSQh
    1107447986U,	// VCVTANUDf
    1107448665U,	// VCVTANUDh
    1107447986U,	// VCVTANUQf
    1107448665U,	// VCVTANUQh
    1107448234U,	// VCVTASD
    1107448485U,	// VCVTASH
    1107447926U,	// VCVTASS
    1107448294U,	// VCVTAUD
    1107448545U,	// VCVTAUH
    1107447986U,	// VCVTAUS
    3164237U,	// VCVTBDH
    3295309U,	// VCVTBHD
    3426381U,	// VCVTBHS
    3557453U,	// VCVTBSH
    3689749U,	// VCVTDS
    1107447941U,	// VCVTMNSDf
    1107448620U,	// VCVTMNSDh
    1107447941U,	// VCVTMNSQf
    1107448620U,	// VCVTMNSQh
    1107448001U,	// VCVTMNUDf
    1107448680U,	// VCVTMNUDh
    1107448001U,	// VCVTMNUQf
    1107448680U,	// VCVTMNUQh
    1107448249U,	// VCVTMSD
    1107448500U,	// VCVTMSH
    1107447941U,	// VCVTMSS
    1107448309U,	// VCVTMUD
    1107448560U,	// VCVTMUH
    1107448001U,	// VCVTMUS
    1107447956U,	// VCVTNNSDf
    1107448635U,	// VCVTNNSDh
    1107447956U,	// VCVTNNSQf
    1107448635U,	// VCVTNNSQh
    1107448016U,	// VCVTNNUDf
    1107448695U,	// VCVTNNUDh
    1107448016U,	// VCVTNNUQf
    1107448695U,	// VCVTNNUQh
    1107448264U,	// VCVTNSD
    1107448515U,	// VCVTNSH
    1107447956U,	// VCVTNSS
    1107448324U,	// VCVTNUD
    1107448575U,	// VCVTNUH
    1107448016U,	// VCVTNUS
    1107447971U,	// VCVTPNSDf
    1107448650U,	// VCVTPNSDh
    1107447971U,	// VCVTPNSQf
    1107448650U,	// VCVTPNSQh
    1107448031U,	// VCVTPNUDf
    1107448710U,	// VCVTPNUDh
    1107448031U,	// VCVTPNUQf
    1107448710U,	// VCVTPNUQh
    1107448279U,	// VCVTPSD
    1107448530U,	// VCVTPSH
    1107447971U,	// VCVTPSS
    1107448339U,	// VCVTPUD
    1107448590U,	// VCVTPUH
    1107448031U,	// VCVTPUS
    3820821U,	// VCVTSD
    3165455U,	// VCVTTDH
    3296527U,	// VCVTTHD
    3427599U,	// VCVTTHS
    3558671U,	// VCVTTSH
    3558677U,	// VCVTf2h
    305941781U,	// VCVTf2sd
    305941781U,	// VCVTf2sq
    306072853U,	// VCVTf2ud
    306072853U,	// VCVTf2uq
    104623381U,	// VCVTf2xsd
    104623381U,	// VCVTf2xsq
    104754453U,	// VCVTf2xud
    104754453U,	// VCVTf2xuq
    3427605U,	// VCVTh2f
    306203925U,	// VCVTh2sd
    306203925U,	// VCVTh2sq
    306334997U,	// VCVTh2ud
    306334997U,	// VCVTh2uq
    104885525U,	// VCVTh2xsd
    104885525U,	// VCVTh2xsq
    105016597U,	// VCVTh2xud
    105016597U,	// VCVTh2xuq
    306466069U,	// VCVTs2fd
    306466069U,	// VCVTs2fq
    306597141U,	// VCVTs2hd
    306597141U,	// VCVTs2hq
    306728213U,	// VCVTu2fd
    306728213U,	// VCVTu2fq
    306859285U,	// VCVTu2hd
    306859285U,	// VCVTu2hq
    105147669U,	// VCVTxs2fd
    105147669U,	// VCVTxs2fq
    105278741U,	// VCVTxs2hd
    105278741U,	// VCVTxs2hq
    105409813U,	// VCVTxu2fd
    105409813U,	// VCVTxu2fq
    105540885U,	// VCVTxu2hd
    105540885U,	// VCVTxu2hq
    2248961351U,	// VDIVD
    2249092423U,	// VDIVH
    2249223495U,	// VDIVS
    5000084U,	// VDUP16d
    5000084U,	// VDUP16q
    5131156U,	// VDUP32d
    5131156U,	// VDUP32q
    3034004U,	// VDUP8d
    3034004U,	// VDUP8q
    5008276U,	// VDUPLN16d
    5008276U,	// VDUPLN16q
    5139348U,	// VDUPLN32d
    5139348U,	// VDUPLN32q
    3042196U,	// VDUPLN8d
    3042196U,	// VDUPLN8q
    27602U,	// VEORd
    27602U,	// VEORq
    5012781U,	// VEXTd16
    5143853U,	// VEXTd32
    3046701U,	// VEXTd8
    5012781U,	// VEXTq16
    5143853U,	// VEXTq32
    5274925U,	// VEXTq64
    3046701U,	// VEXTq8
    101480352U,	// VFMAD
    101611424U,	// VFMAH
    101742496U,	// VFMAS
    101742496U,	// VFMAfd
    101742496U,	// VFMAfq
    101611424U,	// VFMAhd
    101611424U,	// VFMAhq
    101481517U,	// VFMSD
    101612589U,	// VFMSH
    101743661U,	// VFMSS
    101743661U,	// VFMSfd
    101743661U,	// VFMSfq
    101612589U,	// VFMShd
    101612589U,	// VFMShq
    101480357U,	// VFNMAD
    101611429U,	// VFNMAH
    101742501U,	// VFNMAS
    101481522U,	// VFNMSD
    101612594U,	// VFNMSH
    101743666U,	// VFNMSS
    5139788U,	// VGETLNi32
    1109159244U,	// VGETLNs16
    1109290316U,	// VGETLNs8
    1109552460U,	// VGETLNu16
    1109683532U,	// VGETLNu8
    35547370U,	// VHADDsv16i8
    35285226U,	// VHADDsv2i32
    35416298U,	// VHADDsv4i16
    35285226U,	// VHADDsv4i32
    35416298U,	// VHADDsv8i16
    35547370U,	// VHADDsv8i8
    35940586U,	// VHADDuv16i8
    35678442U,	// VHADDuv2i32
    35809514U,	// VHADDuv4i16
    35678442U,	// VHADDuv4i32
    35809514U,	// VHADDuv8i16
    35940586U,	// VHADDuv8i8
    35547235U,	// VHSUBsv16i8
    35285091U,	// VHSUBsv2i32
    35416163U,	// VHSUBsv4i16
    35285091U,	// VHSUBsv4i32
    35416163U,	// VHSUBsv8i16
    35547235U,	// VHSUBsv8i8
    35940451U,	// VHSUBuv16i8
    35678307U,	// VHSUBuv2i32
    35809379U,	// VHSUBuv4i16
    35678307U,	// VHSUBuv4i32
    35809379U,	// VHSUBuv8i16
    35940451U,	// VHSUBuv8i8
    1107448821U,	// VINSH
    2471257592U,	// VLD1DUPd16
    3545003512U,	// VLD1DUPd16wb_fixed
    3545040376U,	// VLD1DUPd16wb_register
    2471388664U,	// VLD1DUPd32
    3545134584U,	// VLD1DUPd32wb_fixed
    3545171448U,	// VLD1DUPd32wb_register
    2469291512U,	// VLD1DUPd8
    3543037432U,	// VLD1DUPd8wb_fixed
    3543074296U,	// VLD1DUPd8wb_register
    2488034808U,	// VLD1DUPq16
    3561780728U,	// VLD1DUPq16wb_fixed
    3561817592U,	// VLD1DUPq16wb_register
    2488165880U,	// VLD1DUPq32
    3561911800U,	// VLD1DUPq32wb_fixed
    3561948664U,	// VLD1DUPq32wb_register
    2486068728U,	// VLD1DUPq8
    3559814648U,	// VLD1DUPq8wb_fixed
    3559851512U,	// VLD1DUPq8wb_register
    5441016U,	// VLD1LNd16
    5473784U,	// VLD1LNd16_UPD
    5572088U,	// VLD1LNd32
    5604856U,	// VLD1LNd32_UPD
    5703160U,	// VLD1LNd8
    5735928U,	// VLD1LNd8_UPD
    5010936U,	// VLD1LNdAsm_16
    5142008U,	// VLD1LNdAsm_32
    3044856U,	// VLD1LNdAsm_8
    5010936U,	// VLD1LNdWB_fixed_Asm_16
    5142008U,	// VLD1LNdWB_fixed_Asm_32
    3044856U,	// VLD1LNdWB_fixed_Asm_8
    5047800U,	// VLD1LNdWB_register_Asm_16
    5178872U,	// VLD1LNdWB_register_Asm_32
    3081720U,	// VLD1LNdWB_register_Asm_8
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    2504812024U,	// VLD1d16
    2521589240U,	// VLD1d16Q
    3595335160U,	// VLD1d16Qwb_fixed
    3595372024U,	// VLD1d16Qwb_register
    2538366456U,	// VLD1d16T
    3612112376U,	// VLD1d16Twb_fixed
    3612149240U,	// VLD1d16Twb_register
    3578557944U,	// VLD1d16wb_fixed
    3578594808U,	// VLD1d16wb_register
    2504943096U,	// VLD1d32
    2521720312U,	// VLD1d32Q
    3595466232U,	// VLD1d32Qwb_fixed
    3595503096U,	// VLD1d32Qwb_register
    2538497528U,	// VLD1d32T
    3612243448U,	// VLD1d32Twb_fixed
    3612280312U,	// VLD1d32Twb_register
    3578689016U,	// VLD1d32wb_fixed
    3578725880U,	// VLD1d32wb_register
    2505074168U,	// VLD1d64
    2521851384U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    3595597304U,	// VLD1d64Qwb_fixed
    3595634168U,	// VLD1d64Qwb_register
    2538628600U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    3612374520U,	// VLD1d64Twb_fixed
    3612411384U,	// VLD1d64Twb_register
    3578820088U,	// VLD1d64wb_fixed
    3578856952U,	// VLD1d64wb_register
    2502845944U,	// VLD1d8
    2519623160U,	// VLD1d8Q
    3593369080U,	// VLD1d8Qwb_fixed
    3593405944U,	// VLD1d8Qwb_register
    2536400376U,	// VLD1d8T
    3610146296U,	// VLD1d8Twb_fixed
    3610183160U,	// VLD1d8Twb_register
    3576591864U,	// VLD1d8wb_fixed
    3576628728U,	// VLD1d8wb_register
    2555143672U,	// VLD1q16
    3628889592U,	// VLD1q16wb_fixed
    3628926456U,	// VLD1q16wb_register
    2555274744U,	// VLD1q32
    3629020664U,	// VLD1q32wb_fixed
    3629057528U,	// VLD1q32wb_register
    2555405816U,	// VLD1q64
    3629151736U,	// VLD1q64wb_fixed
    3629188600U,	// VLD1q64wb_register
    2553177592U,	// VLD1q8
    3626923512U,	// VLD1q8wb_fixed
    3626960376U,	// VLD1q8wb_register
    2488034852U,	// VLD2DUPd16
    3561780772U,	// VLD2DUPd16wb_fixed
    3561817636U,	// VLD2DUPd16wb_register
    2571920932U,	// VLD2DUPd16x2
    3645666852U,	// VLD2DUPd16x2wb_fixed
    3645703716U,	// VLD2DUPd16x2wb_register
    2488165924U,	// VLD2DUPd32
    3561911844U,	// VLD2DUPd32wb_fixed
    3561948708U,	// VLD2DUPd32wb_register
    2572052004U,	// VLD2DUPd32x2
    3645797924U,	// VLD2DUPd32x2wb_fixed
    3645834788U,	// VLD2DUPd32x2wb_register
    2486068772U,	// VLD2DUPd8
    3559814692U,	// VLD2DUPd8wb_fixed
    3559851556U,	// VLD2DUPd8wb_register
    2569954852U,	// VLD2DUPd8x2
    3643700772U,	// VLD2DUPd8x2wb_fixed
    3643737636U,	// VLD2DUPd8x2wb_register
    5473828U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    5477924U,	// VLD2LNd16_UPD
    5604900U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    5608996U,	// VLD2LNd32_UPD
    5735972U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    5740068U,	// VLD2LNd8_UPD
    5010980U,	// VLD2LNdAsm_16
    5142052U,	// VLD2LNdAsm_32
    3044900U,	// VLD2LNdAsm_8
    5010980U,	// VLD2LNdWB_fixed_Asm_16
    5142052U,	// VLD2LNdWB_fixed_Asm_32
    3044900U,	// VLD2LNdWB_fixed_Asm_8
    5047844U,	// VLD2LNdWB_register_Asm_16
    5178916U,	// VLD2LNdWB_register_Asm_32
    3081764U,	// VLD2LNdWB_register_Asm_8
    5473828U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    5477924U,	// VLD2LNq16_UPD
    5604900U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    5608996U,	// VLD2LNq32_UPD
    5010980U,	// VLD2LNqAsm_16
    5142052U,	// VLD2LNqAsm_32
    5010980U,	// VLD2LNqWB_fixed_Asm_16
    5142052U,	// VLD2LNqWB_fixed_Asm_32
    5047844U,	// VLD2LNqWB_register_Asm_16
    5178916U,	// VLD2LNqWB_register_Asm_32
    2588698148U,	// VLD2b16
    3662444068U,	// VLD2b16wb_fixed
    3662480932U,	// VLD2b16wb_register
    2588829220U,	// VLD2b32
    3662575140U,	// VLD2b32wb_fixed
    3662612004U,	// VLD2b32wb_register
    2586732068U,	// VLD2b8
    3660477988U,	// VLD2b8wb_fixed
    3660514852U,	// VLD2b8wb_register
    2555143716U,	// VLD2d16
    3628889636U,	// VLD2d16wb_fixed
    3628926500U,	// VLD2d16wb_register
    2555274788U,	// VLD2d32
    3629020708U,	// VLD2d32wb_fixed
    3629057572U,	// VLD2d32wb_register
    2553177636U,	// VLD2d8
    3626923556U,	// VLD2d8wb_fixed
    3626960420U,	// VLD2d8wb_register
    2521589284U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    3595335204U,	// VLD2q16wb_fixed
    3595372068U,	// VLD2q16wb_register
    2521720356U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    3595466276U,	// VLD2q32wb_fixed
    3595503140U,	// VLD2q32wb_register
    2519623204U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    3593369124U,	// VLD2q8wb_fixed
    3593405988U,	// VLD2q8wb_register
    1079182916U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    1079215684U,	// VLD3DUPd16_UPD
    1079313988U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    1079346756U,	// VLD3DUPd32_UPD
    1079445060U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    1079477828U,	// VLD3DUPd8_UPD
    1531733572U,	// VLD3DUPdAsm_16
    1531864644U,	// VLD3DUPdAsm_32
    1529767492U,	// VLD3DUPdAsm_8
    2605475396U,	// VLD3DUPdWB_fixed_Asm_16
    2605606468U,	// VLD3DUPdWB_fixed_Asm_32
    2603509316U,	// VLD3DUPdWB_fixed_Asm_8
    457995844U,	// VLD3DUPdWB_register_Asm_16
    458126916U,	// VLD3DUPdWB_register_Asm_32
    456029764U,	// VLD3DUPdWB_register_Asm_8
    1079182916U,	// VLD3DUPq16
    1079215684U,	// VLD3DUPq16_UPD
    1079313988U,	// VLD3DUPq32
    1079346756U,	// VLD3DUPq32_UPD
    1079445060U,	// VLD3DUPq8
    1079477828U,	// VLD3DUPq8_UPD
    1548510788U,	// VLD3DUPqAsm_16
    1548641860U,	// VLD3DUPqAsm_32
    1546544708U,	// VLD3DUPqAsm_8
    2622252612U,	// VLD3DUPqWB_fixed_Asm_16
    2622383684U,	// VLD3DUPqWB_fixed_Asm_32
    2620286532U,	// VLD3DUPqWB_fixed_Asm_8
    474773060U,	// VLD3DUPqWB_register_Asm_16
    474904132U,	// VLD3DUPqWB_register_Asm_32
    472806980U,	// VLD3DUPqWB_register_Asm_8
    5477956U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    5482052U,	// VLD3LNd16_UPD
    5609028U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    5613124U,	// VLD3LNd32_UPD
    5740100U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    5744196U,	// VLD3LNd8_UPD
    5011012U,	// VLD3LNdAsm_16
    5142084U,	// VLD3LNdAsm_32
    3044932U,	// VLD3LNdAsm_8
    5011012U,	// VLD3LNdWB_fixed_Asm_16
    5142084U,	// VLD3LNdWB_fixed_Asm_32
    3044932U,	// VLD3LNdWB_fixed_Asm_8
    5047876U,	// VLD3LNdWB_register_Asm_16
    5178948U,	// VLD3LNdWB_register_Asm_32
    3081796U,	// VLD3LNdWB_register_Asm_8
    5477956U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    5482052U,	// VLD3LNq16_UPD
    5609028U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    5613124U,	// VLD3LNq32_UPD
    5011012U,	// VLD3LNqAsm_16
    5142084U,	// VLD3LNqAsm_32
    5011012U,	// VLD3LNqWB_fixed_Asm_16
    5142084U,	// VLD3LNqWB_fixed_Asm_32
    5047876U,	// VLD3LNqWB_register_Asm_16
    5178948U,	// VLD3LNqWB_register_Asm_32
    5441092U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    5473860U,	// VLD3d16_UPD
    5572164U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    5604932U,	// VLD3d32_UPD
    5703236U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    5736004U,	// VLD3d8_UPD
    2538366532U,	// VLD3dAsm_16
    2538497604U,	// VLD3dAsm_32
    2536400452U,	// VLD3dAsm_8
    2538366532U,	// VLD3dWB_fixed_Asm_16
    2538497604U,	// VLD3dWB_fixed_Asm_32
    2536400452U,	// VLD3dWB_fixed_Asm_8
    2538370628U,	// VLD3dWB_register_Asm_16
    2538501700U,	// VLD3dWB_register_Asm_32
    2536404548U,	// VLD3dWB_register_Asm_8
    5441092U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    5473860U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    5572164U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    5604932U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    5703236U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    5736004U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    1565288004U,	// VLD3qAsm_16
    1565419076U,	// VLD3qAsm_32
    1563321924U,	// VLD3qAsm_8
    2639029828U,	// VLD3qWB_fixed_Asm_16
    2639160900U,	// VLD3qWB_fixed_Asm_32
    2637063748U,	// VLD3qWB_fixed_Asm_8
    491550276U,	// VLD3qWB_register_Asm_16
    491681348U,	// VLD3qWB_register_Asm_32
    489584196U,	// VLD3qWB_register_Asm_8
    1079158363U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    1079227995U,	// VLD4DUPd16_UPD
    1079289435U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    1079359067U,	// VLD4DUPd32_UPD
    1079420507U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    1079490139U,	// VLD4DUPd8_UPD
    1582065243U,	// VLD4DUPdAsm_16
    1582196315U,	// VLD4DUPdAsm_32
    1580099163U,	// VLD4DUPdAsm_8
    2655807067U,	// VLD4DUPdWB_fixed_Asm_16
    2655938139U,	// VLD4DUPdWB_fixed_Asm_32
    2653840987U,	// VLD4DUPdWB_fixed_Asm_8
    508327515U,	// VLD4DUPdWB_register_Asm_16
    508458587U,	// VLD4DUPdWB_register_Asm_32
    506361435U,	// VLD4DUPdWB_register_Asm_8
    1079158363U,	// VLD4DUPq16
    1079227995U,	// VLD4DUPq16_UPD
    1079289435U,	// VLD4DUPq32
    1079359067U,	// VLD4DUPq32_UPD
    1079420507U,	// VLD4DUPq8
    1079490139U,	// VLD4DUPq8_UPD
    1598842459U,	// VLD4DUPqAsm_16
    1598973531U,	// VLD4DUPqAsm_32
    1596876379U,	// VLD4DUPqAsm_8
    2672584283U,	// VLD4DUPqWB_fixed_Asm_16
    2672715355U,	// VLD4DUPqWB_fixed_Asm_32
    2670618203U,	// VLD4DUPqWB_fixed_Asm_8
    525104731U,	// VLD4DUPqWB_register_Asm_16
    525235803U,	// VLD4DUPqWB_register_Asm_32
    523138651U,	// VLD4DUPqWB_register_Asm_8
    5482075U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    5490267U,	// VLD4LNd16_UPD
    5613147U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    5621339U,	// VLD4LNd32_UPD
    5744219U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    5752411U,	// VLD4LNd8_UPD
    5011035U,	// VLD4LNdAsm_16
    5142107U,	// VLD4LNdAsm_32
    3044955U,	// VLD4LNdAsm_8
    5011035U,	// VLD4LNdWB_fixed_Asm_16
    5142107U,	// VLD4LNdWB_fixed_Asm_32
    3044955U,	// VLD4LNdWB_fixed_Asm_8
    5047899U,	// VLD4LNdWB_register_Asm_16
    5178971U,	// VLD4LNdWB_register_Asm_32
    3081819U,	// VLD4LNdWB_register_Asm_8
    5482075U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    5490267U,	// VLD4LNq16_UPD
    5613147U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    5621339U,	// VLD4LNq32_UPD
    5011035U,	// VLD4LNqAsm_16
    5142107U,	// VLD4LNqAsm_32
    5011035U,	// VLD4LNqWB_fixed_Asm_16
    5142107U,	// VLD4LNqWB_fixed_Asm_32
    5047899U,	// VLD4LNqWB_register_Asm_16
    5178971U,	// VLD4LNqWB_register_Asm_32
    5416539U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    5486171U,	// VLD4d16_UPD
    5547611U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    5617243U,	// VLD4d32_UPD
    5678683U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    5748315U,	// VLD4d8_UPD
    2521589339U,	// VLD4dAsm_16
    2521720411U,	// VLD4dAsm_32
    2519623259U,	// VLD4dAsm_8
    2521589339U,	// VLD4dWB_fixed_Asm_16
    2521720411U,	// VLD4dWB_fixed_Asm_32
    2519623259U,	// VLD4dWB_fixed_Asm_8
    2521593435U,	// VLD4dWB_register_Asm_16
    2521724507U,	// VLD4dWB_register_Asm_32
    2519627355U,	// VLD4dWB_register_Asm_8
    5416539U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    5486171U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    5547611U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    5617243U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    5678683U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    5748315U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    1615619675U,	// VLD4qAsm_16
    1615750747U,	// VLD4qAsm_32
    1613653595U,	// VLD4qAsm_8
    2689361499U,	// VLD4qWB_fixed_Asm_16
    2689492571U,	// VLD4qWB_fixed_Asm_32
    2687395419U,	// VLD4qWB_fixed_Asm_8
    541881947U,	// VLD4qWB_register_Asm_16
    542013019U,	// VLD4qWB_register_Asm_32
    539915867U,	// VLD4qWB_register_Asm_8
    33572843U,	// VLDMDDB_UPD
    34683U,	// VLDMDIA
    33572731U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    33572843U,	// VLDMSDB_UPD
    34683U,	// VLDMSIA
    33572731U,	// VLDMSIA_UPD
    27579U,	// VLDRD
    5008315U,	// VLDRH
    27579U,	// VLDRS
    1073777395U,	// VLLDM
    1073777401U,	// VLSTM
    33706566U,	// VMAXNMD
    33706937U,	// VMAXNMH
    33706258U,	// VMAXNMNDf
    33706937U,	// VMAXNMNDh
    33706258U,	// VMAXNMNQf
    33706937U,	// VMAXNMNQh
    33706258U,	// VMAXNMS
    2249223549U,	// VMAXfd
    2249223549U,	// VMAXfq
    2249092477U,	// VMAXhd
    2249092477U,	// VMAXhq
    35548541U,	// VMAXsv16i8
    35286397U,	// VMAXsv2i32
    35417469U,	// VMAXsv4i16
    35286397U,	// VMAXsv4i32
    35417469U,	// VMAXsv8i16
    35548541U,	// VMAXsv8i8
    35941757U,	// VMAXuv16i8
    35679613U,	// VMAXuv2i32
    35810685U,	// VMAXuv4i16
    35679613U,	// VMAXuv4i32
    35810685U,	// VMAXuv8i16
    35941757U,	// VMAXuv8i8
    33706554U,	// VMINNMD
    33706925U,	// VMINNMH
    33706246U,	// VMINNMNDf
    33706925U,	// VMINNMNDh
    33706246U,	// VMINNMNQf
    33706925U,	// VMINNMNQh
    33706246U,	// VMINNMS
    2249222947U,	// VMINfd
    2249222947U,	// VMINfq
    2249091875U,	// VMINhd
    2249091875U,	// VMINhq
    35547939U,	// VMINsv16i8
    35285795U,	// VMINsv2i32
    35416867U,	// VMINsv4i16
    35285795U,	// VMINsv4i32
    35416867U,	// VMINsv8i16
    35547939U,	// VMINsv8i8
    35941155U,	// VMINuv16i8
    35679011U,	// VMINuv2i32
    35810083U,	// VMINuv4i16
    35679011U,	// VMINuv4i32
    35810083U,	// VMINuv8i16
    35941155U,	// VMINuv8i8
    101480347U,	// VMLAD
    101611419U,	// VMLAH
    18549325U,	// VMLALslsv2i32
    18680397U,	// VMLALslsv4i16
    18942541U,	// VMLALsluv2i32
    19073613U,	// VMLALsluv4i16
    18512461U,	// VMLALsv2i64
    18643533U,	// VMLALsv4i32
    18774605U,	// VMLALsv8i16
    18905677U,	// VMLALuv2i64
    19036749U,	// VMLALuv4i32
    19167821U,	// VMLALuv8i16
    101742491U,	// VMLAS
    101742491U,	// VMLAfd
    101742491U,	// VMLAfq
    101611419U,	// VMLAhd
    101611419U,	// VMLAhq
    101779355U,	// VMLAslfd
    101779355U,	// VMLAslfq
    101648283U,	// VMLAslhd
    101648283U,	// VMLAslhq
    19466139U,	// VMLAslv2i32
    19597211U,	// VMLAslv4i16
    19466139U,	// VMLAslv4i32
    19597211U,	// VMLAslv8i16
    19691419U,	// VMLAv16i8
    19429275U,	// VMLAv2i32
    19560347U,	// VMLAv4i16
    19429275U,	// VMLAv4i32
    19560347U,	// VMLAv8i16
    19691419U,	// VMLAv8i8
    101481512U,	// VMLSD
    101612584U,	// VMLSH
    18549458U,	// VMLSLslsv2i32
    18680530U,	// VMLSLslsv4i16
    18942674U,	// VMLSLsluv2i32
    19073746U,	// VMLSLsluv4i16
    18512594U,	// VMLSLsv2i64
    18643666U,	// VMLSLsv4i32
    18774738U,	// VMLSLsv8i16
    18905810U,	// VMLSLuv2i64
    19036882U,	// VMLSLuv4i32
    19167954U,	// VMLSLuv8i16
    101743656U,	// VMLSS
    101743656U,	// VMLSfd
    101743656U,	// VMLSfq
    101612584U,	// VMLShd
    101612584U,	// VMLShq
    101780520U,	// VMLSslfd
    101780520U,	// VMLSslfq
    101649448U,	// VMLSslhd
    101649448U,	// VMLSslhq
    19467304U,	// VMLSslv2i32
    19598376U,	// VMLSslv4i16
    19467304U,	// VMLSslv4i32
    19598376U,	// VMLSslv8i16
    19692584U,	// VMLSv16i8
    19430440U,	// VMLSv2i32
    19561512U,	// VMLSv4i16
    19430440U,	// VMLSv4i32
    19561512U,	// VMLSv8i16
    19692584U,	// VMLSv8i8
    2248953164U,	// VMOVD
    0U,	// VMOVD0
    27980U,	// VMOVDRR
    0U,	// VMOVDcc
    1107448867U,	// VMOVH
    2249084236U,	// VMOVHR
    1109019373U,	// VMOVLsv2i64
    1109150445U,	// VMOVLsv4i32
    1109281517U,	// VMOVLsv8i16
    1109412589U,	// VMOVLuv2i64
    1109543661U,	// VMOVLuv4i32
    1109674733U,	// VMOVLuv8i16
    1109805943U,	// VMOVNv2i32
    1109937015U,	// VMOVNv4i16
    1110068087U,	// VMOVNv8i8
    0U,	// VMOVQ0
    2249084236U,	// VMOVRH
    27980U,	// VMOVRRD
    32076U,	// VMOVRRS
    19788U,	// VMOVRS
    2249215308U,	// VMOVS
    19788U,	// VMOVSR
    32076U,	// VMOVSRR
    0U,	// VMOVScc
    271338828U,	// VMOVv16i8
    270945612U,	// VMOVv1i64
    3322957132U,	// VMOVv2f32
    271076684U,	// VMOVv2i32
    270945612U,	// VMOVv2i64
    3322957132U,	// VMOVv4f32
    271207756U,	// VMOVv4i16
    271076684U,	// VMOVv4i32
    271207756U,	// VMOVv8i16
    271338828U,	// VMOVv8i8
    3221261386U,	// VMRS
    35914U,	// VMRS_FPEXC
    1073777738U,	// VMRS_FPINST
    2147519562U,	// VMRS_FPINST2
    3221261386U,	// VMRS_FPSID
    35914U,	// VMRS_MVFR0
    1073777738U,	// VMRS_MVFR1
    2147519562U,	// VMRS_MVFR2
    5802992U,	// VMSR
    5934064U,	// VMSR_FPEXC
    6065136U,	// VMSR_FPINST
    6196208U,	// VMSR_FPINST2
    6327280U,	// VMSR_FPSID
    2248960744U,	// VMULD
    2249091816U,	// VMULH
    33706650U,	// VMULLp64
    6449855U,	// VMULLp8
    35289791U,	// VMULLslsv2i32
    35420863U,	// VMULLslsv4i16
    35683007U,	// VMULLsluv2i32
    35814079U,	// VMULLsluv4i16
    35285695U,	// VMULLsv2i64
    35416767U,	// VMULLsv4i32
    35547839U,	// VMULLsv8i16
    35678911U,	// VMULLuv2i64
    35809983U,	// VMULLuv4i32
    35941055U,	// VMULLuv8i16
    2249222888U,	// VMULS
    2249222888U,	// VMULfd
    2249222888U,	// VMULfq
    2249091816U,	// VMULhd
    2249091816U,	// VMULhq
    6449896U,	// VMULpd
    6449896U,	// VMULpq
    2249226984U,	// VMULslfd
    2249226984U,	// VMULslfq
    2249095912U,	// VMULslhd
    2249095912U,	// VMULslhq
    36207336U,	// VMULslv2i32
    36338408U,	// VMULslv4i16
    36207336U,	// VMULslv4i32
    36338408U,	// VMULslv8i16
    36465384U,	// VMULv16i8
    36203240U,	// VMULv2i32
    36334312U,	// VMULv4i16
    36203240U,	// VMULv4i32
    36334312U,	// VMULv8i16
    36465384U,	// VMULv8i8
    19307U,	// VMVNd
    19307U,	// VMVNq
    271076203U,	// VMVNv2i32
    271207275U,	// VMVNv4i16
    271076203U,	// VMVNv4i32
    271207275U,	// VMVNv8i16
    2248952190U,	// VNEGD
    2249083262U,	// VNEGH
    2249214334U,	// VNEGS
    2249214334U,	// VNEGf32q
    2249214334U,	// VNEGfd
    2249083262U,	// VNEGhd
    2249083262U,	// VNEGhq
    1109150078U,	// VNEGs16d
    1109150078U,	// VNEGs16q
    1109019006U,	// VNEGs32d
    1109019006U,	// VNEGs32q
    1109281150U,	// VNEGs8d
    1109281150U,	// VNEGs8q
    101480341U,	// VNMLAD
    101611413U,	// VNMLAH
    101742485U,	// VNMLAS
    101481506U,	// VNMLSD
    101612578U,	// VNMLSH
    101743650U,	// VNMLSS
    2248960738U,	// VNMULD
    2249091810U,	// VNMULH
    2249222882U,	// VNMULS
    27464U,	// VORNd
    27464U,	// VORNq
    27616U,	// VORRd
    271084512U,	// VORRiv2i32
    271215584U,	// VORRiv4i16
    271084512U,	// VORRiv4i32
    271215584U,	// VORRiv8i16
    27616U,	// VORRq
    1092512306U,	// VPADALsv16i8
    1092250162U,	// VPADALsv2i32
    1092381234U,	// VPADALsv4i16
    1092250162U,	// VPADALsv4i32
    1092381234U,	// VPADALsv8i16
    1092512306U,	// VPADALsv8i8
    1092905522U,	// VPADALuv16i8
    1092643378U,	// VPADALuv2i32
    1092774450U,	// VPADALuv4i16
    1092643378U,	// VPADALuv4i32
    1092774450U,	// VPADALuv8i16
    1092905522U,	// VPADALuv8i8
    1109281390U,	// VPADDLsv16i8
    1109019246U,	// VPADDLsv2i32
    1109150318U,	// VPADDLsv4i16
    1109019246U,	// VPADDLsv4i32
    1109150318U,	// VPADDLsv8i16
    1109281390U,	// VPADDLsv8i8
    1109674606U,	// VPADDLuv16i8
    1109412462U,	// VPADDLuv2i32
    1109543534U,	// VPADDLuv4i16
    1109412462U,	// VPADDLuv4i32
    1109543534U,	// VPADDLuv8i16
    1109674606U,	// VPADDLuv8i8
    2249222384U,	// VPADDf
    2249091312U,	// VPADDh
    36333808U,	// VPADDi16
    36202736U,	// VPADDi32
    36464880U,	// VPADDi8
    2249223543U,	// VPMAXf
    2249092471U,	// VPMAXh
    35417463U,	// VPMAXs16
    35286391U,	// VPMAXs32
    35548535U,	// VPMAXs8
    35810679U,	// VPMAXu16
    35679607U,	// VPMAXu32
    35941751U,	// VPMAXu8
    2249222941U,	// VPMINf
    2249091869U,	// VPMINh
    35416861U,	// VPMINs16
    35285789U,	// VPMINs32
    35547933U,	// VPMINs8
    35810077U,	// VPMINu16
    35679005U,	// VPMINu32
    35941149U,	// VPMINu8
    1109281799U,	// VQABSv16i8
    1109019655U,	// VQABSv2i32
    1109150727U,	// VQABSv4i16
    1109019655U,	// VQABSv4i32
    1109150727U,	// VQABSv8i16
    1109281799U,	// VQABSv8i8
    35547382U,	// VQADDsv16i8
    40134902U,	// VQADDsv1i64
    35285238U,	// VQADDsv2i32
    40134902U,	// VQADDsv2i64
    35416310U,	// VQADDsv4i16
    35285238U,	// VQADDsv4i32
    35416310U,	// VQADDsv8i16
    35547382U,	// VQADDsv8i8
    35940598U,	// VQADDuv16i8
    40265974U,	// VQADDuv1i64
    35678454U,	// VQADDuv2i32
    40265974U,	// VQADDuv2i64
    35809526U,	// VQADDuv4i16
    35678454U,	// VQADDuv4i32
    35809526U,	// VQADDuv8i16
    35940598U,	// VQADDuv8i8
    18549305U,	// VQDMLALslv2i32
    18680377U,	// VQDMLALslv4i16
    18512441U,	// VQDMLALv2i64
    18643513U,	// VQDMLALv4i32
    18549450U,	// VQDMLSLslv2i32
    18680522U,	// VQDMLSLslv4i16
    18512586U,	// VQDMLSLv2i64
    18643658U,	// VQDMLSLv4i32
    35289513U,	// VQDMULHslv2i32
    35420585U,	// VQDMULHslv4i16
    35289513U,	// VQDMULHslv4i32
    35420585U,	// VQDMULHslv8i16
    35285417U,	// VQDMULHv2i32
    35416489U,	// VQDMULHv4i16
    35285417U,	// VQDMULHv4i32
    35416489U,	// VQDMULHv8i16
    35289771U,	// VQDMULLslv2i32
    35420843U,	// VQDMULLslv4i16
    35285675U,	// VQDMULLv2i64
    35416747U,	// VQDMULLv4i32
    1113869155U,	// VQMOVNsuv2i32
    1109019491U,	// VQMOVNsuv4i16
    1109150563U,	// VQMOVNsuv8i8
    1113869168U,	// VQMOVNsv2i32
    1109019504U,	// VQMOVNsv4i16
    1109150576U,	// VQMOVNsv8i8
    1114000240U,	// VQMOVNuv2i32
    1109412720U,	// VQMOVNuv4i16
    1109543792U,	// VQMOVNuv8i8
    1109281144U,	// VQNEGv16i8
    1109019000U,	// VQNEGv2i32
    1109150072U,	// VQNEGv4i16
    1109019000U,	// VQNEGv4i32
    1109150072U,	// VQNEGv8i16
    1109281144U,	// VQNEGv8i8
    18549131U,	// VQRDMLAHslv2i32
    18680203U,	// VQRDMLAHslv4i16
    18549131U,	// VQRDMLAHslv4i32
    18680203U,	// VQRDMLAHslv8i16
    18512267U,	// VQRDMLAHv2i32
    18643339U,	// VQRDMLAHv4i16
    18512267U,	// VQRDMLAHv4i32
    18643339U,	// VQRDMLAHv8i16
    18549188U,	// VQRDMLSHslv2i32
    18680260U,	// VQRDMLSHslv4i16
    18549188U,	// VQRDMLSHslv4i32
    18680260U,	// VQRDMLSHslv8i16
    18512324U,	// VQRDMLSHv2i32
    18643396U,	// VQRDMLSHv4i16
    18512324U,	// VQRDMLSHv4i32
    18643396U,	// VQRDMLSHv8i16
    35289521U,	// VQRDMULHslv2i32
    35420593U,	// VQRDMULHslv4i16
    35289521U,	// VQRDMULHslv4i32
    35420593U,	// VQRDMULHslv8i16
    35285425U,	// VQRDMULHv2i32
    35416497U,	// VQRDMULHv4i16
    35285425U,	// VQRDMULHv4i32
    35416497U,	// VQRDMULHv8i16
    35547781U,	// VQRSHLsv16i8
    40135301U,	// VQRSHLsv1i64
    35285637U,	// VQRSHLsv2i32
    40135301U,	// VQRSHLsv2i64
    35416709U,	// VQRSHLsv4i16
    35285637U,	// VQRSHLsv4i32
    35416709U,	// VQRSHLsv8i16
    35547781U,	// VQRSHLsv8i8
    35940997U,	// VQRSHLuv16i8
    40266373U,	// VQRSHLuv1i64
    35678853U,	// VQRSHLuv2i32
    40266373U,	// VQRSHLuv2i64
    35809925U,	// VQRSHLuv4i16
    35678853U,	// VQRSHLuv4i32
    35809925U,	// VQRSHLuv8i16
    35940997U,	// VQRSHLuv8i8
    40135475U,	// VQRSHRNsv2i32
    35285811U,	// VQRSHRNsv4i16
    35416883U,	// VQRSHRNsv8i8
    40266547U,	// VQRSHRNuv2i32
    35679027U,	// VQRSHRNuv4i16
    35810099U,	// VQRSHRNuv8i8
    40135514U,	// VQRSHRUNv2i32
    35285850U,	// VQRSHRUNv4i16
    35416922U,	// VQRSHRUNv8i8
    35547775U,	// VQSHLsiv16i8
    40135295U,	// VQSHLsiv1i64
    35285631U,	// VQSHLsiv2i32
    40135295U,	// VQSHLsiv2i64
    35416703U,	// VQSHLsiv4i16
    35285631U,	// VQSHLsiv4i32
    35416703U,	// VQSHLsiv8i16
    35547775U,	// VQSHLsiv8i8
    35548466U,	// VQSHLsuv16i8
    40135986U,	// VQSHLsuv1i64
    35286322U,	// VQSHLsuv2i32
    40135986U,	// VQSHLsuv2i64
    35417394U,	// VQSHLsuv4i16
    35286322U,	// VQSHLsuv4i32
    35417394U,	// VQSHLsuv8i16
    35548466U,	// VQSHLsuv8i8
    35547775U,	// VQSHLsv16i8
    40135295U,	// VQSHLsv1i64
    35285631U,	// VQSHLsv2i32
    40135295U,	// VQSHLsv2i64
    35416703U,	// VQSHLsv4i16
    35285631U,	// VQSHLsv4i32
    35416703U,	// VQSHLsv8i16
    35547775U,	// VQSHLsv8i8
    35940991U,	// VQSHLuiv16i8
    40266367U,	// VQSHLuiv1i64
    35678847U,	// VQSHLuiv2i32
    40266367U,	// VQSHLuiv2i64
    35809919U,	// VQSHLuiv4i16
    35678847U,	// VQSHLuiv4i32
    35809919U,	// VQSHLuiv8i16
    35940991U,	// VQSHLuiv8i8
    35940991U,	// VQSHLuv16i8
    40266367U,	// VQSHLuv1i64
    35678847U,	// VQSHLuv2i32
    40266367U,	// VQSHLuv2i64
    35809919U,	// VQSHLuv4i16
    35678847U,	// VQSHLuv4i32
    35809919U,	// VQSHLuv8i16
    35940991U,	// VQSHLuv8i8
    40135468U,	// VQSHRNsv2i32
    35285804U,	// VQSHRNsv4i16
    35416876U,	// VQSHRNsv8i8
    40266540U,	// VQSHRNuv2i32
    35679020U,	// VQSHRNuv4i16
    35810092U,	// VQSHRNuv8i8
    40135506U,	// VQSHRUNv2i32
    35285842U,	// VQSHRUNv4i16
    35416914U,	// VQSHRUNv8i8
    35547241U,	// VQSUBsv16i8
    40134761U,	// VQSUBsv1i64
    35285097U,	// VQSUBsv2i32
    40134761U,	// VQSUBsv2i64
    35416169U,	// VQSUBsv4i16
    35285097U,	// VQSUBsv4i32
    35416169U,	// VQSUBsv8i16
    35547241U,	// VQSUBsv8i8
    35940457U,	// VQSUBuv16i8
    40265833U,	// VQSUBuv1i64
    35678313U,	// VQSUBuv2i32
    40265833U,	// VQSUBuv2i64
    35809385U,	// VQSUBuv4i16
    35678313U,	// VQSUBuv4i32
    35809385U,	// VQSUBuv8i16
    35940457U,	// VQSUBuv8i8
    36072206U,	// VRADDHNv2i32
    36203278U,	// VRADDHNv4i16
    36334350U,	// VRADDHNv8i8
    1109412186U,	// VRECPEd
    2249214298U,	// VRECPEfd
    2249214298U,	// VRECPEfq
    2249083226U,	// VRECPEhd
    2249083226U,	// VRECPEhq
    1109412186U,	// VRECPEq
    2249223235U,	// VRECPSfd
    2249223235U,	// VRECPSfq
    2249092163U,	// VRECPShd
    2249092163U,	// VRECPShq
    3032797U,	// VREV16d8
    3032797U,	// VREV16q8
    4998664U,	// VREV32d16
    3032584U,	// VREV32d8
    4998664U,	// VREV32q16
    3032584U,	// VREV32q8
    4998740U,	// VREV64d16
    5129812U,	// VREV64d32
    3032660U,	// VREV64d8
    4998740U,	// VREV64q16
    5129812U,	// VREV64q32
    3032660U,	// VREV64q8
    35547363U,	// VRHADDsv16i8
    35285219U,	// VRHADDsv2i32
    35416291U,	// VRHADDsv4i16
    35285219U,	// VRHADDsv4i32
    35416291U,	// VRHADDsv8i16
    35547363U,	// VRHADDsv8i8
    35940579U,	// VRHADDuv16i8
    35678435U,	// VRHADDuv2i32
    35809507U,	// VRHADDuv4i16
    35678435U,	// VRHADDuv4i32
    35809507U,	// VRHADDuv8i16
    35940579U,	// VRHADDuv8i8
    1107448354U,	// VRINTAD
    1107448725U,	// VRINTAH
    1107448046U,	// VRINTANDf
    1107448725U,	// VRINTANDh
    1107448046U,	// VRINTANQf
    1107448725U,	// VRINTANQh
    1107448046U,	// VRINTAS
    1107448402U,	// VRINTMD
    1107448773U,	// VRINTMH
    1107448094U,	// VRINTMNDf
    1107448773U,	// VRINTMNDh
    1107448094U,	// VRINTMNQf
    1107448773U,	// VRINTMNQh
    1107448094U,	// VRINTMS
    1107448414U,	// VRINTND
    1107448785U,	// VRINTNH
    1107448106U,	// VRINTNNDf
    1107448785U,	// VRINTNNDh
    1107448106U,	// VRINTNNQf
    1107448785U,	// VRINTNNQh
    1107448106U,	// VRINTNS
    1107448426U,	// VRINTPD
    1107448797U,	// VRINTPH
    1107448118U,	// VRINTPNDf
    1107448797U,	// VRINTPNDh
    1107448118U,	// VRINTPNQf
    1107448797U,	// VRINTPNQh
    1107448118U,	// VRINTPS
    2248952821U,	// VRINTRD
    2249083893U,	// VRINTRH
    2249214965U,	// VRINTRS
    2248953387U,	// VRINTXD
    2249084459U,	// VRINTXH
    1107448166U,	// VRINTXNDf
    1107448855U,	// VRINTXNDh
    1107448166U,	// VRINTXNQf
    1107448855U,	// VRINTXNQh
    2249215531U,	// VRINTXS
    2248953399U,	// VRINTZD
    2249084471U,	// VRINTZH
    1107448178U,	// VRINTZNDf
    1107448878U,	// VRINTZNDh
    1107448178U,	// VRINTZNQf
    1107448878U,	// VRINTZNQh
    2249215543U,	// VRINTZS
    35547788U,	// VRSHLsv16i8
    40135308U,	// VRSHLsv1i64
    35285644U,	// VRSHLsv2i32
    40135308U,	// VRSHLsv2i64
    35416716U,	// VRSHLsv4i16
    35285644U,	// VRSHLsv4i32
    35416716U,	// VRSHLsv8i16
    35547788U,	// VRSHLsv8i8
    35941004U,	// VRSHLuv16i8
    40266380U,	// VRSHLuv1i64
    35678860U,	// VRSHLuv2i32
    40266380U,	// VRSHLuv2i64
    35809932U,	// VRSHLuv4i16
    35678860U,	// VRSHLuv4i32
    35809932U,	// VRSHLuv8i16
    35941004U,	// VRSHLuv8i8
    36072251U,	// VRSHRNv2i32
    36203323U,	// VRSHRNv4i16
    36334395U,	// VRSHRNv8i8
    35548096U,	// VRSHRsv16i8
    40135616U,	// VRSHRsv1i64
    35285952U,	// VRSHRsv2i32
    40135616U,	// VRSHRsv2i64
    35417024U,	// VRSHRsv4i16
    35285952U,	// VRSHRsv4i32
    35417024U,	// VRSHRsv8i16
    35548096U,	// VRSHRsv8i8
    35941312U,	// VRSHRuv16i8
    40266688U,	// VRSHRuv1i64
    35679168U,	// VRSHRuv2i32
    40266688U,	// VRSHRuv2i64
    35810240U,	// VRSHRuv4i16
    35679168U,	// VRSHRuv4i32
    35810240U,	// VRSHRuv8i16
    35941312U,	// VRSHRuv8i8
    1109412199U,	// VRSQRTEd
    2249214311U,	// VRSQRTEfd
    2249214311U,	// VRSQRTEfq
    2249083239U,	// VRSQRTEhd
    2249083239U,	// VRSQRTEhq
    1109412199U,	// VRSQRTEq
    2249223257U,	// VRSQRTSfd
    2249223257U,	// VRSQRTSfq
    2249092185U,	// VRSQRTShd
    2249092185U,	// VRSQRTShq
    18773931U,	// VRSRAsv16i8
    23361451U,	// VRSRAsv1i64
    18511787U,	// VRSRAsv2i32
    23361451U,	// VRSRAsv2i64
    18642859U,	// VRSRAsv4i16
    18511787U,	// VRSRAsv4i32
    18642859U,	// VRSRAsv8i16
    18773931U,	// VRSRAsv8i8
    19167147U,	// VRSRAuv16i8
    23492523U,	// VRSRAuv1i64
    18905003U,	// VRSRAuv2i32
    23492523U,	// VRSRAuv2i64
    19036075U,	// VRSRAuv4i16
    18905003U,	// VRSRAuv4i32
    19036075U,	// VRSRAuv8i16
    19167147U,	// VRSRAuv8i8
    36072191U,	// VRSUBHNv2i32
    36203263U,	// VRSUBHNv4i16
    36334335U,	// VRSUBHNv8i8
    33706614U,	// VSELEQD
    33706985U,	// VSELEQH
    33706306U,	// VSELEQS
    33706542U,	// VSELGED
    33706913U,	// VSELGEH
    33706234U,	// VSELGES
    33706638U,	// VSELGTD
    33707019U,	// VSELGTH
    33706330U,	// VSELGTS
    33706626U,	// VSELVSD
    33707007U,	// VSELVSH
    33706318U,	// VSELVSS
    3226238284U,	// VSETLNi16
    3226369356U,	// VSETLNi32
    3224272204U,	// VSETLNi8
    36334245U,	// VSHLLi16
    36203173U,	// VSHLLi32
    36465317U,	// VSHLLi8
    35285669U,	// VSHLLsv2i64
    35416741U,	// VSHLLsv4i32
    35547813U,	// VSHLLsv8i16
    35678885U,	// VSHLLuv2i64
    35809957U,	// VSHLLuv4i32
    35941029U,	// VSHLLuv8i16
    36465298U,	// VSHLiv16i8
    36072082U,	// VSHLiv1i64
    36203154U,	// VSHLiv2i32
    36072082U,	// VSHLiv2i64
    36334226U,	// VSHLiv4i16
    36203154U,	// VSHLiv4i32
    36334226U,	// VSHLiv8i16
    36465298U,	// VSHLiv8i8
    35547794U,	// VSHLsv16i8
    40135314U,	// VSHLsv1i64
    35285650U,	// VSHLsv2i32
    40135314U,	// VSHLsv2i64
    35416722U,	// VSHLsv4i16
    35285650U,	// VSHLsv4i32
    35416722U,	// VSHLsv8i16
    35547794U,	// VSHLsv8i8
    35941010U,	// VSHLuv16i8
    40266386U,	// VSHLuv1i64
    35678866U,	// VSHLuv2i32
    40266386U,	// VSHLuv2i64
    35809938U,	// VSHLuv4i16
    35678866U,	// VSHLuv4i32
    35809938U,	// VSHLuv8i16
    35941010U,	// VSHLuv8i8
    36072258U,	// VSHRNv2i32
    36203330U,	// VSHRNv4i16
    36334402U,	// VSHRNv8i8
    35548102U,	// VSHRsv16i8
    40135622U,	// VSHRsv1i64
    35285958U,	// VSHRsv2i32
    40135622U,	// VSHRsv2i64
    35417030U,	// VSHRsv4i16
    35285958U,	// VSHRsv4i32
    35417030U,	// VSHRsv8i16
    35548102U,	// VSHRsv8i8
    35941318U,	// VSHRuv16i8
    40266694U,	// VSHRuv1i64
    35679174U,	// VSHRuv2i32
    40266694U,	// VSHRuv2i64
    35810246U,	// VSHRuv4i16
    35679174U,	// VSHRuv4i32
    35810246U,	// VSHRuv8i16
    35941318U,	// VSHRuv8i8
    6843669U,	// VSHTOD
    105278741U,	// VSHTOH
    6974741U,	// VSHTOS
    309087509U,	// VSITOD
    309218581U,	// VSITOH
    306466069U,	// VSITOS
    3045900U,	// VSLIv16i8
    5274124U,	// VSLIv1i64
    5143052U,	// VSLIv2i32
    5274124U,	// VSLIv2i64
    5011980U,	// VSLIv4i16
    5143052U,	// VSLIv4i32
    5011980U,	// VSLIv8i16
    3045900U,	// VSLIv8i8
    1181510933U,	// VSLTOD
    1181642005U,	// VSLTOH
    1178889493U,	// VSLTOS
    2248953061U,	// VSQRTD
    2249084133U,	// VSQRTH
    2249215205U,	// VSQRTS
    18773937U,	// VSRAsv16i8
    23361457U,	// VSRAsv1i64
    18511793U,	// VSRAsv2i32
    23361457U,	// VSRAsv2i64
    18642865U,	// VSRAsv4i16
    18511793U,	// VSRAsv4i32
    18642865U,	// VSRAsv8i16
    18773937U,	// VSRAsv8i8
    19167153U,	// VSRAuv16i8
    23492529U,	// VSRAuv1i64
    18905009U,	// VSRAuv2i32
    23492529U,	// VSRAuv2i64
    19036081U,	// VSRAuv4i16
    18905009U,	// VSRAuv4i32
    19036081U,	// VSRAuv8i16
    19167153U,	// VSRAuv8i8
    3045905U,	// VSRIv16i8
    5274129U,	// VSRIv1i64
    5143057U,	// VSRIv2i32
    5274129U,	// VSRIv2i64
    5011985U,	// VSRIv4i16
    5143057U,	// VSRIv4i32
    5011985U,	// VSRIv8i16
    3045905U,	// VSRIv8i8
    22181379U,	// VST1LNd16
    559064579U,	// VST1LNd16_UPD
    22312451U,	// VST1LNd32
    559195651U,	// VST1LNd32_UPD
    22443523U,	// VST1LNd8
    559326723U,	// VST1LNd8_UPD
    5010947U,	// VST1LNdAsm_16
    5142019U,	// VST1LNdAsm_32
    3044867U,	// VST1LNdAsm_8
    5010947U,	// VST1LNdWB_fixed_Asm_16
    5142019U,	// VST1LNdWB_fixed_Asm_32
    3044867U,	// VST1LNdWB_fixed_Asm_8
    5047811U,	// VST1LNdWB_register_Asm_16
    5178883U,	// VST1LNdWB_register_Asm_32
    3081731U,	// VST1LNdWB_register_Asm_8
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    575432195U,	// VST1d16
    592209411U,	// VST1d16Q
    608990723U,	// VST1d16Qwb_fixed
    625804803U,	// VST1d16Qwb_register
    642541059U,	// VST1d16T
    659322371U,	// VST1d16Twb_fixed
    676136451U,	// VST1d16Twb_register
    692876803U,	// VST1d16wb_fixed
    709690883U,	// VST1d16wb_register
    575563267U,	// VST1d32
    592340483U,	// VST1d32Q
    609121795U,	// VST1d32Qwb_fixed
    625935875U,	// VST1d32Qwb_register
    642672131U,	// VST1d32T
    659453443U,	// VST1d32Twb_fixed
    676267523U,	// VST1d32Twb_register
    693007875U,	// VST1d32wb_fixed
    709821955U,	// VST1d32wb_register
    575694339U,	// VST1d64
    592471555U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    609252867U,	// VST1d64Qwb_fixed
    626066947U,	// VST1d64Qwb_register
    642803203U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    659584515U,	// VST1d64Twb_fixed
    676398595U,	// VST1d64Twb_register
    693138947U,	// VST1d64wb_fixed
    709953027U,	// VST1d64wb_register
    573466115U,	// VST1d8
    590243331U,	// VST1d8Q
    607024643U,	// VST1d8Qwb_fixed
    623838723U,	// VST1d8Qwb_register
    640574979U,	// VST1d8T
    657356291U,	// VST1d8Twb_fixed
    674170371U,	// VST1d8Twb_register
    690910723U,	// VST1d8wb_fixed
    707724803U,	// VST1d8wb_register
    726427139U,	// VST1q16
    743208451U,	// VST1q16wb_fixed
    760022531U,	// VST1q16wb_register
    726558211U,	// VST1q32
    743339523U,	// VST1q32wb_fixed
    760153603U,	// VST1q32wb_register
    726689283U,	// VST1q64
    743470595U,	// VST1q64wb_fixed
    760284675U,	// VST1q64wb_register
    724461059U,	// VST1q8
    741242371U,	// VST1q8wb_fixed
    758056451U,	// VST1q8wb_register
    22218303U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    559121983U,	// VST2LNd16_UPD
    22349375U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    559253055U,	// VST2LNd32_UPD
    22480447U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    559384127U,	// VST2LNd8_UPD
    5011007U,	// VST2LNdAsm_16
    5142079U,	// VST2LNdAsm_32
    3044927U,	// VST2LNdAsm_8
    5011007U,	// VST2LNdWB_fixed_Asm_16
    5142079U,	// VST2LNdWB_fixed_Asm_32
    3044927U,	// VST2LNdWB_fixed_Asm_8
    5047871U,	// VST2LNdWB_register_Asm_16
    5178943U,	// VST2LNdWB_register_Asm_32
    3081791U,	// VST2LNdWB_register_Asm_8
    22218303U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    559121983U,	// VST2LNq16_UPD
    22349375U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    559253055U,	// VST2LNq32_UPD
    5011007U,	// VST2LNqAsm_16
    5142079U,	// VST2LNqAsm_32
    5011007U,	// VST2LNqWB_fixed_Asm_16
    5142079U,	// VST2LNqWB_fixed_Asm_32
    5047871U,	// VST2LNqWB_register_Asm_16
    5178943U,	// VST2LNqWB_register_Asm_32
    776758847U,	// VST2b16
    793540159U,	// VST2b16wb_fixed
    810354239U,	// VST2b16wb_register
    776889919U,	// VST2b32
    793671231U,	// VST2b32wb_fixed
    810485311U,	// VST2b32wb_register
    774792767U,	// VST2b8
    791574079U,	// VST2b8wb_fixed
    808388159U,	// VST2b8wb_register
    726427199U,	// VST2d16
    743208511U,	// VST2d16wb_fixed
    760022591U,	// VST2d16wb_register
    726558271U,	// VST2d32
    743339583U,	// VST2d32wb_fixed
    760153663U,	// VST2d32wb_register
    724461119U,	// VST2d8
    741242431U,	// VST2d8wb_fixed
    758056511U,	// VST2d8wb_register
    592209471U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    608990783U,	// VST2q16wb_fixed
    625804863U,	// VST2q16wb_register
    592340543U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    609121855U,	// VST2q32wb_fixed
    625935935U,	// VST2q32wb_register
    590243391U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    607024703U,	// VST2q8wb_fixed
    623838783U,	// VST2q8wb_register
    22193743U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    559134287U,	// VST3LNd16_UPD
    22324815U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    559265359U,	// VST3LNd32_UPD
    22455887U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    559396431U,	// VST3LNd8_UPD
    5011023U,	// VST3LNdAsm_16
    5142095U,	// VST3LNdAsm_32
    3044943U,	// VST3LNdAsm_8
    5011023U,	// VST3LNdWB_fixed_Asm_16
    5142095U,	// VST3LNdWB_fixed_Asm_32
    3044943U,	// VST3LNdWB_fixed_Asm_8
    5047887U,	// VST3LNdWB_register_Asm_16
    5178959U,	// VST3LNdWB_register_Asm_32
    3081807U,	// VST3LNdWB_register_Asm_8
    22193743U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    559134287U,	// VST3LNq16_UPD
    22324815U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    559265359U,	// VST3LNq32_UPD
    5011023U,	// VST3LNqAsm_16
    5142095U,	// VST3LNqAsm_32
    5011023U,	// VST3LNqWB_fixed_Asm_16
    5142095U,	// VST3LNqWB_fixed_Asm_32
    5047887U,	// VST3LNqWB_register_Asm_16
    5178959U,	// VST3LNqWB_register_Asm_32
    22218319U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    559121999U,	// VST3d16_UPD
    22349391U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    559253071U,	// VST3d32_UPD
    22480463U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    559384143U,	// VST3d8_UPD
    2538366543U,	// VST3dAsm_16
    2538497615U,	// VST3dAsm_32
    2536400463U,	// VST3dAsm_8
    2538366543U,	// VST3dWB_fixed_Asm_16
    2538497615U,	// VST3dWB_fixed_Asm_32
    2536400463U,	// VST3dWB_fixed_Asm_8
    2538370639U,	// VST3dWB_register_Asm_16
    2538501711U,	// VST3dWB_register_Asm_32
    2536404559U,	// VST3dWB_register_Asm_8
    22218319U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    559121999U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    22349391U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    559253071U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    22480463U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    559384143U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    1565288015U,	// VST3qAsm_16
    1565419087U,	// VST3qAsm_32
    1563321935U,	// VST3qAsm_8
    2639029839U,	// VST3qWB_fixed_Asm_16
    2639160911U,	// VST3qWB_fixed_Asm_32
    2637063759U,	// VST3qWB_fixed_Asm_8
    491550287U,	// VST3qWB_register_Asm_16
    491681359U,	// VST3qWB_register_Asm_32
    489584207U,	// VST3qWB_register_Asm_8
    22251104U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    559126112U,	// VST4LNd16_UPD
    22382176U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    559257184U,	// VST4LNd32_UPD
    22513248U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    559388256U,	// VST4LNd8_UPD
    5011040U,	// VST4LNdAsm_16
    5142112U,	// VST4LNdAsm_32
    3044960U,	// VST4LNdAsm_8
    5011040U,	// VST4LNdWB_fixed_Asm_16
    5142112U,	// VST4LNdWB_fixed_Asm_32
    3044960U,	// VST4LNdWB_fixed_Asm_8
    5047904U,	// VST4LNdWB_register_Asm_16
    5178976U,	// VST4LNdWB_register_Asm_32
    3081824U,	// VST4LNdWB_register_Asm_8
    22251104U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    559126112U,	// VST4LNq16_UPD
    22382176U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    559257184U,	// VST4LNq32_UPD
    5011040U,	// VST4LNqAsm_16
    5142112U,	// VST4LNqAsm_32
    5011040U,	// VST4LNqWB_fixed_Asm_16
    5142112U,	// VST4LNqWB_fixed_Asm_32
    5047904U,	// VST4LNqWB_register_Asm_16
    5178976U,	// VST4LNqWB_register_Asm_32
    22193760U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    559134304U,	// VST4d16_UPD
    22324832U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    559265376U,	// VST4d32_UPD
    22455904U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    559396448U,	// VST4d8_UPD
    2521589344U,	// VST4dAsm_16
    2521720416U,	// VST4dAsm_32
    2519623264U,	// VST4dAsm_8
    2521589344U,	// VST4dWB_fixed_Asm_16
    2521720416U,	// VST4dWB_fixed_Asm_32
    2519623264U,	// VST4dWB_fixed_Asm_8
    2521593440U,	// VST4dWB_register_Asm_16
    2521724512U,	// VST4dWB_register_Asm_32
    2519627360U,	// VST4dWB_register_Asm_8
    22193760U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    559134304U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    22324832U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    559265376U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    22455904U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    559396448U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    1615619680U,	// VST4qAsm_16
    1615750752U,	// VST4qAsm_32
    1613653600U,	// VST4qAsm_8
    2689361504U,	// VST4qWB_fixed_Asm_16
    2689492576U,	// VST4qWB_fixed_Asm_32
    2687395424U,	// VST4qWB_fixed_Asm_8
    541881952U,	// VST4qWB_register_Asm_16
    542013024U,	// VST4qWB_register_Asm_32
    539915872U,	// VST4qWB_register_Asm_8
    33572850U,	// VSTMDDB_UPD
    34690U,	// VSTMDIA
    33572738U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    33572850U,	// VSTMSDB_UPD
    34690U,	// VSTMSIA
    33572738U,	// VSTMSIA_UPD
    27644U,	// VSTRD
    5008380U,	// VSTRH
    27644U,	// VSTRS
    2248960111U,	// VSUBD
    2249091183U,	// VSUBH
    36072199U,	// VSUBHNv2i32
    36203271U,	// VSUBHNv4i16
    36334343U,	// VSUBHNv8i8
    35285592U,	// VSUBLsv2i64
    35416664U,	// VSUBLsv4i32
    35547736U,	// VSUBLsv8i16
    35678808U,	// VSUBLuv2i64
    35809880U,	// VSUBLuv4i32
    35940952U,	// VSUBLuv8i16
    2249222255U,	// VSUBS
    35286353U,	// VSUBWsv2i64
    35417425U,	// VSUBWsv4i32
    35548497U,	// VSUBWsv8i16
    35679569U,	// VSUBWuv2i64
    35810641U,	// VSUBWuv4i32
    35941713U,	// VSUBWuv8i16
    2249222255U,	// VSUBfd
    2249222255U,	// VSUBfq
    2249091183U,	// VSUBhd
    2249091183U,	// VSUBhq
    36464751U,	// VSUBv16i8
    36071535U,	// VSUBv1i64
    36202607U,	// VSUBv2i32
    36071535U,	// VSUBv2i64
    36333679U,	// VSUBv4i16
    36202607U,	// VSUBv4i32
    36333679U,	// VSUBv8i16
    36464751U,	// VSUBv8i8
    31641U,	// VSWPd
    31641U,	// VSWPq
    3041875U,	// VTBL1
    3041875U,	// VTBL2
    3041875U,	// VTBL3
    0U,	// VTBL3Pseudo
    3041875U,	// VTBL4
    0U,	// VTBL4Pseudo
    3046830U,	// VTBX1
    3046830U,	// VTBX2
    3046830U,	// VTBX3
    0U,	// VTBX3Pseudo
    3046830U,	// VTBX4
    0U,	// VTBX4Pseudo
    7367957U,	// VTOSHD
    104885525U,	// VTOSHH
    7499029U,	// VTOSHS
    309611521U,	// VTOSIRD
    309742593U,	// VTOSIRH
    305941505U,	// VTOSIRS
    309611797U,	// VTOSIZD
    309742869U,	// VTOSIZH
    305941781U,	// VTOSIZS
    1182035221U,	// VTOSLD
    1182166293U,	// VTOSLH
    1178365205U,	// VTOSLS
    7892245U,	// VTOUHD
    105016597U,	// VTOUHH
    8023317U,	// VTOUHS
    310135809U,	// VTOUIRD
    310266881U,	// VTOUIRH
    306072577U,	// VTOUIRS
    310136085U,	// VTOUIZD
    310267157U,	// VTOUIZH
    306072853U,	// VTOUIZS
    1182559509U,	// VTOULD
    1182690581U,	// VTOULH
    1178496277U,	// VTOULS
    5012301U,	// VTRNd16
    5143373U,	// VTRNd32
    3046221U,	// VTRNd8
    5012301U,	// VTRNq16
    5143373U,	// VTRNq32
    3046221U,	// VTRNq8
    3042544U,	// VTSTv16i8
    5139696U,	// VTSTv2i32
    5008624U,	// VTSTv4i16
    5139696U,	// VTSTv4i32
    5008624U,	// VTSTv8i16
    3042544U,	// VTSTv8i8
    8416533U,	// VUHTOD
    105540885U,	// VUHTOH
    8547605U,	// VUHTOS
    310660373U,	// VUITOD
    310791445U,	// VUITOH
    306728213U,	// VUITOS
    1183083797U,	// VULTOD
    1183214869U,	// VULTOH
    1179151637U,	// VULTOS
    5012382U,	// VUZPd16
    3046302U,	// VUZPd8
    5012382U,	// VUZPq16
    5143454U,	// VUZPq32
    3046302U,	// VUZPq8
    5012358U,	// VZIPd16
    3046278U,	// VZIPd8
    5012358U,	// VZIPq16
    5143430U,	// VZIPq32
    3046278U,	// VZIPq8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    34665U,	// sysLDMDA
    33572713U,	// sysLDMDA_UPD
    34796U,	// sysLDMDB
    33572844U,	// sysLDMDB_UPD
    35573U,	// sysLDMIA
    33573621U,	// sysLDMIA_UPD
    34815U,	// sysLDMIB
    33572863U,	// sysLDMIB_UPD
    34671U,	// sysSTMDA
    33572719U,	// sysSTMDA_UPD
    34803U,	// sysSTMDB
    33572851U,	// sysSTMDB_UPD
    35579U,	// sysSTMIA
    33573627U,	// sysSTMIA_UPD
    34821U,	// sysSTMIB
    33572869U,	// sysSTMIB_UPD
    0U,	// t2ABS
    6306U,	// t2ADCri
    8919202U,	// t2ADCrr
    8923298U,	// t2ADCrs
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    8919263U,	// t2ADDri
    27992U,	// t2ADDri12
    8919263U,	// t2ADDrr
    8923359U,	// t2ADDrs
    8932279U,	// t2ADR
    6420U,	// t2ANDri
    8919316U,	// t2ANDrr
    8923412U,	// t2ANDrs
    8920037U,	// t2ASRri
    8920037U,	// t2ASRrr
    1082689469U,	// t2B
    26794U,	// t2BFC
    31236U,	// t2BFI
    6319U,	// t2BICri
    8919215U,	// t2BICrr
    8923311U,	// t2BICrs
    0U,	// t2BR_JT
    1073777174U,	// t2BXJ
    1082689469U,	// t2Bcc
    2197859202U,	// t2CDP
    2197857833U,	// t2CDP2
    433649U,	// t2CLREX
    20019U,	// t2CLZ
    8932136U,	// t2CMNri
    8932136U,	// t2CMNzrr
    8940328U,	// t2CMNzrs
    8932236U,	// t2CMPri
    8932236U,	// t2CMPrr
    8940428U,	// t2CMPrs
    414944U,	// t2CPS1p
    1166593094U,	// t2CPS2p
    83938374U,	// t2CPS3p
    33707115U,	// t2CRC32B
    33707123U,	// t2CRC32CB
    33707192U,	// t2CRC32CH
    33707276U,	// t2CRC32CW
    33707184U,	// t2CRC32H
    33707268U,	// t2CRC32W
    1073777012U,	// t2DBG
    431613U,	// t2DCPS1
    431673U,	// t2DCPS2
    431689U,	// t2DCPS3
    822118416U,	// t2DMB
    822118435U,	// t2DSB
    7123U,	// t2EORri
    8920019U,	// t2EORrr
    8924115U,	// t2EORrs
    1082690779U,	// t2HINT
    414966U,	// t2HVC
    838895655U,	// t2ISB
    117505225U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    18277U,	// t2LDA
    18362U,	// t2LDAB
    19935U,	// t2LDAEX
    18562U,	// t2LDAEXB
    26926U,	// t2LDAEXD
    18920U,	// t2LDAEXH
    18822U,	// t2LDAH
    3271588378U,	// t2LDC2L_OFFSET
    3271588378U,	// t2LDC2L_OPTION
    3271588378U,	// t2LDC2L_POST
    3271588378U,	// t2LDC2L_PRE
    3271587343U,	// t2LDC2_OFFSET
    3271587343U,	// t2LDC2_OPTION
    3271587343U,	// t2LDC2_POST
    3271587343U,	// t2LDC2_PRE
    3271588446U,	// t2LDCL_OFFSET
    3271588446U,	// t2LDCL_OPTION
    3271588446U,	// t2LDCL_POST
    3271588446U,	// t2LDCL_PRE
    3271588006U,	// t2LDC_OFFSET
    3271588006U,	// t2LDC_OPTION
    3271588006U,	// t2LDC_POST
    3271588006U,	// t2LDC_PRE
    34796U,	// t2LDMDB
    33572844U,	// t2LDMDB_UPD
    8948469U,	// t2LDMIA
    0U,	// t2LDMIA_RET
    42486517U,	// t2LDMIA_UPD
    27793U,	// t2LDRBT
    30745U,	// t2LDRB_POST
    30745U,	// t2LDRB_PRE
    8939545U,	// t2LDRBi12
    26649U,	// t2LDRBi8
    8931353U,	// t2LDRBpci
    280601U,	// t2LDRBpcrel
    8943641U,	// t2LDRBs
    281532U,	// t2LDRConstPool
    67864U,	// t2LDRD_POST
    67864U,	// t2LDRD_PRE
    31000U,	// t2LDRDi8
    28139U,	// t2LDREX
    18576U,	// t2LDREXB
    26940U,	// t2LDREXD
    18934U,	// t2LDREXH
    27828U,	// t2LDRHT
    31162U,	// t2LDRH_POST
    31162U,	// t2LDRH_PRE
    8939962U,	// t2LDRHi12
    27066U,	// t2LDRHi8
    8931770U,	// t2LDRHpci
    281018U,	// t2LDRHpcrel
    8944058U,	// t2LDRHs
    27805U,	// t2LDRSBT
    30763U,	// t2LDRSB_POST
    30763U,	// t2LDRSB_PRE
    8939563U,	// t2LDRSBi12
    26667U,	// t2LDRSBi8
    8931371U,	// t2LDRSBpci
    280619U,	// t2LDRSBpcrel
    8943659U,	// t2LDRSBs
    27840U,	// t2LDRSHT
    31181U,	// t2LDRSH_POST
    31181U,	// t2LDRSH_PRE
    8939981U,	// t2LDRSHi12
    27085U,	// t2LDRSHi8
    8931789U,	// t2LDRSHpci
    281037U,	// t2LDRSHpcrel
    8944077U,	// t2LDRSHs
    27872U,	// t2LDRT
    31676U,	// t2LDR_POST
    31676U,	// t2LDR_PRE
    8940476U,	// t2LDRi12
    27580U,	// t2LDRi8
    8932284U,	// t2LDRpci
    0U,	// t2LDRpci_pic
    281532U,	// t2LDRpcrel
    8944572U,	// t2LDRs
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    8919758U,	// t2LSLri
    8919758U,	// t2LSLrr
    8920044U,	// t2LSRri
    8920044U,	// t2LSRrr
    2197859251U,	// t2MCR
    2197857838U,	// t2MCR2
    2197883867U,	// t2MCRR
    2197882419U,	// t2MCRR2
    30609U,	// t2MLA
    31774U,	// t2MLS
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    289889U,	// t2MOVSsi
    293985U,	// t2MOVSsr
    27930U,	// t2MOVTi16
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    8985933U,	// t2MOVi
    19810U,	// t2MOVi16
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    8985933U,	// t2MOVr
    290125U,	// t2MOVsi
    294221U,	// t2MOVsr
    8932431U,	// t2MOVsra_flag
    8932436U,	// t2MOVsrl_flag
    201369783U,	// t2MRC
    201369108U,	// t2MRC2
    218171579U,	// t2MRRC
    218170905U,	// t2MRRC2
    35915U,	// t2MRS_AR
    19531U,	// t2MRS_M
    19531U,	// t2MRSbanked
    1073777739U,	// t2MRSsys_AR
    2382384113U,	// t2MSR_AR
    2382384113U,	// t2MSR_M
    251677681U,	// t2MSRbanked
    27358U,	// t2MUL
    0U,	// t2MVNCCi
    72556U,	// t2MVNi
    8985452U,	// t2MVNr
    8919916U,	// t2MVNs
    6985U,	// t2ORNri
    6985U,	// t2ORNrr
    11081U,	// t2ORNrs
    7137U,	// t2ORRri
    8920033U,	// t2ORRrr
    8924129U,	// t2ORRrs
    31868U,	// t2PKHBT
    30776U,	// t2PKHTB
    855657821U,	// t2PLDWi12
    872435037U,	// t2PLDWi8
    889220445U,	// t2PLDWs
    855656712U,	// t2PLDi12
    872433928U,	// t2PLDi8
    906004744U,	// t2PLDpci
    889219336U,	// t2PLDs
    855656968U,	// t2PLIi12
    872434184U,	// t2PLIi8
    906005000U,	// t2PLIpci
    889219592U,	// t2PLIs
    26871U,	// t2QADD
    26298U,	// t2QADD16
    26401U,	// t2QADD8
    28188U,	// t2QASX
    26845U,	// t2QDADD
    26717U,	// t2QDSUB
    28047U,	// t2QSAX
    26730U,	// t2QSUB
    26260U,	// t2QSUB16
    26362U,	// t2QSUB8
    19655U,	// t2RBIT
    8932665U,	// t2REV
    8931038U,	// t2REV16
    8931800U,	// t2REVSH
    1073776613U,	// t2RFEDB
    2147518437U,	// t2RFEDBW
    1073776501U,	// t2RFEIA
    2147518325U,	// t2RFEIAW
    8920023U,	// t2RORri
    8920023U,	// t2RORrr
    73227U,	// t2RRX
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    8919085U,	// t2RSBri
    6189U,	// t2RSBrr
    10285U,	// t2RSBrs
    26305U,	// t2SADD16
    26407U,	// t2SADD8
    28193U,	// t2SASX
    6302U,	// t2SBCri
    8919198U,	// t2SBCrr
    8923294U,	// t2SBCrs
    32253U,	// t2SBFX
    27965U,	// t2SDIV
    27259U,	// t2SEL
    414936U,	// t2SETPAN
    432515U,	// t2SG
    26281U,	// t2SHADD16
    26386U,	// t2SHADD8
    28175U,	// t2SHASX
    28034U,	// t2SHSAX
    26243U,	// t2SHSUB16
    26347U,	// t2SHSUB8
    1073776819U,	// t2SMC
    30667U,	// t2SMLABB
    31861U,	// t2SMLABT
    30924U,	// t2SMLAD
    32179U,	// t2SMLADX
    43585U,	// t2SMLAL
    42962U,	// t2SMLALBB
    44162U,	// t2SMLALBT
    30977U,	// t2SMLALD
    32193U,	// t2SMLALDX
    43070U,	// t2SMLALTB
    44284U,	// t2SMLALTT
    30769U,	// t2SMLATB
    31989U,	// t2SMLATT
    30836U,	// t2SMLAWB
    32031U,	// t2SMLAWT
    31010U,	// t2SMLSD
    32209U,	// t2SMLSDX
    30988U,	// t2SMLSLD
    32201U,	// t2SMLSLDX
    30607U,	// t2SMMLA
    31660U,	// t2SMMLAR
    31772U,	// t2SMMLS
    31721U,	// t2SMMLSR
    27356U,	// t2SMMUL
    27595U,	// t2SMMULR
    26834U,	// t2SMUAD
    28090U,	// t2SMUADX
    26586U,	// t2SMULBB
    27786U,	// t2SMULBT
    31411U,	// t2SMULL
    26694U,	// t2SMULTB
    27908U,	// t2SMULTT
    26747U,	// t2SMULWB
    27942U,	// t2SMULWT
    26920U,	// t2SMUSD
    28120U,	// t2SMUSDX
    9078777U,	// t2SRSDB
    9209849U,	// t2SRSDB_UPD
    9078665U,	// t2SRSIA
    9209737U,	// t2SRSIA_UPD
    31846U,	// t2SSAT
    26319U,	// t2SSAT16
    28052U,	// t2SSAX
    26267U,	// t2SSUB16
    26368U,	// t2SSUB8
    3271588384U,	// t2STC2L_OFFSET
    3271588384U,	// t2STC2L_OPTION
    3271588384U,	// t2STC2L_POST
    3271588384U,	// t2STC2L_PRE
    3271587359U,	// t2STC2_OFFSET
    3271587359U,	// t2STC2_OPTION
    3271587359U,	// t2STC2_POST
    3271587359U,	// t2STC2_PRE
    3271588451U,	// t2STCL_OFFSET
    3271588451U,	// t2STCL_OPTION
    3271588451U,	// t2STCL_POST
    3271588451U,	// t2STCL_PRE
    3271588036U,	// t2STC_OFFSET
    3271588036U,	// t2STC_OPTION
    3271588036U,	// t2STC_POST
    3271588036U,	// t2STC_PRE
    19160U,	// t2STL
    18443U,	// t2STLB
    28133U,	// t2STLEX
    26761U,	// t2STLEXB
    31029U,	// t2STLEXD
    27119U,	// t2STLEXH
    18852U,	// t2STLH
    34803U,	// t2STMDB
    33572851U,	// t2STMDB_UPD
    8948475U,	// t2STMIA
    42486523U,	// t2STMIA_UPD
    27799U,	// t2STRBT
    33585182U,	// t2STRB_POST
    33585182U,	// t2STRB_PRE
    0U,	// t2STRB_preidx
    8939550U,	// t2STRBi12
    26654U,	// t2STRBi8
    8943646U,	// t2STRBs
    33622301U,	// t2STRD_POST
    33622301U,	// t2STRD_PRE
    31005U,	// t2STRDi8
    32247U,	// t2STREX
    26775U,	// t2STREXB
    31043U,	// t2STREXD
    27133U,	// t2STREXH
    27834U,	// t2STRHT
    33585599U,	// t2STRH_POST
    33585599U,	// t2STRH_PRE
    0U,	// t2STRH_preidx
    8939967U,	// t2STRHi12
    27071U,	// t2STRHi8
    8944063U,	// t2STRHs
    27883U,	// t2STRT
    33586173U,	// t2STR_POST
    33586173U,	// t2STR_PRE
    0U,	// t2STR_preidx
    8940541U,	// t2STRi12
    27645U,	// t2STRi8
    8944637U,	// t2STRs
    9341970U,	// t2SUBS_PC_LR
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    8919135U,	// t2SUBri
    27986U,	// t2SUBri12
    8919135U,	// t2SUBrr
    8923231U,	// t2SUBrs
    30655U,	// t2SXTAB
    30309U,	// t2SXTAB16
    31124U,	// t2SXTAH
    8939603U,	// t2SXTB
    26229U,	// t2SXTB16
    8939998U,	// t2SXTH
    922765281U,	// t2TBB
    0U,	// t2TBB_JT
    939542944U,	// t2TBH
    0U,	// t2TBH_JT
    8932264U,	// t2TEQri
    8932264U,	// t2TEQrr
    8940456U,	// t2TEQrs
    8932593U,	// t2TSTri
    8932593U,	// t2TSTrr
    8940785U,	// t2TSTrs
    19705U,	// t2TT
    18358U,	// t2TTA
    19568U,	// t2TTAT
    19723U,	// t2TTT
    26312U,	// t2UADD16
    26413U,	// t2UADD8
    28198U,	// t2UASX
    32258U,	// t2UBFX
    414973U,	// t2UDF
    27970U,	// t2UDIV
    26289U,	// t2UHADD16
    26393U,	// t2UHADD8
    28181U,	// t2UHASX
    28040U,	// t2UHSAX
    26251U,	// t2UHSUB16
    26354U,	// t2UHSUB8
    43558U,	// t2UMAAL
    43591U,	// t2UMLAL
    31417U,	// t2UMULL
    26297U,	// t2UQADD16
    26400U,	// t2UQADD8
    28187U,	// t2UQASX
    28046U,	// t2UQSAX
    26259U,	// t2UQSUB16
    26361U,	// t2UQSUB8
    26380U,	// t2USAD8
    30436U,	// t2USADA8
    31851U,	// t2USAT
    26326U,	// t2USAT16
    28057U,	// t2USAX
    26274U,	// t2USUB16
    26374U,	// t2USUB8
    30661U,	// t2UXTAB
    30317U,	// t2UXTAB16
    31130U,	// t2UXTAH
    8939608U,	// t2UXTB
    26236U,	// t2UXTB16
    8940003U,	// t2UXTH
    965859490U,	// tADC
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    26847U,	// tADDhirr
    26335455U,	// tADDi3
    965859551U,	// tADDi8
    26847U,	// tADDrSP
    26847U,	// tADDrSPi
    26335455U,	// tADDrr
    26847U,	// tADDspi
    26847U,	// tADDspr
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    19383U,	// tADR
    965859604U,	// tAND
    26336229U,	// tASRri
    965860325U,	// tASRrr
    1073776573U,	// tB
    965859503U,	// tBIC
    414960U,	// tBKPT
    1090558549U,	// tBL
    1090559037U,	// tBLXNSr
    1090559495U,	// tBLXi
    1090559495U,	// tBLXr
    0U,	// tBRIND
    0U,	// tBR_JTr
    1073778083U,	// tBX
    1073777720U,	// tBXNS
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    1073776573U,	// tBcc
    0U,	// tBfar
    1107449129U,	// tCBNZ
    1107449124U,	// tCBZ
    19240U,	// tCMNz
    19340U,	// tCMPhir
    19340U,	// tCMPi8
    19340U,	// tCMPr
    1157942342U,	// tCPS
    965860307U,	// tEOR
    1073777883U,	// tHINT
    414955U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    35573U,	// tLDMIA
    0U,	// tLDMIA_UPD
    26649U,	// tLDRBi
    26649U,	// tLDRBr
    281532U,	// tLDRConstPool
    27066U,	// tLDRHi
    27066U,	// tLDRHr
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    26667U,	// tLDRSB
    27085U,	// tLDRSH
    0U,	// tLDR_postidx
    27580U,	// tLDRi
    19388U,	// tLDRpci
    0U,	// tLDRpci_pic
    27580U,	// tLDRr
    27580U,	// tLDRspi
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    26335950U,	// tLSLri
    965860046U,	// tLSLrr
    26336236U,	// tLSRri
    965860332U,	// tLSRrr
    0U,	// tMOVCCr_pseudo
    1107449061U,	// tMOVSr
    311680333U,	// tMOVi8
    19789U,	// tMOVr
    26335966U,	// tMUL
    311679852U,	// tMVN
    965860321U,	// tORR
    0U,	// tPICADD
    973118352U,	// tPOP
    0U,	// tPOP_RET
    973117907U,	// tPUSH
    19769U,	// tREV
    18142U,	// tREV16
    18904U,	// tREVSH
    965860311U,	// tROR
    294901805U,	// tRSB
    965859486U,	// tSBC
    0U,	// tSBCS
    91299U,	// tSETEND
    33573627U,	// tSTMIA_UPD
    26654U,	// tSTRBi
    26654U,	// tSTRBr
    27071U,	// tSTRHi
    27071U,	// tSTRHr
    27645U,	// tSTRi
    27645U,	// tSTRr
    27645U,	// tSTRspi
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    26335327U,	// tSUBi3
    965859423U,	// tSUBi8
    26335327U,	// tSUBrr
    26719U,	// tSUBspi
    1073776840U,	// tSVC
    18515U,	// tSXTB
    18910U,	// tSXTH
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    2941U,	// tTRAP
    19697U,	// tTST
    414891U,	// tUDF
    18520U,	// tUXTB
    18915U,	// tUXTH
    1518U,	// t__brkdiv0
  };

  static const uint32_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// FENTRY_CALL
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// PATCHABLE_FUNCTION_EXIT
    0U,	// PATCHABLE_TAIL_CALL
    0U,	// G_ADD
    0U,	// G_SUB
    0U,	// G_MUL
    0U,	// G_SDIV
    0U,	// G_UDIV
    0U,	// G_SREM
    0U,	// G_UREM
    0U,	// G_AND
    0U,	// G_OR
    0U,	// G_XOR
    0U,	// G_FRAME_INDEX
    0U,	// G_GLOBAL_VALUE
    0U,	// G_EXTRACT
    0U,	// G_UNMERGE_VALUES
    0U,	// G_INSERT
    0U,	// G_SEQUENCE
    0U,	// G_MERGE_VALUES
    0U,	// G_PTRTOINT
    0U,	// G_INTTOPTR
    0U,	// G_BITCAST
    0U,	// G_LOAD
    0U,	// G_STORE
    0U,	// G_BRCOND
    0U,	// G_BRINDIRECT
    0U,	// G_INTRINSIC
    0U,	// G_INTRINSIC_W_SIDE_EFFECTS
    0U,	// G_ANYEXT
    0U,	// G_TRUNC
    0U,	// G_CONSTANT
    0U,	// G_FCONSTANT
    0U,	// G_VASTART
    0U,	// G_VAARG
    0U,	// G_SEXT
    0U,	// G_ZEXT
    0U,	// G_SHL
    0U,	// G_LSHR
    0U,	// G_ASHR
    0U,	// G_ICMP
    0U,	// G_FCMP
    0U,	// G_SELECT
    0U,	// G_UADDE
    0U,	// G_USUBE
    0U,	// G_SADDO
    0U,	// G_SSUBO
    0U,	// G_UMULO
    0U,	// G_SMULO
    0U,	// G_UMULH
    0U,	// G_SMULH
    0U,	// G_FADD
    0U,	// G_FSUB
    0U,	// G_FMUL
    0U,	// G_FDIV
    0U,	// G_FREM
    0U,	// G_FPOW
    0U,	// G_FNEG
    0U,	// G_FPEXT
    0U,	// G_FPTRUNC
    0U,	// G_FPTOSI
    0U,	// G_FPTOUI
    0U,	// G_SITOFP
    0U,	// G_UITOFP
    0U,	// G_GEP
    0U,	// G_PTR_MASK
    0U,	// G_BR
    0U,	// G_INSERT_VECTOR_ELT
    0U,	// G_EXTRACT_VECTOR_ELT
    0U,	// ABS
    0U,	// ADCri
    32768U,	// ADCrr
    65536U,	// ADCrsi
    0U,	// ADCrsr
    0U,	// ADDSri
    0U,	// ADDSrr
    0U,	// ADDSrsi
    0U,	// ADDSrsr
    0U,	// ADDri
    32768U,	// ADDrr
    65536U,	// ADDrsi
    0U,	// ADDrsr
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    8U,	// ADR
    0U,	// AESD
    0U,	// AESE
    0U,	// AESIMC
    0U,	// AESMC
    0U,	// ANDri
    32768U,	// ANDrr
    65536U,	// ANDrsi
    0U,	// ANDrsr
    32768U,	// ASRi
    32768U,	// ASRr
    0U,	// B
    0U,	// BCCZi64
    0U,	// BCCi64
    16U,	// BFC
    98328U,	// BFI
    0U,	// BICri
    32768U,	// BICrr
    65536U,	// BICrsi
    0U,	// BICrsr
    0U,	// BKPT
    0U,	// BL
    0U,	// BLX
    0U,	// BLX_pred
    0U,	// BLXi
    0U,	// BL_pred
    0U,	// BMOVPCB_CALL
    0U,	// BMOVPCRX_CALL
    0U,	// BR_JTadd
    0U,	// BR_JTm
    0U,	// BR_JTr
    0U,	// BX
    0U,	// BXJ
    0U,	// BX_CALL
    0U,	// BX_RET
    0U,	// BX_pred
    0U,	// Bcc
    1056U,	// CDP
    0U,	// CDP2
    0U,	// CLREX
    2048U,	// CLZ
    40U,	// CMNri
    2048U,	// CMNzrr
    48U,	// CMNzrsi
    56U,	// CMNzrsr
    0U,	// CMP_SWAP_16
    0U,	// CMP_SWAP_32
    0U,	// CMP_SWAP_64
    0U,	// CMP_SWAP_8
    40U,	// CMPri
    2048U,	// CMPrr
    48U,	// CMPrsi
    56U,	// CMPrsr
    0U,	// CONSTPOOL_ENTRY
    0U,	// COPY_STRUCT_BYVAL_I32
    0U,	// CPS1p
    0U,	// CPS2p
    2072U,	// CPS3p
    2072U,	// CRC32B
    2072U,	// CRC32CB
    2072U,	// CRC32CH
    2072U,	// CRC32CW
    2072U,	// CRC32H
    2072U,	// CRC32W
    0U,	// DBG
    0U,	// DMB
    0U,	// DSB
    0U,	// EORri
    32768U,	// EORrr
    65536U,	// EORrsi
    0U,	// EORrsr
    0U,	// ERET
    0U,	// FCONSTD
    0U,	// FCONSTH
    0U,	// FCONSTS
    65U,	// FLDMXDB_UPD
    2120U,	// FLDMXIA
    65U,	// FLDMXIA_UPD
    0U,	// FMSTAT
    65U,	// FSTMXDB_UPD
    2120U,	// FSTMXIA
    65U,	// FSTMXIA_UPD
    0U,	// HINT
    0U,	// HLT
    0U,	// HVC
    0U,	// ISB
    0U,	// ITasm
    0U,	// Int_eh_sjlj_dispatchsetup
    0U,	// Int_eh_sjlj_longjmp
    0U,	// Int_eh_sjlj_setjmp
    0U,	// Int_eh_sjlj_setjmp_nofp
    0U,	// Int_eh_sjlj_setup_dispatch
    0U,	// JUMPTABLE_ADDRS
    0U,	// JUMPTABLE_INSTS
    0U,	// JUMPTABLE_TBB
    0U,	// JUMPTABLE_TBH
    80U,	// LDA
    80U,	// LDAB
    80U,	// LDAEX
    80U,	// LDAEXB
    0U,	// LDAEXD
    80U,	// LDAEXH
    80U,	// LDAH
    0U,	// LDC2L_OFFSET
    1U,	// LDC2L_OPTION
    1U,	// LDC2L_POST
    0U,	// LDC2L_PRE
    0U,	// LDC2_OFFSET
    1U,	// LDC2_OPTION
    1U,	// LDC2_POST
    0U,	// LDC2_PRE
    89U,	// LDCL_OFFSET
    131169U,	// LDCL_OPTION
    163937U,	// LDCL_POST
    105U,	// LDCL_PRE
    89U,	// LDC_OFFSET
    131169U,	// LDC_OPTION
    163937U,	// LDC_POST
    105U,	// LDC_PRE
    2120U,	// LDMDA
    65U,	// LDMDA_UPD
    2120U,	// LDMDB
    65U,	// LDMDB_UPD
    2120U,	// LDMIA
    0U,	// LDMIA_RET
    65U,	// LDMIA_UPD
    2120U,	// LDMIB
    65U,	// LDMIB_UPD
    80U,	// LDRBT_POST
    196704U,	// LDRBT_POST_IMM
    196704U,	// LDRBT_POST_REG
    196704U,	// LDRB_POST_IMM
    196704U,	// LDRB_POST_REG
    112U,	// LDRB_PRE_IMM
    120U,	// LDRB_PRE_REG
    128U,	// LDRBi12
    136U,	// LDRBrs
    2048U,	// LDRConstPool
    229376U,	// LDRD
    2359296U,	// LDRD_POST
    294912U,	// LDRD_PRE
    80U,	// LDREX
    80U,	// LDREXB
    0U,	// LDREXD
    80U,	// LDREXH
    144U,	// LDRH
    327776U,	// LDRHTi
    360544U,	// LDRHTr
    393312U,	// LDRH_POST
    152U,	// LDRH_PRE
    0U,	// LDRLIT_ga_abs
    0U,	// LDRLIT_ga_pcrel
    0U,	// LDRLIT_ga_pcrel_ldr
    144U,	// LDRSB
    327776U,	// LDRSBTi
    360544U,	// LDRSBTr
    393312U,	// LDRSB_POST
    152U,	// LDRSB_PRE
    144U,	// LDRSH
    327776U,	// LDRSHTi
    360544U,	// LDRSHTr
    393312U,	// LDRSH_POST
    152U,	// LDRSH_PRE
    80U,	// LDRT_POST
    196704U,	// LDRT_POST_IMM
    196704U,	// LDRT_POST_REG
    196704U,	// LDR_POST_IMM
    196704U,	// LDR_POST_REG
    112U,	// LDR_PRE_IMM
    120U,	// LDR_PRE_REG
    128U,	// LDRcp
    128U,	// LDRi12
    136U,	// LDRrs
    0U,	// LEApcrel
    0U,	// LEApcrelJT
    32768U,	// LSLi
    32768U,	// LSLr
    32768U,	// LSRi
    32768U,	// LSRr
    4623392U,	// MCR
    160U,	// MCR2
    6720544U,	// MCRR
    458920U,	// MCRR2
    0U,	// MEMCPY
    35684352U,	// MLA
    0U,	// MLAv5
    35684352U,	// MLS
    0U,	// MOVCCi
    0U,	// MOVCCi16
    0U,	// MOVCCi32imm
    0U,	// MOVCCr
    0U,	// MOVCCsi
    0U,	// MOVCCsr
    0U,	// MOVPCLR
    0U,	// MOVPCRX
    2072U,	// MOVTi16
    0U,	// MOVTi16_ga_pcrel
    0U,	// MOV_ga_pcrel
    0U,	// MOV_ga_pcrel_ldr
    40U,	// MOVi
    2048U,	// MOVi16
    0U,	// MOVi16_ga_pcrel
    0U,	// MOVi32imm
    2048U,	// MOVr
    2048U,	// MOVr_TC
    48U,	// MOVsi
    56U,	// MOVsr
    0U,	// MOVsra_flag
    0U,	// MOVsrl_flag
    0U,	// MRC
    0U,	// MRC2
    0U,	// MRRC
    0U,	// MRRC2
    2U,	// MRS
    176U,	// MRSbanked
    2U,	// MRSsys
    64U,	// MSR
    0U,	// MSRbanked
    2U,	// MSRi
    32768U,	// MUL
    0U,	// MULv5
    0U,	// MVNCCi
    40U,	// MVNi
    2048U,	// MVNr
    48U,	// MVNsi
    56U,	// MVNsr
    0U,	// ORRri
    32768U,	// ORRrr
    65536U,	// ORRrsi
    0U,	// ORRrsr
    0U,	// PICADD
    0U,	// PICLDR
    0U,	// PICLDRB
    0U,	// PICLDRH
    0U,	// PICLDRSB
    0U,	// PICLDRSH
    0U,	// PICSTR
    0U,	// PICSTRB
    0U,	// PICSTRH
    8421376U,	// PKHBT
    10518528U,	// PKHTB
    0U,	// PLDWi12
    0U,	// PLDWrs
    0U,	// PLDi12
    0U,	// PLDrs
    0U,	// PLIi12
    0U,	// PLIrs
    32768U,	// QADD
    32768U,	// QADD16
    32768U,	// QADD8
    32768U,	// QASX
    32768U,	// QDADD
    32768U,	// QDSUB
    32768U,	// QSAX
    32768U,	// QSUB
    32768U,	// QSUB16
    32768U,	// QSUB8
    2048U,	// RBIT
    2048U,	// REV
    2048U,	// REV16
    2048U,	// REVSH
    0U,	// RFEDA
    0U,	// RFEDA_UPD
    0U,	// RFEDB
    0U,	// RFEDB_UPD
    0U,	// RFEIA
    0U,	// RFEIA_UPD
    0U,	// RFEIB
    0U,	// RFEIB_UPD
    32768U,	// RORi
    32768U,	// RORr
    0U,	// RRX
    2048U,	// RRXi
    0U,	// RSBSri
    0U,	// RSBSrsi
    0U,	// RSBSrsr
    0U,	// RSBri
    32768U,	// RSBrr
    65536U,	// RSBrsi
    0U,	// RSBrsr
    0U,	// RSCri
    32768U,	// RSCrr
    65536U,	// RSCrsi
    0U,	// RSCrsr
    32768U,	// SADD16
    32768U,	// SADD8
    32768U,	// SASX
    0U,	// SBCri
    32768U,	// SBCrr
    65536U,	// SBCrsi
    0U,	// SBCrsr
    69238784U,	// SBFX
    32768U,	// SDIV
    32768U,	// SEL
    0U,	// SETEND
    0U,	// SETPAN
    2216U,	// SHA1C
    0U,	// SHA1H
    2216U,	// SHA1M
    2216U,	// SHA1P
    2216U,	// SHA1SU0
    0U,	// SHA1SU1
    2216U,	// SHA256H
    2216U,	// SHA256H2
    0U,	// SHA256SU0
    2216U,	// SHA256SU1
    32768U,	// SHADD16
    32768U,	// SHADD8
    32768U,	// SHASX
    32768U,	// SHSAX
    32768U,	// SHSUB16
    32768U,	// SHSUB8
    0U,	// SMC
    35684352U,	// SMLABB
    35684352U,	// SMLABT
    35684352U,	// SMLAD
    35684352U,	// SMLADX
    0U,	// SMLAL
    35684352U,	// SMLALBB
    35684352U,	// SMLALBT
    35684352U,	// SMLALD
    35684352U,	// SMLALDX
    35684352U,	// SMLALTB
    35684352U,	// SMLALTT
    0U,	// SMLALv5
    35684352U,	// SMLATB
    35684352U,	// SMLATT
    35684352U,	// SMLAWB
    35684352U,	// SMLAWT
    35684352U,	// SMLSD
    35684352U,	// SMLSDX
    35684352U,	// SMLSLD
    35684352U,	// SMLSLDX
    35684352U,	// SMMLA
    35684352U,	// SMMLAR
    35684352U,	// SMMLS
    35684352U,	// SMMLSR
    32768U,	// SMMUL
    32768U,	// SMMULR
    32768U,	// SMUAD
    32768U,	// SMUADX
    32768U,	// SMULBB
    32768U,	// SMULBT
    35684352U,	// SMULL
    0U,	// SMULLv5
    32768U,	// SMULTB
    32768U,	// SMULTT
    32768U,	// SMULWB
    32768U,	// SMULWT
    32768U,	// SMUSD
    32768U,	// SMUSDX
    0U,	// SPACE
    0U,	// SRSDA
    0U,	// SRSDA_UPD
    0U,	// SRSDB
    0U,	// SRSDB_UPD
    0U,	// SRSIA
    0U,	// SRSIA_UPD
    0U,	// SRSIB
    0U,	// SRSIB_UPD
    4280U,	// SSAT
    2232U,	// SSAT16
    32768U,	// SSAX
    32768U,	// SSUB16
    32768U,	// SSUB8
    0U,	// STC2L_OFFSET
    1U,	// STC2L_OPTION
    1U,	// STC2L_POST
    0U,	// STC2L_PRE
    0U,	// STC2_OFFSET
    1U,	// STC2_OPTION
    1U,	// STC2_POST
    0U,	// STC2_PRE
    89U,	// STCL_OFFSET
    131169U,	// STCL_OPTION
    163937U,	// STCL_POST
    105U,	// STCL_PRE
    89U,	// STC_OFFSET
    131169U,	// STC_OPTION
    163937U,	// STC_POST
    105U,	// STC_PRE
    80U,	// STL
    80U,	// STLB
    491520U,	// STLEX
    491520U,	// STLEXB
    192U,	// STLEXD
    491520U,	// STLEXH
    80U,	// STLH
    2120U,	// STMDA
    65U,	// STMDA_UPD
    2120U,	// STMDB
    65U,	// STMDB_UPD
    2120U,	// STMIA
    65U,	// STMIA_UPD
    2120U,	// STMIB
    65U,	// STMIB_UPD
    80U,	// STRBT_POST
    196704U,	// STRBT_POST_IMM
    196704U,	// STRBT_POST_REG
    196704U,	// STRB_POST_IMM
    196704U,	// STRB_POST_REG
    112U,	// STRB_PRE_IMM
    120U,	// STRB_PRE_REG
    128U,	// STRBi12
    0U,	// STRBi_preidx
    0U,	// STRBr_preidx
    136U,	// STRBrs
    229376U,	// STRD
    2359320U,	// STRD_POST
    294936U,	// STRD_PRE
    491520U,	// STREX
    491520U,	// STREXB
    192U,	// STREXD
    491520U,	// STREXH
    144U,	// STRH
    327776U,	// STRHTi
    360544U,	// STRHTr
    393312U,	// STRH_POST
    152U,	// STRH_PRE
    0U,	// STRH_preidx
    80U,	// STRT_POST
    196704U,	// STRT_POST_IMM
    196704U,	// STRT_POST_REG
    196704U,	// STR_POST_IMM
    196704U,	// STR_POST_REG
    112U,	// STR_PRE_IMM
    120U,	// STR_PRE_REG
    128U,	// STRi12
    0U,	// STRi_preidx
    0U,	// STRr_preidx
    136U,	// STRrs
    0U,	// SUBS_PC_LR
    0U,	// SUBSri
    0U,	// SUBSrr
    0U,	// SUBSrsi
    0U,	// SUBSrsr
    0U,	// SUBri
    32768U,	// SUBrr
    65536U,	// SUBrsi
    0U,	// SUBrsr
    0U,	// SVC
    491520U,	// SWP
    491520U,	// SWPB
    12615680U,	// SXTAB
    12615680U,	// SXTAB16
    12615680U,	// SXTAH
    5120U,	// SXTB
    5120U,	// SXTB16
    5120U,	// SXTH
    0U,	// TAILJMPd
    0U,	// TAILJMPr
    0U,	// TCRETURNdi
    0U,	// TCRETURNri
    40U,	// TEQri
    2048U,	// TEQrr
    48U,	// TEQrsi
    56U,	// TEQrsr
    0U,	// TPsoft
    0U,	// TRAP
    0U,	// TRAPNaCl
    40U,	// TSTri
    2048U,	// TSTrr
    48U,	// TSTrsi
    56U,	// TSTrsr
    32768U,	// UADD16
    32768U,	// UADD8
    32768U,	// UASX
    69238784U,	// UBFX
    0U,	// UDF
    32768U,	// UDIV
    32768U,	// UHADD16
    32768U,	// UHADD8
    32768U,	// UHASX
    32768U,	// UHSAX
    32768U,	// UHSUB16
    32768U,	// UHSUB8
    35684352U,	// UMAAL
    0U,	// UMLAL
    0U,	// UMLALv5
    35684352U,	// UMULL
    0U,	// UMULLv5
    32768U,	// UQADD16
    32768U,	// UQADD8
    32768U,	// UQASX
    32768U,	// UQSAX
    32768U,	// UQSUB16
    32768U,	// UQSUB8
    32768U,	// USAD8
    35684352U,	// USADA8
    14712832U,	// USAT
    32768U,	// USAT16
    32768U,	// USAX
    32768U,	// USUB16
    32768U,	// USUB8
    12615680U,	// UXTAB
    12615680U,	// UXTAB16
    12615680U,	// UXTAH
    5120U,	// UXTB
    5120U,	// UXTB16
    5120U,	// UXTH
    2216U,	// VABALsv2i64
    2216U,	// VABALsv4i32
    2216U,	// VABALsv8i16
    2216U,	// VABALuv2i64
    2216U,	// VABALuv4i32
    2216U,	// VABALuv8i16
    2216U,	// VABAsv16i8
    2216U,	// VABAsv2i32
    2216U,	// VABAsv4i16
    2216U,	// VABAsv4i32
    2216U,	// VABAsv8i16
    2216U,	// VABAsv8i8
    2216U,	// VABAuv16i8
    2216U,	// VABAuv2i32
    2216U,	// VABAuv4i16
    2216U,	// VABAuv4i32
    2216U,	// VABAuv8i16
    2216U,	// VABAuv8i8
    2072U,	// VABDLsv2i64
    2072U,	// VABDLsv4i32
    2072U,	// VABDLsv8i16
    2072U,	// VABDLuv2i64
    2072U,	// VABDLuv4i32
    2072U,	// VABDLuv8i16
    527392U,	// VABDfd
    527392U,	// VABDfq
    527392U,	// VABDhd
    527392U,	// VABDhq
    2072U,	// VABDsv16i8
    2072U,	// VABDsv2i32
    2072U,	// VABDsv4i16
    2072U,	// VABDsv4i32
    2072U,	// VABDsv8i16
    2072U,	// VABDsv8i8
    2072U,	// VABDuv16i8
    2072U,	// VABDuv2i32
    2072U,	// VABDuv4i16
    2072U,	// VABDuv4i32
    2072U,	// VABDuv8i16
    2072U,	// VABDuv8i8
    64U,	// VABSD
    64U,	// VABSH
    64U,	// VABSS
    64U,	// VABSfd
    64U,	// VABSfq
    64U,	// VABShd
    64U,	// VABShq
    0U,	// VABSv16i8
    0U,	// VABSv2i32
    0U,	// VABSv4i16
    0U,	// VABSv4i32
    0U,	// VABSv8i16
    0U,	// VABSv8i8
    527392U,	// VACGEfd
    527392U,	// VACGEfq
    527392U,	// VACGEhd
    527392U,	// VACGEhq
    527392U,	// VACGTfd
    527392U,	// VACGTfq
    527392U,	// VACGThd
    527392U,	// VACGThq
    527392U,	// VADDD
    527392U,	// VADDH
    2072U,	// VADDHNv2i32
    2072U,	// VADDHNv4i16
    2072U,	// VADDHNv8i8
    2072U,	// VADDLsv2i64
    2072U,	// VADDLsv4i32
    2072U,	// VADDLsv8i16
    2072U,	// VADDLuv2i64
    2072U,	// VADDLuv4i32
    2072U,	// VADDLuv8i16
    527392U,	// VADDS
    2072U,	// VADDWsv2i64
    2072U,	// VADDWsv4i32
    2072U,	// VADDWsv8i16
    2072U,	// VADDWuv2i64
    2072U,	// VADDWuv4i32
    2072U,	// VADDWuv8i16
    527392U,	// VADDfd
    527392U,	// VADDfq
    527392U,	// VADDhd
    527392U,	// VADDhq
    2072U,	// VADDv16i8
    2072U,	// VADDv1i64
    2072U,	// VADDv2i32
    2072U,	// VADDv2i64
    2072U,	// VADDv4i16
    2072U,	// VADDv4i32
    2072U,	// VADDv8i16
    2072U,	// VADDv8i8
    32768U,	// VANDd
    32768U,	// VANDq
    32768U,	// VBICd
    0U,	// VBICiv2i32
    0U,	// VBICiv4i16
    0U,	// VBICiv4i32
    0U,	// VBICiv8i16
    32768U,	// VBICq
    557080U,	// VBIFd
    557080U,	// VBIFq
    557080U,	// VBITd
    557080U,	// VBITq
    557080U,	// VBSLd
    557080U,	// VBSLq
    527392U,	// VCEQfd
    527392U,	// VCEQfq
    527392U,	// VCEQhd
    527392U,	// VCEQhq
    2072U,	// VCEQv16i8
    2072U,	// VCEQv2i32
    2072U,	// VCEQv4i16
    2072U,	// VCEQv4i32
    2072U,	// VCEQv8i16
    2072U,	// VCEQv8i8
    2U,	// VCEQzv16i8
    200U,	// VCEQzv2f32
    2U,	// VCEQzv2i32
    200U,	// VCEQzv4f16
    200U,	// VCEQzv4f32
    2U,	// VCEQzv4i16
    2U,	// VCEQzv4i32
    200U,	// VCEQzv8f16
    2U,	// VCEQzv8i16
    2U,	// VCEQzv8i8
    527392U,	// VCGEfd
    527392U,	// VCGEfq
    527392U,	// VCGEhd
    527392U,	// VCGEhq
    2072U,	// VCGEsv16i8
    2072U,	// VCGEsv2i32
    2072U,	// VCGEsv4i16
    2072U,	// VCGEsv4i32
    2072U,	// VCGEsv8i16
    2072U,	// VCGEsv8i8
    2072U,	// VCGEuv16i8
    2072U,	// VCGEuv2i32
    2072U,	// VCGEuv4i16
    2072U,	// VCGEuv4i32
    2072U,	// VCGEuv8i16
    2072U,	// VCGEuv8i8
    2U,	// VCGEzv16i8
    200U,	// VCGEzv2f32
    2U,	// VCGEzv2i32
    200U,	// VCGEzv4f16
    200U,	// VCGEzv4f32
    2U,	// VCGEzv4i16
    2U,	// VCGEzv4i32
    200U,	// VCGEzv8f16
    2U,	// VCGEzv8i16
    2U,	// VCGEzv8i8
    527392U,	// VCGTfd
    527392U,	// VCGTfq
    527392U,	// VCGThd
    527392U,	// VCGThq
    2072U,	// VCGTsv16i8
    2072U,	// VCGTsv2i32
    2072U,	// VCGTsv4i16
    2072U,	// VCGTsv4i32
    2072U,	// VCGTsv8i16
    2072U,	// VCGTsv8i8
    2072U,	// VCGTuv16i8
    2072U,	// VCGTuv2i32
    2072U,	// VCGTuv4i16
    2072U,	// VCGTuv4i32
    2072U,	// VCGTuv8i16
    2072U,	// VCGTuv8i8
    2U,	// VCGTzv16i8
    200U,	// VCGTzv2f32
    2U,	// VCGTzv2i32
    200U,	// VCGTzv4f16
    200U,	// VCGTzv4f32
    2U,	// VCGTzv4i16
    2U,	// VCGTzv4i32
    200U,	// VCGTzv8f16
    2U,	// VCGTzv8i16
    2U,	// VCGTzv8i8
    2U,	// VCLEzv16i8
    200U,	// VCLEzv2f32
    2U,	// VCLEzv2i32
    200U,	// VCLEzv4f16
    200U,	// VCLEzv4f32
    2U,	// VCLEzv4i16
    2U,	// VCLEzv4i32
    200U,	// VCLEzv8f16
    2U,	// VCLEzv8i16
    2U,	// VCLEzv8i8
    0U,	// VCLSv16i8
    0U,	// VCLSv2i32
    0U,	// VCLSv4i16
    0U,	// VCLSv4i32
    0U,	// VCLSv8i16
    0U,	// VCLSv8i8
    2U,	// VCLTzv16i8
    200U,	// VCLTzv2f32
    2U,	// VCLTzv2i32
    200U,	// VCLTzv4f16
    200U,	// VCLTzv4f32
    2U,	// VCLTzv4i16
    2U,	// VCLTzv4i32
    200U,	// VCLTzv8f16
    2U,	// VCLTzv8i16
    2U,	// VCLTzv8i8
    0U,	// VCLZv16i8
    0U,	// VCLZv2i32
    0U,	// VCLZv4i16
    0U,	// VCLZv4i32
    0U,	// VCLZv8i16
    0U,	// VCLZv8i8
    64U,	// VCMPD
    64U,	// VCMPED
    64U,	// VCMPEH
    64U,	// VCMPES
    0U,	// VCMPEZD
    0U,	// VCMPEZH
    0U,	// VCMPEZS
    64U,	// VCMPH
    64U,	// VCMPS
    0U,	// VCMPZD
    0U,	// VCMPZH
    0U,	// VCMPZS
    2048U,	// VCNTd
    2048U,	// VCNTq
    0U,	// VCVTANSDf
    0U,	// VCVTANSDh
    0U,	// VCVTANSQf
    0U,	// VCVTANSQh
    0U,	// VCVTANUDf
    0U,	// VCVTANUDh
    0U,	// VCVTANUQf
    0U,	// VCVTANUQh
    0U,	// VCVTASD
    0U,	// VCVTASH
    0U,	// VCVTASS
    0U,	// VCVTAUD
    0U,	// VCVTAUH
    0U,	// VCVTAUS
    0U,	// VCVTBDH
    0U,	// VCVTBHD
    0U,	// VCVTBHS
    0U,	// VCVTBSH
    0U,	// VCVTDS
    0U,	// VCVTMNSDf
    0U,	// VCVTMNSDh
    0U,	// VCVTMNSQf
    0U,	// VCVTMNSQh
    0U,	// VCVTMNUDf
    0U,	// VCVTMNUDh
    0U,	// VCVTMNUQf
    0U,	// VCVTMNUQh
    0U,	// VCVTMSD
    0U,	// VCVTMSH
    0U,	// VCVTMSS
    0U,	// VCVTMUD
    0U,	// VCVTMUH
    0U,	// VCVTMUS
    0U,	// VCVTNNSDf
    0U,	// VCVTNNSDh
    0U,	// VCVTNNSQf
    0U,	// VCVTNNSQh
    0U,	// VCVTNNUDf
    0U,	// VCVTNNUDh
    0U,	// VCVTNNUQf
    0U,	// VCVTNNUQh
    0U,	// VCVTNSD
    0U,	// VCVTNSH
    0U,	// VCVTNSS
    0U,	// VCVTNUD
    0U,	// VCVTNUH
    0U,	// VCVTNUS
    0U,	// VCVTPNSDf
    0U,	// VCVTPNSDh
    0U,	// VCVTPNSQf
    0U,	// VCVTPNSQh
    0U,	// VCVTPNUDf
    0U,	// VCVTPNUDh
    0U,	// VCVTPNUQf
    0U,	// VCVTPNUQh
    0U,	// VCVTPSD
    0U,	// VCVTPSH
    0U,	// VCVTPSS
    0U,	// VCVTPUD
    0U,	// VCVTPUH
    0U,	// VCVTPUS
    0U,	// VCVTSD
    0U,	// VCVTTDH
    0U,	// VCVTTHD
    0U,	// VCVTTHS
    0U,	// VCVTTSH
    0U,	// VCVTf2h
    0U,	// VCVTf2sd
    0U,	// VCVTf2sq
    0U,	// VCVTf2ud
    0U,	// VCVTf2uq
    67U,	// VCVTf2xsd
    67U,	// VCVTf2xsq
    67U,	// VCVTf2xud
    67U,	// VCVTf2xuq
    0U,	// VCVTh2f
    0U,	// VCVTh2sd
    0U,	// VCVTh2sq
    0U,	// VCVTh2ud
    0U,	// VCVTh2uq
    67U,	// VCVTh2xsd
    67U,	// VCVTh2xsq
    67U,	// VCVTh2xud
    67U,	// VCVTh2xuq
    0U,	// VCVTs2fd
    0U,	// VCVTs2fq
    0U,	// VCVTs2hd
    0U,	// VCVTs2hq
    0U,	// VCVTu2fd
    0U,	// VCVTu2fq
    0U,	// VCVTu2hd
    0U,	// VCVTu2hq
    67U,	// VCVTxs2fd
    67U,	// VCVTxs2fq
    67U,	// VCVTxs2hd
    67U,	// VCVTxs2hq
    67U,	// VCVTxu2fd
    67U,	// VCVTxu2fq
    67U,	// VCVTxu2hd
    67U,	// VCVTxu2hq
    527392U,	// VDIVD
    527392U,	// VDIVH
    527392U,	// VDIVS
    2048U,	// VDUP16d
    2048U,	// VDUP16q
    2048U,	// VDUP32d
    2048U,	// VDUP32q
    2048U,	// VDUP8d
    2048U,	// VDUP8q
    6144U,	// VDUPLN16d
    6144U,	// VDUPLN16q
    6144U,	// VDUPLN32d
    6144U,	// VDUPLN32q
    6144U,	// VDUPLN8d
    6144U,	// VDUPLN8q
    32768U,	// VEORd
    32768U,	// VEORq
    35684352U,	// VEXTd16
    35684352U,	// VEXTd32
    35684352U,	// VEXTd8
    35684352U,	// VEXTq16
    35684352U,	// VEXTq32
    35684352U,	// VEXTq64
    35684352U,	// VEXTq8
    531491U,	// VFMAD
    531491U,	// VFMAH
    531491U,	// VFMAS
    531491U,	// VFMAfd
    531491U,	// VFMAfq
    531491U,	// VFMAhd
    531491U,	// VFMAhq
    531491U,	// VFMSD
    531491U,	// VFMSH
    531491U,	// VFMSS
    531491U,	// VFMSfd
    531491U,	// VFMSfq
    531491U,	// VFMShd
    531491U,	// VFMShq
    531491U,	// VFNMAD
    531491U,	// VFNMAH
    531491U,	// VFNMAS
    531491U,	// VFNMSD
    531491U,	// VFNMSH
    531491U,	// VFNMSS
    6144U,	// VGETLNi32
    3U,	// VGETLNs16
    3U,	// VGETLNs8
    3U,	// VGETLNu16
    3U,	// VGETLNu8
    2072U,	// VHADDsv16i8
    2072U,	// VHADDsv2i32
    2072U,	// VHADDsv4i16
    2072U,	// VHADDsv4i32
    2072U,	// VHADDsv8i16
    2072U,	// VHADDsv8i8
    2072U,	// VHADDuv16i8
    2072U,	// VHADDuv2i32
    2072U,	// VHADDuv4i16
    2072U,	// VHADDuv4i32
    2072U,	// VHADDuv8i16
    2072U,	// VHADDuv8i8
    2072U,	// VHSUBsv16i8
    2072U,	// VHSUBsv2i32
    2072U,	// VHSUBsv4i16
    2072U,	// VHSUBsv4i32
    2072U,	// VHSUBsv8i16
    2072U,	// VHSUBsv8i8
    2072U,	// VHSUBuv16i8
    2072U,	// VHSUBuv2i32
    2072U,	// VHSUBuv4i16
    2072U,	// VHSUBuv4i32
    2072U,	// VHSUBuv8i16
    2072U,	// VHSUBuv8i8
    0U,	// VINSH
    67U,	// VLD1DUPd16
    211U,	// VLD1DUPd16wb_fixed
    8227U,	// VLD1DUPd16wb_register
    67U,	// VLD1DUPd32
    211U,	// VLD1DUPd32wb_fixed
    8227U,	// VLD1DUPd32wb_register
    67U,	// VLD1DUPd8
    211U,	// VLD1DUPd8wb_fixed
    8227U,	// VLD1DUPd8wb_register
    67U,	// VLD1DUPq16
    211U,	// VLD1DUPq16wb_fixed
    8227U,	// VLD1DUPq16wb_register
    67U,	// VLD1DUPq32
    211U,	// VLD1DUPq32wb_fixed
    8227U,	// VLD1DUPq32wb_register
    67U,	// VLD1DUPq8
    211U,	// VLD1DUPq8wb_fixed
    8227U,	// VLD1DUPq8wb_register
    599260U,	// VLD1LNd16
    632036U,	// VLD1LNd16_UPD
    599260U,	// VLD1LNd32
    632036U,	// VLD1LNd32_UPD
    599260U,	// VLD1LNd8
    632036U,	// VLD1LNd8_UPD
    2280U,	// VLD1LNdAsm_16
    2280U,	// VLD1LNdAsm_32
    2280U,	// VLD1LNdAsm_8
    10472U,	// VLD1LNdWB_fixed_Asm_16
    10472U,	// VLD1LNdWB_fixed_Asm_32
    10472U,	// VLD1LNdWB_fixed_Asm_8
    655592U,	// VLD1LNdWB_register_Asm_16
    655592U,	// VLD1LNdWB_register_Asm_32
    655592U,	// VLD1LNdWB_register_Asm_8
    0U,	// VLD1LNq16Pseudo
    0U,	// VLD1LNq16Pseudo_UPD
    0U,	// VLD1LNq32Pseudo
    0U,	// VLD1LNq32Pseudo_UPD
    0U,	// VLD1LNq8Pseudo
    0U,	// VLD1LNq8Pseudo_UPD
    67U,	// VLD1d16
    67U,	// VLD1d16Q
    211U,	// VLD1d16Qwb_fixed
    8227U,	// VLD1d16Qwb_register
    67U,	// VLD1d16T
    211U,	// VLD1d16Twb_fixed
    8227U,	// VLD1d16Twb_register
    211U,	// VLD1d16wb_fixed
    8227U,	// VLD1d16wb_register
    67U,	// VLD1d32
    67U,	// VLD1d32Q
    211U,	// VLD1d32Qwb_fixed
    8227U,	// VLD1d32Qwb_register
    67U,	// VLD1d32T
    211U,	// VLD1d32Twb_fixed
    8227U,	// VLD1d32Twb_register
    211U,	// VLD1d32wb_fixed
    8227U,	// VLD1d32wb_register
    67U,	// VLD1d64
    67U,	// VLD1d64Q
    0U,	// VLD1d64QPseudo
    0U,	// VLD1d64QPseudoWB_fixed
    0U,	// VLD1d64QPseudoWB_register
    211U,	// VLD1d64Qwb_fixed
    8227U,	// VLD1d64Qwb_register
    67U,	// VLD1d64T
    0U,	// VLD1d64TPseudo
    0U,	// VLD1d64TPseudoWB_fixed
    0U,	// VLD1d64TPseudoWB_register
    211U,	// VLD1d64Twb_fixed
    8227U,	// VLD1d64Twb_register
    211U,	// VLD1d64wb_fixed
    8227U,	// VLD1d64wb_register
    67U,	// VLD1d8
    67U,	// VLD1d8Q
    211U,	// VLD1d8Qwb_fixed
    8227U,	// VLD1d8Qwb_register
    67U,	// VLD1d8T
    211U,	// VLD1d8Twb_fixed
    8227U,	// VLD1d8Twb_register
    211U,	// VLD1d8wb_fixed
    8227U,	// VLD1d8wb_register
    67U,	// VLD1q16
    211U,	// VLD1q16wb_fixed
    8227U,	// VLD1q16wb_register
    67U,	// VLD1q32
    211U,	// VLD1q32wb_fixed
    8227U,	// VLD1q32wb_register
    67U,	// VLD1q64
    211U,	// VLD1q64wb_fixed
    8227U,	// VLD1q64wb_register
    67U,	// VLD1q8
    211U,	// VLD1q8wb_fixed
    8227U,	// VLD1q8wb_register
    67U,	// VLD2DUPd16
    211U,	// VLD2DUPd16wb_fixed
    8227U,	// VLD2DUPd16wb_register
    67U,	// VLD2DUPd16x2
    211U,	// VLD2DUPd16x2wb_fixed
    8227U,	// VLD2DUPd16x2wb_register
    67U,	// VLD2DUPd32
    211U,	// VLD2DUPd32wb_fixed
    8227U,	// VLD2DUPd32wb_register
    67U,	// VLD2DUPd32x2
    211U,	// VLD2DUPd32x2wb_fixed
    8227U,	// VLD2DUPd32x2wb_register
    67U,	// VLD2DUPd8
    211U,	// VLD2DUPd8wb_fixed
    8227U,	// VLD2DUPd8wb_register
    67U,	// VLD2DUPd8x2
    211U,	// VLD2DUPd8x2wb_fixed
    8227U,	// VLD2DUPd8x2wb_register
    699620U,	// VLD2LNd16
    0U,	// VLD2LNd16Pseudo
    0U,	// VLD2LNd16Pseudo_UPD
    733428U,	// VLD2LNd16_UPD
    699620U,	// VLD2LNd32
    0U,	// VLD2LNd32Pseudo
    0U,	// VLD2LNd32Pseudo_UPD
    733428U,	// VLD2LNd32_UPD
    699620U,	// VLD2LNd8
    0U,	// VLD2LNd8Pseudo
    0U,	// VLD2LNd8Pseudo_UPD
    733428U,	// VLD2LNd8_UPD
    2280U,	// VLD2LNdAsm_16
    2280U,	// VLD2LNdAsm_32
    2280U,	// VLD2LNdAsm_8
    10472U,	// VLD2LNdWB_fixed_Asm_16
    10472U,	// VLD2LNdWB_fixed_Asm_32
    10472U,	// VLD2LNdWB_fixed_Asm_8
    655592U,	// VLD2LNdWB_register_Asm_16
    655592U,	// VLD2LNdWB_register_Asm_32
    655592U,	// VLD2LNdWB_register_Asm_8
    699620U,	// VLD2LNq16
    0U,	// VLD2LNq16Pseudo
    0U,	// VLD2LNq16Pseudo_UPD
    733428U,	// VLD2LNq16_UPD
    699620U,	// VLD2LNq32
    0U,	// VLD2LNq32Pseudo
    0U,	// VLD2LNq32Pseudo_UPD
    733428U,	// VLD2LNq32_UPD
    2280U,	// VLD2LNqAsm_16
    2280U,	// VLD2LNqAsm_32
    10472U,	// VLD2LNqWB_fixed_Asm_16
    10472U,	// VLD2LNqWB_fixed_Asm_32
    655592U,	// VLD2LNqWB_register_Asm_16
    655592U,	// VLD2LNqWB_register_Asm_32
    67U,	// VLD2b16
    211U,	// VLD2b16wb_fixed
    8227U,	// VLD2b16wb_register
    67U,	// VLD2b32
    211U,	// VLD2b32wb_fixed
    8227U,	// VLD2b32wb_register
    67U,	// VLD2b8
    211U,	// VLD2b8wb_fixed
    8227U,	// VLD2b8wb_register
    67U,	// VLD2d16
    211U,	// VLD2d16wb_fixed
    8227U,	// VLD2d16wb_register
    67U,	// VLD2d32
    211U,	// VLD2d32wb_fixed
    8227U,	// VLD2d32wb_register
    67U,	// VLD2d8
    211U,	// VLD2d8wb_fixed
    8227U,	// VLD2d8wb_register
    67U,	// VLD2q16
    0U,	// VLD2q16Pseudo
    0U,	// VLD2q16PseudoWB_fixed
    0U,	// VLD2q16PseudoWB_register
    211U,	// VLD2q16wb_fixed
    8227U,	// VLD2q16wb_register
    67U,	// VLD2q32
    0U,	// VLD2q32Pseudo
    0U,	// VLD2q32PseudoWB_fixed
    0U,	// VLD2q32PseudoWB_register
    211U,	// VLD2q32wb_fixed
    8227U,	// VLD2q32wb_register
    67U,	// VLD2q8
    0U,	// VLD2q8Pseudo
    0U,	// VLD2q8PseudoWB_fixed
    0U,	// VLD2q8PseudoWB_register
    211U,	// VLD2q8wb_fixed
    8227U,	// VLD2q8wb_register
    13564U,	// VLD3DUPd16
    0U,	// VLD3DUPd16Pseudo
    0U,	// VLD3DUPd16Pseudo_UPD
    768252U,	// VLD3DUPd16_UPD
    13564U,	// VLD3DUPd32
    0U,	// VLD3DUPd32Pseudo
    0U,	// VLD3DUPd32Pseudo_UPD
    768252U,	// VLD3DUPd32_UPD
    13564U,	// VLD3DUPd8
    0U,	// VLD3DUPd8Pseudo
    0U,	// VLD3DUPd8Pseudo_UPD
    768252U,	// VLD3DUPd8_UPD
    0U,	// VLD3DUPdAsm_16
    0U,	// VLD3DUPdAsm_32
    0U,	// VLD3DUPdAsm_8
    4U,	// VLD3DUPdWB_fixed_Asm_16
    4U,	// VLD3DUPdWB_fixed_Asm_32
    4U,	// VLD3DUPdWB_fixed_Asm_8
    2216U,	// VLD3DUPdWB_register_Asm_16
    2216U,	// VLD3DUPdWB_register_Asm_32
    2216U,	// VLD3DUPdWB_register_Asm_8
    13564U,	// VLD3DUPq16
    768252U,	// VLD3DUPq16_UPD
    13564U,	// VLD3DUPq32
    768252U,	// VLD3DUPq32_UPD
    13564U,	// VLD3DUPq8
    768252U,	// VLD3DUPq8_UPD
    0U,	// VLD3DUPqAsm_16
    0U,	// VLD3DUPqAsm_32
    0U,	// VLD3DUPqAsm_8
    4U,	// VLD3DUPqWB_fixed_Asm_16
    4U,	// VLD3DUPqWB_fixed_Asm_32
    4U,	// VLD3DUPqWB_fixed_Asm_8
    2216U,	// VLD3DUPqWB_register_Asm_16
    2216U,	// VLD3DUPqWB_register_Asm_32
    2216U,	// VLD3DUPqWB_register_Asm_8
    798964U,	// VLD3LNd16
    0U,	// VLD3LNd16Pseudo
    0U,	// VLD3LNd16Pseudo_UPD
    828676U,	// VLD3LNd16_UPD
    798964U,	// VLD3LNd32
    0U,	// VLD3LNd32Pseudo
    0U,	// VLD3LNd32Pseudo_UPD
    828676U,	// VLD3LNd32_UPD
    798964U,	// VLD3LNd8
    0U,	// VLD3LNd8Pseudo
    0U,	// VLD3LNd8Pseudo_UPD
    828676U,	// VLD3LNd8_UPD
    2280U,	// VLD3LNdAsm_16
    2280U,	// VLD3LNdAsm_32
    2280U,	// VLD3LNdAsm_8
    10472U,	// VLD3LNdWB_fixed_Asm_16
    10472U,	// VLD3LNdWB_fixed_Asm_32
    10472U,	// VLD3LNdWB_fixed_Asm_8
    655592U,	// VLD3LNdWB_register_Asm_16
    655592U,	// VLD3LNdWB_register_Asm_32
    655592U,	// VLD3LNdWB_register_Asm_8
    798964U,	// VLD3LNq16
    0U,	// VLD3LNq16Pseudo
    0U,	// VLD3LNq16Pseudo_UPD
    828676U,	// VLD3LNq16_UPD
    798964U,	// VLD3LNq32
    0U,	// VLD3LNq32Pseudo
    0U,	// VLD3LNq32Pseudo_UPD
    828676U,	// VLD3LNq32_UPD
    2280U,	// VLD3LNqAsm_16
    2280U,	// VLD3LNqAsm_32
    10472U,	// VLD3LNqWB_fixed_Asm_16
    10472U,	// VLD3LNqWB_fixed_Asm_32
    655592U,	// VLD3LNqWB_register_Asm_16
    655592U,	// VLD3LNqWB_register_Asm_32
    117473280U,	// VLD3d16
    0U,	// VLD3d16Pseudo
    0U,	// VLD3d16Pseudo_UPD
    151027712U,	// VLD3d16_UPD
    117473280U,	// VLD3d32
    0U,	// VLD3d32Pseudo
    0U,	// VLD3d32Pseudo_UPD
    151027712U,	// VLD3d32_UPD
    117473280U,	// VLD3d8
    0U,	// VLD3d8Pseudo
    0U,	// VLD3d8Pseudo_UPD
    151027712U,	// VLD3d8_UPD
    67U,	// VLD3dAsm_16
    67U,	// VLD3dAsm_32
    67U,	// VLD3dAsm_8
    211U,	// VLD3dWB_fixed_Asm_16
    211U,	// VLD3dWB_fixed_Asm_32
    211U,	// VLD3dWB_fixed_Asm_8
    531491U,	// VLD3dWB_register_Asm_16
    531491U,	// VLD3dWB_register_Asm_32
    531491U,	// VLD3dWB_register_Asm_8
    117473280U,	// VLD3q16
    0U,	// VLD3q16Pseudo_UPD
    151027712U,	// VLD3q16_UPD
    0U,	// VLD3q16oddPseudo
    0U,	// VLD3q16oddPseudo_UPD
    117473280U,	// VLD3q32
    0U,	// VLD3q32Pseudo_UPD
    151027712U,	// VLD3q32_UPD
    0U,	// VLD3q32oddPseudo
    0U,	// VLD3q32oddPseudo_UPD
    117473280U,	// VLD3q8
    0U,	// VLD3q8Pseudo_UPD
    151027712U,	// VLD3q8_UPD
    0U,	// VLD3q8oddPseudo
    0U,	// VLD3q8oddPseudo_UPD
    0U,	// VLD3qAsm_16
    0U,	// VLD3qAsm_32
    0U,	// VLD3qAsm_8
    4U,	// VLD3qWB_fixed_Asm_16
    4U,	// VLD3qWB_fixed_Asm_32
    4U,	// VLD3qWB_fixed_Asm_8
    2216U,	// VLD3qWB_register_Asm_16
    2216U,	// VLD3qWB_register_Asm_32
    2216U,	// VLD3qWB_register_Asm_8
    538892U,	// VLD4DUPd16
    0U,	// VLD4DUPd16Pseudo
    0U,	// VLD4DUPd16Pseudo_UPD
    15628U,	// VLD4DUPd16_UPD
    538892U,	// VLD4DUPd32
    0U,	// VLD4DUPd32Pseudo
    0U,	// VLD4DUPd32Pseudo_UPD
    15628U,	// VLD4DUPd32_UPD
    538892U,	// VLD4DUPd8
    0U,	// VLD4DUPd8Pseudo
    0U,	// VLD4DUPd8Pseudo_UPD
    15628U,	// VLD4DUPd8_UPD
    0U,	// VLD4DUPdAsm_16
    0U,	// VLD4DUPdAsm_32
    0U,	// VLD4DUPdAsm_8
    4U,	// VLD4DUPdWB_fixed_Asm_16
    4U,	// VLD4DUPdWB_fixed_Asm_32
    4U,	// VLD4DUPdWB_fixed_Asm_8
    2216U,	// VLD4DUPdWB_register_Asm_16
    2216U,	// VLD4DUPdWB_register_Asm_32
    2216U,	// VLD4DUPdWB_register_Asm_8
    538892U,	// VLD4DUPq16
    15628U,	// VLD4DUPq16_UPD
    538892U,	// VLD4DUPq32
    15628U,	// VLD4DUPq32_UPD
    538892U,	// VLD4DUPq8
    15628U,	// VLD4DUPq8_UPD
    0U,	// VLD4DUPqAsm_16
    0U,	// VLD4DUPqAsm_32
    0U,	// VLD4DUPqAsm_8
    4U,	// VLD4DUPqWB_fixed_Asm_16
    4U,	// VLD4DUPqWB_fixed_Asm_32
    4U,	// VLD4DUPqWB_fixed_Asm_8
    2216U,	// VLD4DUPqWB_register_Asm_16
    2216U,	// VLD4DUPqWB_register_Asm_32
    2216U,	// VLD4DUPqWB_register_Asm_8
    187215108U,	// VLD4LNd16
    0U,	// VLD4LNd16Pseudo
    0U,	// VLD4LNd16Pseudo_UPD
    276U,	// VLD4LNd16_UPD
    187215108U,	// VLD4LNd32
    0U,	// VLD4LNd32Pseudo
    0U,	// VLD4LNd32Pseudo_UPD
    276U,	// VLD4LNd32_UPD
    187215108U,	// VLD4LNd8
    0U,	// VLD4LNd8Pseudo
    0U,	// VLD4LNd8Pseudo_UPD
    276U,	// VLD4LNd8_UPD
    2280U,	// VLD4LNdAsm_16
    2280U,	// VLD4LNdAsm_32
    2280U,	// VLD4LNdAsm_8
    10472U,	// VLD4LNdWB_fixed_Asm_16
    10472U,	// VLD4LNdWB_fixed_Asm_32
    10472U,	// VLD4LNdWB_fixed_Asm_8
    655592U,	// VLD4LNdWB_register_Asm_16
    655592U,	// VLD4LNdWB_register_Asm_32
    655592U,	// VLD4LNdWB_register_Asm_8
    187215108U,	// VLD4LNq16
    0U,	// VLD4LNq16Pseudo
    0U,	// VLD4LNq16Pseudo_UPD
    276U,	// VLD4LNq16_UPD
    187215108U,	// VLD4LNq32
    0U,	// VLD4LNq32Pseudo
    0U,	// VLD4LNq32Pseudo_UPD
    276U,	// VLD4LNq32_UPD
    2280U,	// VLD4LNqAsm_16
    2280U,	// VLD4LNqAsm_32
    10472U,	// VLD4LNqWB_fixed_Asm_16
    10472U,	// VLD4LNqWB_fixed_Asm_32
    655592U,	// VLD4LNqWB_register_Asm_16
    655592U,	// VLD4LNqWB_register_Asm_32
    572555264U,	// VLD4d16
    0U,	// VLD4d16Pseudo
    0U,	// VLD4d16Pseudo_UPD
    1646297088U,	// VLD4d16_UPD
    572555264U,	// VLD4d32
    0U,	// VLD4d32Pseudo
    0U,	// VLD4d32Pseudo_UPD
    1646297088U,	// VLD4d32_UPD
    572555264U,	// VLD4d8
    0U,	// VLD4d8Pseudo
    0U,	// VLD4d8Pseudo_UPD
    1646297088U,	// VLD4d8_UPD
    67U,	// VLD4dAsm_16
    67U,	// VLD4dAsm_32
    67U,	// VLD4dAsm_8
    211U,	// VLD4dWB_fixed_Asm_16
    211U,	// VLD4dWB_fixed_Asm_32
    211U,	// VLD4dWB_fixed_Asm_8
    531491U,	// VLD4dWB_register_Asm_16
    531491U,	// VLD4dWB_register_Asm_32
    531491U,	// VLD4dWB_register_Asm_8
    572555264U,	// VLD4q16
    0U,	// VLD4q16Pseudo_UPD
    1646297088U,	// VLD4q16_UPD
    0U,	// VLD4q16oddPseudo
    0U,	// VLD4q16oddPseudo_UPD
    572555264U,	// VLD4q32
    0U,	// VLD4q32Pseudo_UPD
    1646297088U,	// VLD4q32_UPD
    0U,	// VLD4q32oddPseudo
    0U,	// VLD4q32oddPseudo_UPD
    572555264U,	// VLD4q8
    0U,	// VLD4q8Pseudo_UPD
    1646297088U,	// VLD4q8_UPD
    0U,	// VLD4q8oddPseudo
    0U,	// VLD4q8oddPseudo_UPD
    0U,	// VLD4qAsm_16
    0U,	// VLD4qAsm_32
    0U,	// VLD4qAsm_8
    4U,	// VLD4qWB_fixed_Asm_16
    4U,	// VLD4qWB_fixed_Asm_32
    4U,	// VLD4qWB_fixed_Asm_8
    2216U,	// VLD4qWB_register_Asm_16
    2216U,	// VLD4qWB_register_Asm_32
    2216U,	// VLD4qWB_register_Asm_8
    65U,	// VLDMDDB_UPD
    2120U,	// VLDMDIA
    65U,	// VLDMDIA_UPD
    0U,	// VLDMQIA
    65U,	// VLDMSDB_UPD
    2120U,	// VLDMSIA
    65U,	// VLDMSIA_UPD
    280U,	// VLDRD
    288U,	// VLDRH
    280U,	// VLDRS
    0U,	// VLLDM
    0U,	// VLSTM
    2072U,	// VMAXNMD
    2072U,	// VMAXNMH
    2072U,	// VMAXNMNDf
    2072U,	// VMAXNMNDh
    2072U,	// VMAXNMNQf
    2072U,	// VMAXNMNQh
    2072U,	// VMAXNMS
    527392U,	// VMAXfd
    527392U,	// VMAXfq
    527392U,	// VMAXhd
    527392U,	// VMAXhq
    2072U,	// VMAXsv16i8
    2072U,	// VMAXsv2i32
    2072U,	// VMAXsv4i16
    2072U,	// VMAXsv4i32
    2072U,	// VMAXsv8i16
    2072U,	// VMAXsv8i8
    2072U,	// VMAXuv16i8
    2072U,	// VMAXuv2i32
    2072U,	// VMAXuv4i16
    2072U,	// VMAXuv4i32
    2072U,	// VMAXuv8i16
    2072U,	// VMAXuv8i8
    2072U,	// VMINNMD
    2072U,	// VMINNMH
    2072U,	// VMINNMNDf
    2072U,	// VMINNMNDh
    2072U,	// VMINNMNQf
    2072U,	// VMINNMNQh
    2072U,	// VMINNMS
    527392U,	// VMINfd
    527392U,	// VMINfq
    527392U,	// VMINhd
    527392U,	// VMINhq
    2072U,	// VMINsv16i8
    2072U,	// VMINsv2i32
    2072U,	// VMINsv4i16
    2072U,	// VMINsv4i32
    2072U,	// VMINsv8i16
    2072U,	// VMINsv8i8
    2072U,	// VMINuv16i8
    2072U,	// VMINuv2i32
    2072U,	// VMINuv4i16
    2072U,	// VMINuv4i32
    2072U,	// VMINuv8i16
    2072U,	// VMINuv8i8
    531491U,	// VMLAD
    531491U,	// VMLAH
    16552U,	// VMLALslsv2i32
    16552U,	// VMLALslsv4i16
    16552U,	// VMLALsluv2i32
    16552U,	// VMLALsluv4i16
    2216U,	// VMLALsv2i64
    2216U,	// VMLALsv4i32
    2216U,	// VMLALsv8i16
    2216U,	// VMLALuv2i64
    2216U,	// VMLALuv4i32
    2216U,	// VMLALuv8i16
    531491U,	// VMLAS
    531491U,	// VMLAfd
    531491U,	// VMLAfq
    531491U,	// VMLAhd
    531491U,	// VMLAhq
    859171U,	// VMLAslfd
    859171U,	// VMLAslfq
    859171U,	// VMLAslhd
    859171U,	// VMLAslhq
    16552U,	// VMLAslv2i32
    16552U,	// VMLAslv4i16
    16552U,	// VMLAslv4i32
    16552U,	// VMLAslv8i16
    2216U,	// VMLAv16i8
    2216U,	// VMLAv2i32
    2216U,	// VMLAv4i16
    2216U,	// VMLAv4i32
    2216U,	// VMLAv8i16
    2216U,	// VMLAv8i8
    531491U,	// VMLSD
    531491U,	// VMLSH
    16552U,	// VMLSLslsv2i32
    16552U,	// VMLSLslsv4i16
    16552U,	// VMLSLsluv2i32
    16552U,	// VMLSLsluv4i16
    2216U,	// VMLSLsv2i64
    2216U,	// VMLSLsv4i32
    2216U,	// VMLSLsv8i16
    2216U,	// VMLSLuv2i64
    2216U,	// VMLSLuv4i32
    2216U,	// VMLSLuv8i16
    531491U,	// VMLSS
    531491U,	// VMLSfd
    531491U,	// VMLSfq
    531491U,	// VMLShd
    531491U,	// VMLShq
    859171U,	// VMLSslfd
    859171U,	// VMLSslfq
    859171U,	// VMLSslhd
    859171U,	// VMLSslhq
    16552U,	// VMLSslv2i32
    16552U,	// VMLSslv4i16
    16552U,	// VMLSslv4i32
    16552U,	// VMLSslv8i16
    2216U,	// VMLSv16i8
    2216U,	// VMLSv2i32
    2216U,	// VMLSv4i16
    2216U,	// VMLSv4i32
    2216U,	// VMLSv8i16
    2216U,	// VMLSv8i8
    64U,	// VMOVD
    0U,	// VMOVD0
    32768U,	// VMOVDRR
    0U,	// VMOVDcc
    0U,	// VMOVH
    64U,	// VMOVHR
    0U,	// VMOVLsv2i64
    0U,	// VMOVLsv4i32
    0U,	// VMOVLsv8i16
    0U,	// VMOVLuv2i64
    0U,	// VMOVLuv4i32
    0U,	// VMOVLuv8i16
    0U,	// VMOVNv2i32
    0U,	// VMOVNv4i16
    0U,	// VMOVNv8i8
    0U,	// VMOVQ0
    64U,	// VMOVRH
    32768U,	// VMOVRRD
    35684352U,	// VMOVRRS
    2048U,	// VMOVRS
    64U,	// VMOVS
    2048U,	// VMOVSR
    35684352U,	// VMOVSRR
    0U,	// VMOVScc
    0U,	// VMOVv16i8
    0U,	// VMOVv1i64
    0U,	// VMOVv2f32
    0U,	// VMOVv2i32
    0U,	// VMOVv2i64
    0U,	// VMOVv4f32
    0U,	// VMOVv4i16
    0U,	// VMOVv4i32
    0U,	// VMOVv8i16
    0U,	// VMOVv8i8
    4U,	// VMRS
    5U,	// VMRS_FPEXC
    5U,	// VMRS_FPINST
    5U,	// VMRS_FPINST2
    5U,	// VMRS_FPSID
    6U,	// VMRS_MVFR0
    6U,	// VMRS_MVFR1
    6U,	// VMRS_MVFR2
    0U,	// VMSR
    0U,	// VMSR_FPEXC
    0U,	// VMSR_FPINST
    0U,	// VMSR_FPINST2
    0U,	// VMSR_FPSID
    527392U,	// VMULD
    527392U,	// VMULH
    2072U,	// VMULLp64
    0U,	// VMULLp8
    17432U,	// VMULLslsv2i32
    17432U,	// VMULLslsv4i16
    17432U,	// VMULLsluv2i32
    17432U,	// VMULLsluv4i16
    2072U,	// VMULLsv2i64
    2072U,	// VMULLsv4i32
    2072U,	// VMULLsv8i16
    2072U,	// VMULLuv2i64
    2072U,	// VMULLuv4i32
    2072U,	// VMULLuv8i16
    527392U,	// VMULS
    527392U,	// VMULfd
    527392U,	// VMULfq
    527392U,	// VMULhd
    527392U,	// VMULhq
    0U,	// VMULpd
    0U,	// VMULpq
    887840U,	// VMULslfd
    887840U,	// VMULslfq
    887840U,	// VMULslhd
    887840U,	// VMULslhq
    17432U,	// VMULslv2i32
    17432U,	// VMULslv4i16
    17432U,	// VMULslv4i32
    17432U,	// VMULslv8i16
    2072U,	// VMULv16i8
    2072U,	// VMULv2i32
    2072U,	// VMULv4i16
    2072U,	// VMULv4i32
    2072U,	// VMULv8i16
    2072U,	// VMULv8i8
    2048U,	// VMVNd
    2048U,	// VMVNq
    0U,	// VMVNv2i32
    0U,	// VMVNv4i16
    0U,	// VMVNv4i32
    0U,	// VMVNv8i16
    64U,	// VNEGD
    64U,	// VNEGH
    64U,	// VNEGS
    64U,	// VNEGf32q
    64U,	// VNEGfd
    64U,	// VNEGhd
    64U,	// VNEGhq
    0U,	// VNEGs16d
    0U,	// VNEGs16q
    0U,	// VNEGs32d
    0U,	// VNEGs32q
    0U,	// VNEGs8d
    0U,	// VNEGs8q
    531491U,	// VNMLAD
    531491U,	// VNMLAH
    531491U,	// VNMLAS
    531491U,	// VNMLSD
    531491U,	// VNMLSH
    531491U,	// VNMLSS
    527392U,	// VNMULD
    527392U,	// VNMULH
    527392U,	// VNMULS
    32768U,	// VORNd
    32768U,	// VORNq
    32768U,	// VORRd
    0U,	// VORRiv2i32
    0U,	// VORRiv4i16
    0U,	// VORRiv4i32
    0U,	// VORRiv8i16
    32768U,	// VORRq
    0U,	// VPADALsv16i8
    0U,	// VPADALsv2i32
    0U,	// VPADALsv4i16
    0U,	// VPADALsv4i32
    0U,	// VPADALsv8i16
    0U,	// VPADALsv8i8
    0U,	// VPADALuv16i8
    0U,	// VPADALuv2i32
    0U,	// VPADALuv4i16
    0U,	// VPADALuv4i32
    0U,	// VPADALuv8i16
    0U,	// VPADALuv8i8
    0U,	// VPADDLsv16i8
    0U,	// VPADDLsv2i32
    0U,	// VPADDLsv4i16
    0U,	// VPADDLsv4i32
    0U,	// VPADDLsv8i16
    0U,	// VPADDLsv8i8
    0U,	// VPADDLuv16i8
    0U,	// VPADDLuv2i32
    0U,	// VPADDLuv4i16
    0U,	// VPADDLuv4i32
    0U,	// VPADDLuv8i16
    0U,	// VPADDLuv8i8
    527392U,	// VPADDf
    527392U,	// VPADDh
    2072U,	// VPADDi16
    2072U,	// VPADDi32
    2072U,	// VPADDi8
    527392U,	// VPMAXf
    527392U,	// VPMAXh
    2072U,	// VPMAXs16
    2072U,	// VPMAXs32
    2072U,	// VPMAXs8
    2072U,	// VPMAXu16
    2072U,	// VPMAXu32
    2072U,	// VPMAXu8
    527392U,	// VPMINf
    527392U,	// VPMINh
    2072U,	// VPMINs16
    2072U,	// VPMINs32
    2072U,	// VPMINs8
    2072U,	// VPMINu16
    2072U,	// VPMINu32
    2072U,	// VPMINu8
    0U,	// VQABSv16i8
    0U,	// VQABSv2i32
    0U,	// VQABSv4i16
    0U,	// VQABSv4i32
    0U,	// VQABSv8i16
    0U,	// VQABSv8i8
    2072U,	// VQADDsv16i8
    2072U,	// VQADDsv1i64
    2072U,	// VQADDsv2i32
    2072U,	// VQADDsv2i64
    2072U,	// VQADDsv4i16
    2072U,	// VQADDsv4i32
    2072U,	// VQADDsv8i16
    2072U,	// VQADDsv8i8
    2072U,	// VQADDuv16i8
    2072U,	// VQADDuv1i64
    2072U,	// VQADDuv2i32
    2072U,	// VQADDuv2i64
    2072U,	// VQADDuv4i16
    2072U,	// VQADDuv4i32
    2072U,	// VQADDuv8i16
    2072U,	// VQADDuv8i8
    16552U,	// VQDMLALslv2i32
    16552U,	// VQDMLALslv4i16
    2216U,	// VQDMLALv2i64
    2216U,	// VQDMLALv4i32
    16552U,	// VQDMLSLslv2i32
    16552U,	// VQDMLSLslv4i16
    2216U,	// VQDMLSLv2i64
    2216U,	// VQDMLSLv4i32
    17432U,	// VQDMULHslv2i32
    17432U,	// VQDMULHslv4i16
    17432U,	// VQDMULHslv4i32
    17432U,	// VQDMULHslv8i16
    2072U,	// VQDMULHv2i32
    2072U,	// VQDMULHv4i16
    2072U,	// VQDMULHv4i32
    2072U,	// VQDMULHv8i16
    17432U,	// VQDMULLslv2i32
    17432U,	// VQDMULLslv4i16
    2072U,	// VQDMULLv2i64
    2072U,	// VQDMULLv4i32
    0U,	// VQMOVNsuv2i32
    0U,	// VQMOVNsuv4i16
    0U,	// VQMOVNsuv8i8
    0U,	// VQMOVNsv2i32
    0U,	// VQMOVNsv4i16
    0U,	// VQMOVNsv8i8
    0U,	// VQMOVNuv2i32
    0U,	// VQMOVNuv4i16
    0U,	// VQMOVNuv8i8
    0U,	// VQNEGv16i8
    0U,	// VQNEGv2i32
    0U,	// VQNEGv4i16
    0U,	// VQNEGv4i32
    0U,	// VQNEGv8i16
    0U,	// VQNEGv8i8
    16552U,	// VQRDMLAHslv2i32
    16552U,	// VQRDMLAHslv4i16
    16552U,	// VQRDMLAHslv4i32
    16552U,	// VQRDMLAHslv8i16
    2216U,	// VQRDMLAHv2i32
    2216U,	// VQRDMLAHv4i16
    2216U,	// VQRDMLAHv4i32
    2216U,	// VQRDMLAHv8i16
    16552U,	// VQRDMLSHslv2i32
    16552U,	// VQRDMLSHslv4i16
    16552U,	// VQRDMLSHslv4i32
    16552U,	// VQRDMLSHslv8i16
    2216U,	// VQRDMLSHv2i32
    2216U,	// VQRDMLSHv4i16
    2216U,	// VQRDMLSHv4i32
    2216U,	// VQRDMLSHv8i16
    17432U,	// VQRDMULHslv2i32
    17432U,	// VQRDMULHslv4i16
    17432U,	// VQRDMULHslv4i32
    17432U,	// VQRDMULHslv8i16
    2072U,	// VQRDMULHv2i32
    2072U,	// VQRDMULHv4i16
    2072U,	// VQRDMULHv4i32
    2072U,	// VQRDMULHv8i16
    2072U,	// VQRSHLsv16i8
    2072U,	// VQRSHLsv1i64
    2072U,	// VQRSHLsv2i32
    2072U,	// VQRSHLsv2i64
    2072U,	// VQRSHLsv4i16
    2072U,	// VQRSHLsv4i32
    2072U,	// VQRSHLsv8i16
    2072U,	// VQRSHLsv8i8
    2072U,	// VQRSHLuv16i8
    2072U,	// VQRSHLuv1i64
    2072U,	// VQRSHLuv2i32
    2072U,	// VQRSHLuv2i64
    2072U,	// VQRSHLuv4i16
    2072U,	// VQRSHLuv4i32
    2072U,	// VQRSHLuv8i16
    2072U,	// VQRSHLuv8i8
    2072U,	// VQRSHRNsv2i32
    2072U,	// VQRSHRNsv4i16
    2072U,	// VQRSHRNsv8i8
    2072U,	// VQRSHRNuv2i32
    2072U,	// VQRSHRNuv4i16
    2072U,	// VQRSHRNuv8i8
    2072U,	// VQRSHRUNv2i32
    2072U,	// VQRSHRUNv4i16
    2072U,	// VQRSHRUNv8i8
    2072U,	// VQSHLsiv16i8
    2072U,	// VQSHLsiv1i64
    2072U,	// VQSHLsiv2i32
    2072U,	// VQSHLsiv2i64
    2072U,	// VQSHLsiv4i16
    2072U,	// VQSHLsiv4i32
    2072U,	// VQSHLsiv8i16
    2072U,	// VQSHLsiv8i8
    2072U,	// VQSHLsuv16i8
    2072U,	// VQSHLsuv1i64
    2072U,	// VQSHLsuv2i32
    2072U,	// VQSHLsuv2i64
    2072U,	// VQSHLsuv4i16
    2072U,	// VQSHLsuv4i32
    2072U,	// VQSHLsuv8i16
    2072U,	// VQSHLsuv8i8
    2072U,	// VQSHLsv16i8
    2072U,	// VQSHLsv1i64
    2072U,	// VQSHLsv2i32
    2072U,	// VQSHLsv2i64
    2072U,	// VQSHLsv4i16
    2072U,	// VQSHLsv4i32
    2072U,	// VQSHLsv8i16
    2072U,	// VQSHLsv8i8
    2072U,	// VQSHLuiv16i8
    2072U,	// VQSHLuiv1i64
    2072U,	// VQSHLuiv2i32
    2072U,	// VQSHLuiv2i64
    2072U,	// VQSHLuiv4i16
    2072U,	// VQSHLuiv4i32
    2072U,	// VQSHLuiv8i16
    2072U,	// VQSHLuiv8i8
    2072U,	// VQSHLuv16i8
    2072U,	// VQSHLuv1i64
    2072U,	// VQSHLuv2i32
    2072U,	// VQSHLuv2i64
    2072U,	// VQSHLuv4i16
    2072U,	// VQSHLuv4i32
    2072U,	// VQSHLuv8i16
    2072U,	// VQSHLuv8i8
    2072U,	// VQSHRNsv2i32
    2072U,	// VQSHRNsv4i16
    2072U,	// VQSHRNsv8i8
    2072U,	// VQSHRNuv2i32
    2072U,	// VQSHRNuv4i16
    2072U,	// VQSHRNuv8i8
    2072U,	// VQSHRUNv2i32
    2072U,	// VQSHRUNv4i16
    2072U,	// VQSHRUNv8i8
    2072U,	// VQSUBsv16i8
    2072U,	// VQSUBsv1i64
    2072U,	// VQSUBsv2i32
    2072U,	// VQSUBsv2i64
    2072U,	// VQSUBsv4i16
    2072U,	// VQSUBsv4i32
    2072U,	// VQSUBsv8i16
    2072U,	// VQSUBsv8i8
    2072U,	// VQSUBuv16i8
    2072U,	// VQSUBuv1i64
    2072U,	// VQSUBuv2i32
    2072U,	// VQSUBuv2i64
    2072U,	// VQSUBuv4i16
    2072U,	// VQSUBuv4i32
    2072U,	// VQSUBuv8i16
    2072U,	// VQSUBuv8i8
    2072U,	// VRADDHNv2i32
    2072U,	// VRADDHNv4i16
    2072U,	// VRADDHNv8i8
    0U,	// VRECPEd
    64U,	// VRECPEfd
    64U,	// VRECPEfq
    64U,	// VRECPEhd
    64U,	// VRECPEhq
    0U,	// VRECPEq
    527392U,	// VRECPSfd
    527392U,	// VRECPSfq
    527392U,	// VRECPShd
    527392U,	// VRECPShq
    2048U,	// VREV16d8
    2048U,	// VREV16q8
    2048U,	// VREV32d16
    2048U,	// VREV32d8
    2048U,	// VREV32q16
    2048U,	// VREV32q8
    2048U,	// VREV64d16
    2048U,	// VREV64d32
    2048U,	// VREV64d8
    2048U,	// VREV64q16
    2048U,	// VREV64q32
    2048U,	// VREV64q8
    2072U,	// VRHADDsv16i8
    2072U,	// VRHADDsv2i32
    2072U,	// VRHADDsv4i16
    2072U,	// VRHADDsv4i32
    2072U,	// VRHADDsv8i16
    2072U,	// VRHADDsv8i8
    2072U,	// VRHADDuv16i8
    2072U,	// VRHADDuv2i32
    2072U,	// VRHADDuv4i16
    2072U,	// VRHADDuv4i32
    2072U,	// VRHADDuv8i16
    2072U,	// VRHADDuv8i8
    0U,	// VRINTAD
    0U,	// VRINTAH
    0U,	// VRINTANDf
    0U,	// VRINTANDh
    0U,	// VRINTANQf
    0U,	// VRINTANQh
    0U,	// VRINTAS
    0U,	// VRINTMD
    0U,	// VRINTMH
    0U,	// VRINTMNDf
    0U,	// VRINTMNDh
    0U,	// VRINTMNQf
    0U,	// VRINTMNQh
    0U,	// VRINTMS
    0U,	// VRINTND
    0U,	// VRINTNH
    0U,	// VRINTNNDf
    0U,	// VRINTNNDh
    0U,	// VRINTNNQf
    0U,	// VRINTNNQh
    0U,	// VRINTNS
    0U,	// VRINTPD
    0U,	// VRINTPH
    0U,	// VRINTPNDf
    0U,	// VRINTPNDh
    0U,	// VRINTPNQf
    0U,	// VRINTPNQh
    0U,	// VRINTPS
    64U,	// VRINTRD
    64U,	// VRINTRH
    64U,	// VRINTRS
    64U,	// VRINTXD
    64U,	// VRINTXH
    0U,	// VRINTXNDf
    0U,	// VRINTXNDh
    0U,	// VRINTXNQf
    0U,	// VRINTXNQh
    64U,	// VRINTXS
    64U,	// VRINTZD
    64U,	// VRINTZH
    0U,	// VRINTZNDf
    0U,	// VRINTZNDh
    0U,	// VRINTZNQf
    0U,	// VRINTZNQh
    64U,	// VRINTZS
    2072U,	// VRSHLsv16i8
    2072U,	// VRSHLsv1i64
    2072U,	// VRSHLsv2i32
    2072U,	// VRSHLsv2i64
    2072U,	// VRSHLsv4i16
    2072U,	// VRSHLsv4i32
    2072U,	// VRSHLsv8i16
    2072U,	// VRSHLsv8i8
    2072U,	// VRSHLuv16i8
    2072U,	// VRSHLuv1i64
    2072U,	// VRSHLuv2i32
    2072U,	// VRSHLuv2i64
    2072U,	// VRSHLuv4i16
    2072U,	// VRSHLuv4i32
    2072U,	// VRSHLuv8i16
    2072U,	// VRSHLuv8i8
    2072U,	// VRSHRNv2i32
    2072U,	// VRSHRNv4i16
    2072U,	// VRSHRNv8i8
    2072U,	// VRSHRsv16i8
    2072U,	// VRSHRsv1i64
    2072U,	// VRSHRsv2i32
    2072U,	// VRSHRsv2i64
    2072U,	// VRSHRsv4i16
    2072U,	// VRSHRsv4i32
    2072U,	// VRSHRsv8i16
    2072U,	// VRSHRsv8i8
    2072U,	// VRSHRuv16i8
    2072U,	// VRSHRuv1i64
    2072U,	// VRSHRuv2i32
    2072U,	// VRSHRuv2i64
    2072U,	// VRSHRuv4i16
    2072U,	// VRSHRuv4i32
    2072U,	// VRSHRuv8i16
    2072U,	// VRSHRuv8i8
    0U,	// VRSQRTEd
    64U,	// VRSQRTEfd
    64U,	// VRSQRTEfq
    64U,	// VRSQRTEhd
    64U,	// VRSQRTEhq
    0U,	// VRSQRTEq
    527392U,	// VRSQRTSfd
    527392U,	// VRSQRTSfq
    527392U,	// VRSQRTShd
    527392U,	// VRSQRTShq
    2216U,	// VRSRAsv16i8
    2216U,	// VRSRAsv1i64
    2216U,	// VRSRAsv2i32
    2216U,	// VRSRAsv2i64
    2216U,	// VRSRAsv4i16
    2216U,	// VRSRAsv4i32
    2216U,	// VRSRAsv8i16
    2216U,	// VRSRAsv8i8
    2216U,	// VRSRAuv16i8
    2216U,	// VRSRAuv1i64
    2216U,	// VRSRAuv2i32
    2216U,	// VRSRAuv2i64
    2216U,	// VRSRAuv4i16
    2216U,	// VRSRAuv4i32
    2216U,	// VRSRAuv8i16
    2216U,	// VRSRAuv8i8
    2072U,	// VRSUBHNv2i32
    2072U,	// VRSUBHNv4i16
    2072U,	// VRSUBHNv8i8
    2072U,	// VSELEQD
    2072U,	// VSELEQH
    2072U,	// VSELEQS
    2072U,	// VSELGED
    2072U,	// VSELGEH
    2072U,	// VSELGES
    2072U,	// VSELGTD
    2072U,	// VSELGTH
    2072U,	// VSELGTS
    2072U,	// VSELVSD
    2072U,	// VSELVSH
    2072U,	// VSELVSS
    6U,	// VSETLNi16
    6U,	// VSETLNi32
    6U,	// VSETLNi8
    2072U,	// VSHLLi16
    2072U,	// VSHLLi32
    2072U,	// VSHLLi8
    2072U,	// VSHLLsv2i64
    2072U,	// VSHLLsv4i32
    2072U,	// VSHLLsv8i16
    2072U,	// VSHLLuv2i64
    2072U,	// VSHLLuv4i32
    2072U,	// VSHLLuv8i16
    2072U,	// VSHLiv16i8
    2072U,	// VSHLiv1i64
    2072U,	// VSHLiv2i32
    2072U,	// VSHLiv2i64
    2072U,	// VSHLiv4i16
    2072U,	// VSHLiv4i32
    2072U,	// VSHLiv8i16
    2072U,	// VSHLiv8i8
    2072U,	// VSHLsv16i8
    2072U,	// VSHLsv1i64
    2072U,	// VSHLsv2i32
    2072U,	// VSHLsv2i64
    2072U,	// VSHLsv4i16
    2072U,	// VSHLsv4i32
    2072U,	// VSHLsv8i16
    2072U,	// VSHLsv8i8
    2072U,	// VSHLuv16i8
    2072U,	// VSHLuv1i64
    2072U,	// VSHLuv2i32
    2072U,	// VSHLuv2i64
    2072U,	// VSHLuv4i16
    2072U,	// VSHLuv4i32
    2072U,	// VSHLuv8i16
    2072U,	// VSHLuv8i8
    2072U,	// VSHRNv2i32
    2072U,	// VSHRNv4i16
    2072U,	// VSHRNv8i8
    2072U,	// VSHRsv16i8
    2072U,	// VSHRsv1i64
    2072U,	// VSHRsv2i32
    2072U,	// VSHRsv2i64
    2072U,	// VSHRsv4i16
    2072U,	// VSHRsv4i32
    2072U,	// VSHRsv8i16
    2072U,	// VSHRsv8i8
    2072U,	// VSHRuv16i8
    2072U,	// VSHRuv1i64
    2072U,	// VSHRuv2i32
    2072U,	// VSHRuv2i64
    2072U,	// VSHRuv4i16
    2072U,	// VSHRuv4i32
    2072U,	// VSHRuv8i16
    2072U,	// VSHRuv8i8
    0U,	// VSHTOD
    7U,	// VSHTOH
    0U,	// VSHTOS
    0U,	// VSITOD
    0U,	// VSITOH
    0U,	// VSITOS
    557080U,	// VSLIv16i8
    557080U,	// VSLIv1i64
    557080U,	// VSLIv2i32
    557080U,	// VSLIv2i64
    557080U,	// VSLIv4i16
    557080U,	// VSLIv4i32
    557080U,	// VSLIv8i16
    557080U,	// VSLIv8i8
    7U,	// VSLTOD
    7U,	// VSLTOH
    7U,	// VSLTOS
    64U,	// VSQRTD
    64U,	// VSQRTH
    64U,	// VSQRTS
    2216U,	// VSRAsv16i8
    2216U,	// VSRAsv1i64
    2216U,	// VSRAsv2i32
    2216U,	// VSRAsv2i64
    2216U,	// VSRAsv4i16
    2216U,	// VSRAsv4i32
    2216U,	// VSRAsv8i16
    2216U,	// VSRAsv8i8
    2216U,	// VSRAuv16i8
    2216U,	// VSRAuv1i64
    2216U,	// VSRAuv2i32
    2216U,	// VSRAuv2i64
    2216U,	// VSRAuv4i16
    2216U,	// VSRAuv4i32
    2216U,	// VSRAuv8i16
    2216U,	// VSRAuv8i8
    557080U,	// VSRIv16i8
    557080U,	// VSRIv1i64
    557080U,	// VSRIv2i32
    557080U,	// VSRIv2i64
    557080U,	// VSRIv4i16
    557080U,	// VSRIv4i32
    557080U,	// VSRIv8i16
    557080U,	// VSRIv8i8
    300U,	// VST1LNd16
    21570868U,	// VST1LNd16_UPD
    300U,	// VST1LNd32
    21570868U,	// VST1LNd32_UPD
    300U,	// VST1LNd8
    21570868U,	// VST1LNd8_UPD
    2280U,	// VST1LNdAsm_16
    2280U,	// VST1LNdAsm_32
    2280U,	// VST1LNdAsm_8
    10472U,	// VST1LNdWB_fixed_Asm_16
    10472U,	// VST1LNdWB_fixed_Asm_32
    10472U,	// VST1LNdWB_fixed_Asm_8
    655592U,	// VST1LNdWB_register_Asm_16
    655592U,	// VST1LNdWB_register_Asm_32
    655592U,	// VST1LNdWB_register_Asm_8
    0U,	// VST1LNq16Pseudo
    0U,	// VST1LNq16Pseudo_UPD
    0U,	// VST1LNq32Pseudo
    0U,	// VST1LNq32Pseudo_UPD
    0U,	// VST1LNq8Pseudo
    0U,	// VST1LNq8Pseudo_UPD
    0U,	// VST1d16
    0U,	// VST1d16Q
    0U,	// VST1d16Qwb_fixed
    0U,	// VST1d16Qwb_register
    0U,	// VST1d16T
    0U,	// VST1d16Twb_fixed
    0U,	// VST1d16Twb_register
    0U,	// VST1d16wb_fixed
    0U,	// VST1d16wb_register
    0U,	// VST1d32
    0U,	// VST1d32Q
    0U,	// VST1d32Qwb_fixed
    0U,	// VST1d32Qwb_register
    0U,	// VST1d32T
    0U,	// VST1d32Twb_fixed
    0U,	// VST1d32Twb_register
    0U,	// VST1d32wb_fixed
    0U,	// VST1d32wb_register
    0U,	// VST1d64
    0U,	// VST1d64Q
    0U,	// VST1d64QPseudo
    0U,	// VST1d64QPseudoWB_fixed
    0U,	// VST1d64QPseudoWB_register
    0U,	// VST1d64Qwb_fixed
    0U,	// VST1d64Qwb_register
    0U,	// VST1d64T
    0U,	// VST1d64TPseudo
    0U,	// VST1d64TPseudoWB_fixed
    0U,	// VST1d64TPseudoWB_register
    0U,	// VST1d64Twb_fixed
    0U,	// VST1d64Twb_register
    0U,	// VST1d64wb_fixed
    0U,	// VST1d64wb_register
    0U,	// VST1d8
    0U,	// VST1d8Q
    0U,	// VST1d8Qwb_fixed
    0U,	// VST1d8Qwb_register
    0U,	// VST1d8T
    0U,	// VST1d8Twb_fixed
    0U,	// VST1d8Twb_register
    0U,	// VST1d8wb_fixed
    0U,	// VST1d8wb_register
    0U,	// VST1q16
    0U,	// VST1q16wb_fixed
    0U,	// VST1q16wb_register
    0U,	// VST1q32
    0U,	// VST1q32wb_fixed
    0U,	// VST1q32wb_register
    0U,	// VST1q64
    0U,	// VST1q64wb_fixed
    0U,	// VST1q64wb_register
    0U,	// VST1q8
    0U,	// VST1q8wb_fixed
    0U,	// VST1q8wb_register
    220769500U,	// VST2LNd16
    0U,	// VST2LNd16Pseudo
    0U,	// VST2LNd16Pseudo_UPD
    928996U,	// VST2LNd16_UPD
    220769500U,	// VST2LNd32
    0U,	// VST2LNd32Pseudo
    0U,	// VST2LNd32Pseudo_UPD
    928996U,	// VST2LNd32_UPD
    220769500U,	// VST2LNd8
    0U,	// VST2LNd8Pseudo
    0U,	// VST2LNd8Pseudo_UPD
    928996U,	// VST2LNd8_UPD
    2280U,	// VST2LNdAsm_16
    2280U,	// VST2LNdAsm_32
    2280U,	// VST2LNdAsm_8
    10472U,	// VST2LNdWB_fixed_Asm_16
    10472U,	// VST2LNdWB_fixed_Asm_32
    10472U,	// VST2LNdWB_fixed_Asm_8
    655592U,	// VST2LNdWB_register_Asm_16
    655592U,	// VST2LNdWB_register_Asm_32
    655592U,	// VST2LNdWB_register_Asm_8
    220769500U,	// VST2LNq16
    0U,	// VST2LNq16Pseudo
    0U,	// VST2LNq16Pseudo_UPD
    928996U,	// VST2LNq16_UPD
    220769500U,	// VST2LNq32
    0U,	// VST2LNq32Pseudo
    0U,	// VST2LNq32Pseudo_UPD
    928996U,	// VST2LNq32_UPD
    2280U,	// VST2LNqAsm_16
    2280U,	// VST2LNqAsm_32
    10472U,	// VST2LNqWB_fixed_Asm_16
    10472U,	// VST2LNqWB_fixed_Asm_32
    655592U,	// VST2LNqWB_register_Asm_16
    655592U,	// VST2LNqWB_register_Asm_32
    0U,	// VST2b16
    0U,	// VST2b16wb_fixed
    0U,	// VST2b16wb_register
    0U,	// VST2b32
    0U,	// VST2b32wb_fixed
    0U,	// VST2b32wb_register
    0U,	// VST2b8
    0U,	// VST2b8wb_fixed
    0U,	// VST2b8wb_register
    0U,	// VST2d16
    0U,	// VST2d16wb_fixed
    0U,	// VST2d16wb_register
    0U,	// VST2d32
    0U,	// VST2d32wb_fixed
    0U,	// VST2d32wb_register
    0U,	// VST2d8
    0U,	// VST2d8wb_fixed
    0U,	// VST2d8wb_register
    0U,	// VST2q16
    0U,	// VST2q16Pseudo
    0U,	// VST2q16PseudoWB_fixed
    0U,	// VST2q16PseudoWB_register
    0U,	// VST2q16wb_fixed
    0U,	// VST2q16wb_register
    0U,	// VST2q32
    0U,	// VST2q32Pseudo
    0U,	// VST2q32PseudoWB_fixed
    0U,	// VST2q32PseudoWB_register
    0U,	// VST2q32wb_fixed
    0U,	// VST2q32wb_register
    0U,	// VST2q8
    0U,	// VST2q8Pseudo
    0U,	// VST2q8PseudoWB_fixed
    0U,	// VST2q8PseudoWB_register
    0U,	// VST2q8wb_fixed
    0U,	// VST2q8wb_register
    254324020U,	// VST3LNd16
    0U,	// VST3LNd16Pseudo
    0U,	// VST3LNd16Pseudo_UPD
    316U,	// VST3LNd16_UPD
    254324020U,	// VST3LNd32
    0U,	// VST3LNd32Pseudo
    0U,	// VST3LNd32Pseudo_UPD
    316U,	// VST3LNd32_UPD
    254324020U,	// VST3LNd8
    0U,	// VST3LNd8Pseudo
    0U,	// VST3LNd8Pseudo_UPD
    316U,	// VST3LNd8_UPD
    2280U,	// VST3LNdAsm_16
    2280U,	// VST3LNdAsm_32
    2280U,	// VST3LNdAsm_8
    10472U,	// VST3LNdWB_fixed_Asm_16
    10472U,	// VST3LNdWB_fixed_Asm_32
    10472U,	// VST3LNdWB_fixed_Asm_8
    655592U,	// VST3LNdWB_register_Asm_16
    655592U,	// VST3LNdWB_register_Asm_32
    655592U,	// VST3LNdWB_register_Asm_8
    254324020U,	// VST3LNq16
    0U,	// VST3LNq16Pseudo
    0U,	// VST3LNq16Pseudo_UPD
    316U,	// VST3LNq16_UPD
    254324020U,	// VST3LNq32
    0U,	// VST3LNq32Pseudo
    0U,	// VST3LNq32Pseudo_UPD
    316U,	// VST3LNq32_UPD
    2280U,	// VST3LNqAsm_16
    2280U,	// VST3LNqAsm_32
    10472U,	// VST3LNqWB_fixed_Asm_16
    10472U,	// VST3LNqWB_fixed_Asm_32
    655592U,	// VST3LNqWB_register_Asm_16
    655592U,	// VST3LNqWB_register_Asm_32
    285868200U,	// VST3d16
    0U,	// VST3d16Pseudo
    0U,	// VST3d16Pseudo_UPD
    18752U,	// VST3d16_UPD
    285868200U,	// VST3d32
    0U,	// VST3d32Pseudo
    0U,	// VST3d32Pseudo_UPD
    18752U,	// VST3d32_UPD
    285868200U,	// VST3d8
    0U,	// VST3d8Pseudo
    0U,	// VST3d8Pseudo_UPD
    18752U,	// VST3d8_UPD
    67U,	// VST3dAsm_16
    67U,	// VST3dAsm_32
    67U,	// VST3dAsm_8
    211U,	// VST3dWB_fixed_Asm_16
    211U,	// VST3dWB_fixed_Asm_32
    211U,	// VST3dWB_fixed_Asm_8
    531491U,	// VST3dWB_register_Asm_16
    531491U,	// VST3dWB_register_Asm_32
    531491U,	// VST3dWB_register_Asm_8
    285868200U,	// VST3q16
    0U,	// VST3q16Pseudo_UPD
    18752U,	// VST3q16_UPD
    0U,	// VST3q16oddPseudo
    0U,	// VST3q16oddPseudo_UPD
    285868200U,	// VST3q32
    0U,	// VST3q32Pseudo_UPD
    18752U,	// VST3q32_UPD
    0U,	// VST3q32oddPseudo
    0U,	// VST3q32oddPseudo_UPD
    285868200U,	// VST3q8
    0U,	// VST3q8Pseudo_UPD
    18752U,	// VST3q8_UPD
    0U,	// VST3q8oddPseudo
    0U,	// VST3q8oddPseudo_UPD
    0U,	// VST3qAsm_16
    0U,	// VST3qAsm_32
    0U,	// VST3qAsm_8
    4U,	// VST3qWB_fixed_Asm_16
    4U,	// VST3qWB_fixed_Asm_32
    4U,	// VST3qWB_fixed_Asm_8
    2216U,	// VST3qWB_register_Asm_16
    2216U,	// VST3qWB_register_Asm_32
    2216U,	// VST3qWB_register_Asm_8
    321432804U,	// VST4LNd16
    0U,	// VST4LNd16Pseudo
    0U,	// VST4LNd16Pseudo_UPD
    19700U,	// VST4LNd16_UPD
    321432804U,	// VST4LNd32
    0U,	// VST4LNd32Pseudo
    0U,	// VST4LNd32Pseudo_UPD
    19700U,	// VST4LNd32_UPD
    321432804U,	// VST4LNd8
    0U,	// VST4LNd8Pseudo
    0U,	// VST4LNd8Pseudo_UPD
    19700U,	// VST4LNd8_UPD
    2280U,	// VST4LNdAsm_16
    2280U,	// VST4LNdAsm_32
    2280U,	// VST4LNdAsm_8
    10472U,	// VST4LNdWB_fixed_Asm_16
    10472U,	// VST4LNdWB_fixed_Asm_32
    10472U,	// VST4LNdWB_fixed_Asm_8
    655592U,	// VST4LNdWB_register_Asm_16
    655592U,	// VST4LNdWB_register_Asm_32
    655592U,	// VST4LNdWB_register_Asm_8
    321432804U,	// VST4LNq16
    0U,	// VST4LNq16Pseudo
    0U,	// VST4LNq16Pseudo_UPD
    19700U,	// VST4LNq16_UPD
    321432804U,	// VST4LNq32
    0U,	// VST4LNq32Pseudo
    0U,	// VST4LNq32Pseudo_UPD
    19700U,	// VST4LNq32_UPD
    2280U,	// VST4LNqAsm_16
    2280U,	// VST4LNqAsm_32
    10472U,	// VST4LNqWB_fixed_Asm_16
    10472U,	// VST4LNqWB_fixed_Asm_32
    655592U,	// VST4LNqWB_register_Asm_16
    655592U,	// VST4LNqWB_register_Asm_32
    338297000U,	// VST4d16
    0U,	// VST4d16Pseudo
    0U,	// VST4d16Pseudo_UPD
    950592U,	// VST4d16_UPD
    338297000U,	// VST4d32
    0U,	// VST4d32Pseudo
    0U,	// VST4d32Pseudo_UPD
    950592U,	// VST4d32_UPD
    338297000U,	// VST4d8
    0U,	// VST4d8Pseudo
    0U,	// VST4d8Pseudo_UPD
    950592U,	// VST4d8_UPD
    67U,	// VST4dAsm_16
    67U,	// VST4dAsm_32
    67U,	// VST4dAsm_8
    211U,	// VST4dWB_fixed_Asm_16
    211U,	// VST4dWB_fixed_Asm_32
    211U,	// VST4dWB_fixed_Asm_8
    531491U,	// VST4dWB_register_Asm_16
    531491U,	// VST4dWB_register_Asm_32
    531491U,	// VST4dWB_register_Asm_8
    338297000U,	// VST4q16
    0U,	// VST4q16Pseudo_UPD
    950592U,	// VST4q16_UPD
    0U,	// VST4q16oddPseudo
    0U,	// VST4q16oddPseudo_UPD
    338297000U,	// VST4q32
    0U,	// VST4q32Pseudo_UPD
    950592U,	// VST4q32_UPD
    0U,	// VST4q32oddPseudo
    0U,	// VST4q32oddPseudo_UPD
    338297000U,	// VST4q8
    0U,	// VST4q8Pseudo_UPD
    950592U,	// VST4q8_UPD
    0U,	// VST4q8oddPseudo
    0U,	// VST4q8oddPseudo_UPD
    0U,	// VST4qAsm_16
    0U,	// VST4qAsm_32
    0U,	// VST4qAsm_8
    4U,	// VST4qWB_fixed_Asm_16
    4U,	// VST4qWB_fixed_Asm_32
    4U,	// VST4qWB_fixed_Asm_8
    2216U,	// VST4qWB_register_Asm_16
    2216U,	// VST4qWB_register_Asm_32
    2216U,	// VST4qWB_register_Asm_8
    65U,	// VSTMDDB_UPD
    2120U,	// VSTMDIA
    65U,	// VSTMDIA_UPD
    0U,	// VSTMQIA
    65U,	// VSTMSDB_UPD
    2120U,	// VSTMSIA
    65U,	// VSTMSIA_UPD
    280U,	// VSTRD
    288U,	// VSTRH
    280U,	// VSTRS
    527392U,	// VSUBD
    527392U,	// VSUBH
    2072U,	// VSUBHNv2i32
    2072U,	// VSUBHNv4i16
    2072U,	// VSUBHNv8i8
    2072U,	// VSUBLsv2i64
    2072U,	// VSUBLsv4i32
    2072U,	// VSUBLsv8i16
    2072U,	// VSUBLuv2i64
    2072U,	// VSUBLuv4i32
    2072U,	// VSUBLuv8i16
    527392U,	// VSUBS
    2072U,	// VSUBWsv2i64
    2072U,	// VSUBWsv4i32
    2072U,	// VSUBWsv8i16
    2072U,	// VSUBWuv2i64
    2072U,	// VSUBWuv4i32
    2072U,	// VSUBWuv8i16
    527392U,	// VSUBfd
    527392U,	// VSUBfq
    527392U,	// VSUBhd
    527392U,	// VSUBhq
    2072U,	// VSUBv16i8
    2072U,	// VSUBv1i64
    2072U,	// VSUBv2i32
    2072U,	// VSUBv2i64
    2072U,	// VSUBv4i16
    2072U,	// VSUBv4i32
    2072U,	// VSUBv8i16
    2072U,	// VSUBv8i8
    2048U,	// VSWPd
    2048U,	// VSWPq
    328U,	// VTBL1
    336U,	// VTBL2
    344U,	// VTBL3
    0U,	// VTBL3Pseudo
    352U,	// VTBL4
    0U,	// VTBL4Pseudo
    360U,	// VTBX1
    368U,	// VTBX2
    376U,	// VTBX3
    0U,	// VTBX3Pseudo
    384U,	// VTBX4
    0U,	// VTBX4Pseudo
    0U,	// VTOSHD
    7U,	// VTOSHH
    0U,	// VTOSHS
    0U,	// VTOSIRD
    0U,	// VTOSIRH
    0U,	// VTOSIRS
    0U,	// VTOSIZD
    0U,	// VTOSIZH
    0U,	// VTOSIZS
    7U,	// VTOSLD
    7U,	// VTOSLH
    7U,	// VTOSLS
    0U,	// VTOUHD
    7U,	// VTOUHH
    0U,	// VTOUHS
    0U,	// VTOUIRD
    0U,	// VTOUIRH
    0U,	// VTOUIRS
    0U,	// VTOUIZD
    0U,	// VTOUIZH
    0U,	// VTOUIZS
    7U,	// VTOULD
    7U,	// VTOULH
    7U,	// VTOULS
    2048U,	// VTRNd16
    2048U,	// VTRNd32
    2048U,	// VTRNd8
    2048U,	// VTRNq16
    2048U,	// VTRNq32
    2048U,	// VTRNq8
    32768U,	// VTSTv16i8
    32768U,	// VTSTv2i32
    32768U,	// VTSTv4i16
    32768U,	// VTSTv4i32
    32768U,	// VTSTv8i16
    32768U,	// VTSTv8i8
    0U,	// VUHTOD
    7U,	// VUHTOH
    0U,	// VUHTOS
    0U,	// VUITOD
    0U,	// VUITOH
    0U,	// VUITOS
    7U,	// VULTOD
    7U,	// VULTOH
    7U,	// VULTOS
    2048U,	// VUZPd16
    2048U,	// VUZPd8
    2048U,	// VUZPq16
    2048U,	// VUZPq32
    2048U,	// VUZPq8
    2048U,	// VZIPd16
    2048U,	// VZIPd8
    2048U,	// VZIPq16
    2048U,	// VZIPq32
    2048U,	// VZIPq8
    0U,	// WIN__CHKSTK
    0U,	// WIN__DBZCHK
    20552U,	// sysLDMDA
    393U,	// sysLDMDA_UPD
    20552U,	// sysLDMDB
    393U,	// sysLDMDB_UPD
    20552U,	// sysLDMIA
    393U,	// sysLDMIA_UPD
    20552U,	// sysLDMIB
    393U,	// sysLDMIB_UPD
    20552U,	// sysSTMDA
    393U,	// sysSTMDA_UPD
    20552U,	// sysSTMDB
    393U,	// sysSTMDB_UPD
    20552U,	// sysSTMIA
    393U,	// sysSTMIA_UPD
    20552U,	// sysSTMIB
    393U,	// sysSTMIB_UPD
    0U,	// t2ABS
    32768U,	// t2ADCri
    32768U,	// t2ADCrr
    983040U,	// t2ADCrs
    0U,	// t2ADDSri
    0U,	// t2ADDSrr
    0U,	// t2ADDSrs
    32768U,	// t2ADDri
    32768U,	// t2ADDri12
    32768U,	// t2ADDrr
    983040U,	// t2ADDrs
    8U,	// t2ADR
    32768U,	// t2ANDri
    32768U,	// t2ANDrr
    983040U,	// t2ANDrs
    1015808U,	// t2ASRri
    32768U,	// t2ASRrr
    0U,	// t2B
    16U,	// t2BFC
    98328U,	// t2BFI
    32768U,	// t2BICri
    32768U,	// t2BICrr
    983040U,	// t2BICrs
    0U,	// t2BR_JT
    0U,	// t2BXJ
    0U,	// t2Bcc
    1056U,	// t2CDP
    1056U,	// t2CDP2
    0U,	// t2CLREX
    2048U,	// t2CLZ
    2048U,	// t2CMNri
    2048U,	// t2CMNzrr
    400U,	// t2CMNzrs
    2048U,	// t2CMPri
    2048U,	// t2CMPrr
    400U,	// t2CMPrs
    0U,	// t2CPS1p
    0U,	// t2CPS2p
    2072U,	// t2CPS3p
    2072U,	// t2CRC32B
    2072U,	// t2CRC32CB
    2072U,	// t2CRC32CH
    2072U,	// t2CRC32CW
    2072U,	// t2CRC32H
    2072U,	// t2CRC32W
    0U,	// t2DBG
    0U,	// t2DCPS1
    0U,	// t2DCPS2
    0U,	// t2DCPS3
    0U,	// t2DMB
    0U,	// t2DSB
    32768U,	// t2EORri
    32768U,	// t2EORrr
    983040U,	// t2EORrs
    0U,	// t2HINT
    0U,	// t2HVC
    0U,	// t2ISB
    0U,	// t2IT
    0U,	// t2Int_eh_sjlj_setjmp
    0U,	// t2Int_eh_sjlj_setjmp_nofp
    80U,	// t2LDA
    80U,	// t2LDAB
    80U,	// t2LDAEX
    80U,	// t2LDAEXB
    491520U,	// t2LDAEXD
    80U,	// t2LDAEXH
    80U,	// t2LDAH
    89U,	// t2LDC2L_OFFSET
    131169U,	// t2LDC2L_OPTION
    163937U,	// t2LDC2L_POST
    105U,	// t2LDC2L_PRE
    89U,	// t2LDC2_OFFSET
    131169U,	// t2LDC2_OPTION
    163937U,	// t2LDC2_POST
    105U,	// t2LDC2_PRE
    89U,	// t2LDCL_OFFSET
    131169U,	// t2LDCL_OPTION
    163937U,	// t2LDCL_POST
    105U,	// t2LDCL_PRE
    89U,	// t2LDC_OFFSET
    131169U,	// t2LDC_OPTION
    163937U,	// t2LDC_POST
    105U,	// t2LDC_PRE
    2120U,	// t2LDMDB
    65U,	// t2LDMDB_UPD
    2120U,	// t2LDMIA
    0U,	// t2LDMIA_RET
    65U,	// t2LDMIA_UPD
    408U,	// t2LDRBT
    21600U,	// t2LDRB_POST
    416U,	// t2LDRB_PRE
    128U,	// t2LDRBi12
    408U,	// t2LDRBi8
    424U,	// t2LDRBpci
    2048U,	// t2LDRBpcrel
    432U,	// t2LDRBs
    2048U,	// t2LDRConstPool
    23330816U,	// t2LDRD_POST
    1048576U,	// t2LDRD_PRE
    1081344U,	// t2LDRDi8
    440U,	// t2LDREX
    80U,	// t2LDREXB
    491520U,	// t2LDREXD
    80U,	// t2LDREXH
    408U,	// t2LDRHT
    21600U,	// t2LDRH_POST
    416U,	// t2LDRH_PRE
    128U,	// t2LDRHi12
    408U,	// t2LDRHi8
    424U,	// t2LDRHpci
    2048U,	// t2LDRHpcrel
    432U,	// t2LDRHs
    408U,	// t2LDRSBT
    21600U,	// t2LDRSB_POST
    416U,	// t2LDRSB_PRE
    128U,	// t2LDRSBi12
    408U,	// t2LDRSBi8
    424U,	// t2LDRSBpci
    2048U,	// t2LDRSBpcrel
    432U,	// t2LDRSBs
    408U,	// t2LDRSHT
    21600U,	// t2LDRSH_POST
    416U,	// t2LDRSH_PRE
    128U,	// t2LDRSHi12
    408U,	// t2LDRSHi8
    424U,	// t2LDRSHpci
    2048U,	// t2LDRSHpcrel
    432U,	// t2LDRSHs
    408U,	// t2LDRT
    21600U,	// t2LDR_POST
    416U,	// t2LDR_PRE
    128U,	// t2LDRi12
    408U,	// t2LDRi8
    424U,	// t2LDRpci
    0U,	// t2LDRpci_pic
    2048U,	// t2LDRpcrel
    432U,	// t2LDRs
    0U,	// t2LEApcrel
    0U,	// t2LEApcrelJT
    32768U,	// t2LSLri
    32768U,	// t2LSLrr
    1015808U,	// t2LSRri
    32768U,	// t2LSRrr
    4623392U,	// t2MCR
    4623392U,	// t2MCR2
    6720544U,	// t2MCRR
    6720544U,	// t2MCRR2
    35684352U,	// t2MLA
    35684352U,	// t2MLS
    0U,	// t2MOVCCasr
    0U,	// t2MOVCCi
    0U,	// t2MOVCCi16
    0U,	// t2MOVCCi32imm
    0U,	// t2MOVCClsl
    0U,	// t2MOVCClsr
    0U,	// t2MOVCCr
    0U,	// t2MOVCCror
    400U,	// t2MOVSsi
    56U,	// t2MOVSsr
    2072U,	// t2MOVTi16
    0U,	// t2MOVTi16_ga_pcrel
    0U,	// t2MOV_ga_pcrel
    2048U,	// t2MOVi
    2048U,	// t2MOVi16
    0U,	// t2MOVi16_ga_pcrel
    0U,	// t2MOVi32imm
    2048U,	// t2MOVr
    400U,	// t2MOVsi
    56U,	// t2MOVsr
    22528U,	// t2MOVsra_flag
    22528U,	// t2MOVsrl_flag
    0U,	// t2MRC
    0U,	// t2MRC2
    0U,	// t2MRRC
    0U,	// t2MRRC2
    2U,	// t2MRS_AR
    448U,	// t2MRS_M
    176U,	// t2MRSbanked
    2U,	// t2MRSsys_AR
    64U,	// t2MSR_AR
    64U,	// t2MSR_M
    0U,	// t2MSRbanked
    32768U,	// t2MUL
    0U,	// t2MVNCCi
    2048U,	// t2MVNi
    2048U,	// t2MVNr
    400U,	// t2MVNs
    32768U,	// t2ORNri
    32768U,	// t2ORNrr
    983040U,	// t2ORNrs
    32768U,	// t2ORRri
    32768U,	// t2ORRrr
    983040U,	// t2ORRrs
    8421376U,	// t2PKHBT
    10518528U,	// t2PKHTB
    0U,	// t2PLDWi12
    0U,	// t2PLDWi8
    0U,	// t2PLDWs
    0U,	// t2PLDi12
    0U,	// t2PLDi8
    0U,	// t2PLDpci
    0U,	// t2PLDs
    0U,	// t2PLIi12
    0U,	// t2PLIi8
    0U,	// t2PLIpci
    0U,	// t2PLIs
    32768U,	// t2QADD
    32768U,	// t2QADD16
    32768U,	// t2QADD8
    32768U,	// t2QASX
    32768U,	// t2QDADD
    32768U,	// t2QDSUB
    32768U,	// t2QSAX
    32768U,	// t2QSUB
    32768U,	// t2QSUB16
    32768U,	// t2QSUB8
    2048U,	// t2RBIT
    2048U,	// t2REV
    2048U,	// t2REV16
    2048U,	// t2REVSH
    0U,	// t2RFEDB
    4U,	// t2RFEDBW
    0U,	// t2RFEIA
    4U,	// t2RFEIAW
    32768U,	// t2RORri
    32768U,	// t2RORrr
    2048U,	// t2RRX
    0U,	// t2RSBSri
    0U,	// t2RSBSrs
    32768U,	// t2RSBri
    32768U,	// t2RSBrr
    983040U,	// t2RSBrs
    32768U,	// t2SADD16
    32768U,	// t2SADD8
    32768U,	// t2SASX
    32768U,	// t2SBCri
    32768U,	// t2SBCrr
    983040U,	// t2SBCrs
    69238784U,	// t2SBFX
    32768U,	// t2SDIV
    32768U,	// t2SEL
    0U,	// t2SETPAN
    0U,	// t2SG
    32768U,	// t2SHADD16
    32768U,	// t2SHADD8
    32768U,	// t2SHASX
    32768U,	// t2SHSAX
    32768U,	// t2SHSUB16
    32768U,	// t2SHSUB8
    0U,	// t2SMC
    35684352U,	// t2SMLABB
    35684352U,	// t2SMLABT
    35684352U,	// t2SMLAD
    35684352U,	// t2SMLADX
    35684352U,	// t2SMLAL
    35684352U,	// t2SMLALBB
    35684352U,	// t2SMLALBT
    35684352U,	// t2SMLALD
    35684352U,	// t2SMLALDX
    35684352U,	// t2SMLALTB
    35684352U,	// t2SMLALTT
    35684352U,	// t2SMLATB
    35684352U,	// t2SMLATT
    35684352U,	// t2SMLAWB
    35684352U,	// t2SMLAWT
    35684352U,	// t2SMLSD
    35684352U,	// t2SMLSDX
    35684352U,	// t2SMLSLD
    35684352U,	// t2SMLSLDX
    35684352U,	// t2SMMLA
    35684352U,	// t2SMMLAR
    35684352U,	// t2SMMLS
    35684352U,	// t2SMMLSR
    32768U,	// t2SMMUL
    32768U,	// t2SMMULR
    32768U,	// t2SMUAD
    32768U,	// t2SMUADX
    32768U,	// t2SMULBB
    32768U,	// t2SMULBT
    35684352U,	// t2SMULL
    32768U,	// t2SMULTB
    32768U,	// t2SMULTT
    32768U,	// t2SMULWB
    32768U,	// t2SMULWT
    32768U,	// t2SMUSD
    32768U,	// t2SMUSDX
    0U,	// t2SRSDB
    0U,	// t2SRSDB_UPD
    0U,	// t2SRSIA
    0U,	// t2SRSIA_UPD
    4280U,	// t2SSAT
    2232U,	// t2SSAT16
    32768U,	// t2SSAX
    32768U,	// t2SSUB16
    32768U,	// t2SSUB8
    89U,	// t2STC2L_OFFSET
    131169U,	// t2STC2L_OPTION
    163937U,	// t2STC2L_POST
    105U,	// t2STC2L_PRE
    89U,	// t2STC2_OFFSET
    131169U,	// t2STC2_OPTION
    163937U,	// t2STC2_POST
    105U,	// t2STC2_PRE
    89U,	// t2STCL_OFFSET
    131169U,	// t2STCL_OPTION
    163937U,	// t2STCL_POST
    105U,	// t2STCL_PRE
    89U,	// t2STC_OFFSET
    131169U,	// t2STC_OPTION
    163937U,	// t2STC_POST
    105U,	// t2STC_PRE
    80U,	// t2STL
    80U,	// t2STLB
    491520U,	// t2STLEX
    491520U,	// t2STLEXB
    371228672U,	// t2STLEXD
    491520U,	// t2STLEXH
    80U,	// t2STLH
    2120U,	// t2STMDB
    65U,	// t2STMDB_UPD
    2120U,	// t2STMIA
    65U,	// t2STMIA_UPD
    408U,	// t2STRBT
    21600U,	// t2STRB_POST
    416U,	// t2STRB_PRE
    0U,	// t2STRB_preidx
    128U,	// t2STRBi12
    408U,	// t2STRBi8
    432U,	// t2STRBs
    23330840U,	// t2STRD_POST
    1048600U,	// t2STRD_PRE
    1081344U,	// t2STRDi8
    1114112U,	// t2STREX
    491520U,	// t2STREXB
    371228672U,	// t2STREXD
    491520U,	// t2STREXH
    408U,	// t2STRHT
    21600U,	// t2STRH_POST
    416U,	// t2STRH_PRE
    0U,	// t2STRH_preidx
    128U,	// t2STRHi12
    408U,	// t2STRHi8
    432U,	// t2STRHs
    408U,	// t2STRT
    21600U,	// t2STR_POST
    416U,	// t2STR_PRE
    0U,	// t2STR_preidx
    128U,	// t2STRi12
    408U,	// t2STRi8
    432U,	// t2STRs
    0U,	// t2SUBS_PC_LR
    0U,	// t2SUBSri
    0U,	// t2SUBSrr
    0U,	// t2SUBSrs
    32768U,	// t2SUBri
    32768U,	// t2SUBri12
    32768U,	// t2SUBrr
    983040U,	// t2SUBrs
    12615680U,	// t2SXTAB
    12615680U,	// t2SXTAB16
    12615680U,	// t2SXTAH
    5120U,	// t2SXTB
    5120U,	// t2SXTB16
    5120U,	// t2SXTH
    0U,	// t2TBB
    0U,	// t2TBB_JT
    0U,	// t2TBH
    0U,	// t2TBH_JT
    2048U,	// t2TEQri
    2048U,	// t2TEQrr
    400U,	// t2TEQrs
    2048U,	// t2TSTri
    2048U,	// t2TSTrr
    400U,	// t2TSTrs
    2048U,	// t2TT
    2048U,	// t2TTA
    2048U,	// t2TTAT
    2048U,	// t2TTT
    32768U,	// t2UADD16
    32768U,	// t2UADD8
    32768U,	// t2UASX
    69238784U,	// t2UBFX
    0U,	// t2UDF
    32768U,	// t2UDIV
    32768U,	// t2UHADD16
    32768U,	// t2UHADD8
    32768U,	// t2UHASX
    32768U,	// t2UHSAX
    32768U,	// t2UHSUB16
    32768U,	// t2UHSUB8
    35684352U,	// t2UMAAL
    35684352U,	// t2UMLAL
    35684352U,	// t2UMULL
    32768U,	// t2UQADD16
    32768U,	// t2UQADD8
    32768U,	// t2UQASX
    32768U,	// t2UQSAX
    32768U,	// t2UQSUB16
    32768U,	// t2UQSUB8
    32768U,	// t2USAD8
    35684352U,	// t2USADA8
    14712832U,	// t2USAT
    32768U,	// t2USAT16
    32768U,	// t2USAX
    32768U,	// t2USUB16
    32768U,	// t2USUB8
    12615680U,	// t2UXTAB
    12615680U,	// t2UXTAB16
    12615680U,	// t2UXTAH
    5120U,	// t2UXTB
    5120U,	// t2UXTB16
    5120U,	// t2UXTH
    0U,	// tADC
    0U,	// tADCS
    0U,	// tADDSi3
    0U,	// tADDSi8
    0U,	// tADDSrr
    0U,	// tADDframe
    2072U,	// tADDhirr
    2216U,	// tADDi3
    0U,	// tADDi8
    32768U,	// tADDrSP
    1146880U,	// tADDrSPi
    2216U,	// tADDrr
    456U,	// tADDspi
    2072U,	// tADDspr
    0U,	// tADJCALLSTACKDOWN
    0U,	// tADJCALLSTACKUP
    464U,	// tADR
    0U,	// tAND
    472U,	// tASRri
    0U,	// tASRrr
    0U,	// tB
    0U,	// tBIC
    0U,	// tBKPT
    0U,	// tBL
    0U,	// tBLXNSr
    0U,	// tBLXi
    0U,	// tBLXr
    0U,	// tBRIND
    0U,	// tBR_JTr
    0U,	// tBX
    0U,	// tBXNS
    0U,	// tBX_CALL
    0U,	// tBX_RET
    0U,	// tBX_RET_vararg
    0U,	// tBcc
    0U,	// tBfar
    0U,	// tCBNZ
    0U,	// tCBZ
    2048U,	// tCMNz
    2048U,	// tCMPhir
    2048U,	// tCMPi8
    2048U,	// tCMPr
    0U,	// tCPS
    0U,	// tEOR
    0U,	// tHINT
    0U,	// tHLT
    0U,	// tInt_WIN_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_longjmp
    0U,	// tInt_eh_sjlj_setjmp
    2120U,	// tLDMIA
    0U,	// tLDMIA_UPD
    480U,	// tLDRBi
    488U,	// tLDRBr
    2048U,	// tLDRConstPool
    496U,	// tLDRHi
    488U,	// tLDRHr
    0U,	// tLDRLIT_ga_abs
    0U,	// tLDRLIT_ga_pcrel
    488U,	// tLDRSB
    488U,	// tLDRSH
    0U,	// tLDR_postidx
    504U,	// tLDRi
    424U,	// tLDRpci
    0U,	// tLDRpci_pic
    488U,	// tLDRr
    512U,	// tLDRspi
    0U,	// tLEApcrel
    0U,	// tLEApcrelJT
    2216U,	// tLSLri
    0U,	// tLSLrr
    472U,	// tLSRri
    0U,	// tLSRrr
    0U,	// tMOVCCr_pseudo
    0U,	// tMOVSr
    0U,	// tMOVi8
    2048U,	// tMOVr
    2216U,	// tMUL
    0U,	// tMVN
    0U,	// tORR
    0U,	// tPICADD
    0U,	// tPOP
    0U,	// tPOP_RET
    0U,	// tPUSH
    2048U,	// tREV
    2048U,	// tREV16
    2048U,	// tREVSH
    0U,	// tROR
    0U,	// tRSB
    0U,	// tSBC
    0U,	// tSBCS
    0U,	// tSETEND
    65U,	// tSTMIA_UPD
    480U,	// tSTRBi
    488U,	// tSTRBr
    496U,	// tSTRHi
    488U,	// tSTRHr
    504U,	// tSTRi
    488U,	// tSTRr
    512U,	// tSTRspi
    0U,	// tSUBSi3
    0U,	// tSUBSi8
    0U,	// tSUBSrr
    2216U,	// tSUBi3
    0U,	// tSUBi8
    2216U,	// tSUBrr
    456U,	// tSUBspi
    0U,	// tSVC
    2048U,	// tSXTB
    2048U,	// tSXTH
    0U,	// tTAILJMPd
    0U,	// tTAILJMPdND
    0U,	// tTAILJMPr
    0U,	// tTBB_JT
    0U,	// tTBH_JT
    0U,	// tTPsoft
    0U,	// tTRAP
    2048U,	// tTST
    0U,	// tUDF
    2048U,	// tUXTB
    2048U,	// tUXTH
    0U,	// t__brkdiv0
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 4095)-1;


  // Fragment 0 encoded into 5 bits for 30 unique commands.
  switch ((Bits >> 12) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, FENTRY_CALL, PATCHABL...
    return;
    break;
  case 1:
    // ADCri, ADCrr, ADDri, ADDrr, ANDri, ANDrr, ASRi, ASRr, BICri, BICrr, EO...
    printSBitModifierOperand(MI, 5, STI, O);
    printPredicateOperand(MI, 3, STI, O);
    break;
  case 2:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, MLA, MOVsr, MVNsr, ORRrsi, RSB...
    printSBitModifierOperand(MI, 6, STI, O);
    printPredicateOperand(MI, 4, STI, O);
    break;
  case 3:
    // ADCrsr, ADDrsr, ANDrsr, BICrsr, EORrsr, ORRrsr, RSBrsr, RSCrsr, SBCrsr...
    printSBitModifierOperand(MI, 7, STI, O);
    printPredicateOperand(MI, 5, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printSORegRegOperand(MI, 2, STI, O);
    return;
    break;
  case 4:
    // ADR, CLZ, CMNri, CMNzrr, CMPri, CMPrr, FCONSTD, FCONSTH, FCONSTS, FLDM...
    printPredicateOperand(MI, 2, STI, O);
    break;
  case 5:
    // AESD, AESE, AESIMC, AESMC, BKPT, BL, BLX, BLXi, BX, CPS1p, CRC32B, CRC...
    printOperand(MI, 0, STI, O);
    break;
  case 6:
    // BFC, CMNzrsi, CMPrsi, LDRBi12, LDRcp, LDRi12, MOVTi16, QADD, QADD16, Q...
    printPredicateOperand(MI, 3, STI, O);
    break;
  case 7:
    // BFI, CMNzrsr, CMPrsr, LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, L...
    printPredicateOperand(MI, 4, STI, O);
    break;
  case 8:
    // BLX_pred, BL_pred, BXJ, BX_pred, Bcc, DBG, FLDMXIA, FSTMXIA, HINT, LDM...
    printPredicateOperand(MI, 1, STI, O);
    break;
  case 9:
    // BX_RET, ERET, FMSTAT, MOVPCLR, t2CLREX, t2DCPS1, t2DCPS2, t2DCPS3, t2S...
    printPredicateOperand(MI, 0, STI, O);
    break;
  case 10:
    // CDP, LDRD_POST, LDRD_PRE, MCR, MRC, SMLALBB, SMLALBT, SMLALTB, SMLALTT...
    printPredicateOperand(MI, 6, STI, O);
    break;
  case 11:
    // CDP2, LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, ...
    printPImmediate(MI, 0, STI, O);
    O << ", ";
    break;
  case 12:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIMod(MI, 0, STI, O);
    break;
  case 13:
    // DMB, DSB
    printMemBOption(MI, 0, STI, O);
    return;
    break;
  case 14:
    // ISB
    printInstSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 15:
    // ITasm, t2IT
    printThumbITMask(MI, 1, STI, O);
    break;
  case 16:
    // LDRBT_POST_IMM, LDRBT_POST_REG, LDRB_POST_IMM, LDRB_POST_REG, LDRB_PRE...
    printPredicateOperand(MI, 5, STI, O);
    break;
  case 17:
    // MOVi, MOVr, MOVr_TC, MVNi, MVNr, RRXi, t2MOVi, t2MOVr, t2MVNi, t2MVNr,...
    printSBitModifierOperand(MI, 4, STI, O);
    printPredicateOperand(MI, 2, STI, O);
    break;
  case 18:
    // MRC2
    printPImmediate(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 19:
    // MRRC2
    printPImmediate(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 20:
    // PLDWi12, PLDi12, PLIi12
    printAddrModeImm12Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 21:
    // PLDWrs, PLDrs, PLIrs
    printAddrMode2Operand(MI, 0, STI, O);
    return;
    break;
  case 22:
    // SETEND, tSETEND
    printSetendOperand(MI, 0, STI, O);
    return;
    break;
  case 23:
    // SMLAL, UMLAL
    printSBitModifierOperand(MI, 8, STI, O);
    printPredicateOperand(MI, 6, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 24:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printPredicateOperand(MI, 7, STI, O);
    break;
  case 25:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printPredicateOperand(MI, 9, STI, O);
    break;
  case 26:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printPredicateOperand(MI, 11, STI, O);
    break;
  case 27:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printPredicateOperand(MI, 8, STI, O);
    break;
  case 28:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printPredicateOperand(MI, 13, STI, O);
    break;
  case 29:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printSBitModifierOperand(MI, 1, STI, O);
    break;
  }


  // Fragment 1 encoded into 7 bits for 74 unique commands.
  switch ((Bits >> 17) & 127) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    O << "\t";
    break;
  case 1:
    // AESD, AESE, AESIMC, AESMC, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, ...
    O << ", ";
    break;
  case 2:
    // ASRi, ASRr, ITasm, LDRBT_POST, LDRConstPool, LDRT_POST, LSLi, LSLr, LS...
    O << ' ';
    break;
  case 3:
    // BKPT, BL, BLX, BLXi, BX, CPS1p, ERET, HLT, HVC, RFEDA, RFEDB, RFEIA, R...
    return;
    break;
  case 4:
    // BX_RET
    O << "\tlr";
    return;
    break;
  case 5:
    // CDP2, MCR2, MCRR2
    printOperand(MI, 1, STI, O);
    O << ", ";
    break;
  case 6:
    // FCONSTD, VABSD, VADDD, VCMPD, VCMPED, VCMPEZD, VCMPZD, VDIVD, VFMAD, V...
    O << ".f64\t";
    printOperand(MI, 0, STI, O);
    break;
  case 7:
    // FCONSTH, VABDhd, VABDhq, VABSH, VABShd, VABShq, VACGEhd, VACGEhq, VACG...
    O << ".f16\t";
    printOperand(MI, 0, STI, O);
    break;
  case 8:
    // FCONSTS, VABDfd, VABDfq, VABSS, VABSfd, VABSfq, VACGEfd, VACGEfq, VACG...
    O << ".f32\t";
    printOperand(MI, 0, STI, O);
    break;
  case 9:
    // FMSTAT
    O << "\tAPSR_nzcv, fpscr";
    return;
    break;
  case 10:
    // LDC2L_OFFSET, LDC2L_OPTION, LDC2L_POST, LDC2L_PRE, LDC2_OFFSET, LDC2_O...
    printCImmediate(MI, 1, STI, O);
    O << ", ";
    break;
  case 11:
    // MOVPCLR
    O << "\tpc, lr";
    return;
    break;
  case 12:
    // RFEDA_UPD, RFEDB_UPD, RFEIA_UPD, RFEIB_UPD
    O << '!';
    return;
    break;
  case 13:
    // VABALsv2i64, VABAsv2i32, VABAsv4i32, VABDLsv2i64, VABDsv2i32, VABDsv4i...
    O << ".s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 14:
    // VABALsv4i32, VABAsv4i16, VABAsv8i16, VABDLsv4i32, VABDsv4i16, VABDsv8i...
    O << ".s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 15:
    // VABALsv8i16, VABAsv16i8, VABAsv8i8, VABDLsv8i16, VABDsv16i8, VABDsv8i8...
    O << ".s8\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 16:
    // VABALuv2i64, VABAuv2i32, VABAuv4i32, VABDLuv2i64, VABDuv2i32, VABDuv4i...
    O << ".u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 17:
    // VABALuv4i32, VABAuv4i16, VABAuv8i16, VABDLuv4i32, VABDuv4i16, VABDuv8i...
    O << ".u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 18:
    // VABALuv8i16, VABAuv16i8, VABAuv8i8, VABDLuv8i16, VABDuv16i8, VABDuv8i8...
    O << ".u8\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 19:
    // VADDHNv2i32, VADDv1i64, VADDv2i64, VMOVNv2i32, VMOVv1i64, VMOVv2i64, V...
    O << ".i64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 20:
    // VADDHNv4i16, VADDv2i32, VADDv4i32, VBICiv2i32, VBICiv4i32, VCEQv2i32, ...
    O << ".i32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 21:
    // VADDHNv8i8, VADDv4i16, VADDv8i16, VBICiv4i16, VBICiv8i16, VCEQv4i16, V...
    O << ".i16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 22:
    // VADDv16i8, VADDv8i8, VCEQv16i8, VCEQv8i8, VCEQzv16i8, VCEQzv8i8, VCLZv...
    O << ".i8\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 23:
    // VCNTd, VCNTq, VDUP8d, VDUP8q, VDUPLN8d, VDUPLN8q, VEXTd8, VEXTq8, VLD1...
    O << ".8\t";
    break;
  case 24:
    // VCVTBDH, VCVTTDH
    O << ".f16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 25:
    // VCVTBHD, VCVTTHD
    O << ".f64.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 26:
    // VCVTBHS, VCVTTHS, VCVTh2f
    O << ".f32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 27:
    // VCVTBSH, VCVTTSH, VCVTf2h
    O << ".f16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 28:
    // VCVTDS
    O << ".f64.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 29:
    // VCVTSD
    O << ".f32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 30:
    // VCVTf2sd, VCVTf2sq, VCVTf2xsd, VCVTf2xsq, VTOSIRS, VTOSIZS, VTOSLS
    O << ".s32.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 31:
    // VCVTf2ud, VCVTf2uq, VCVTf2xud, VCVTf2xuq, VTOUIRS, VTOUIZS, VTOULS
    O << ".u32.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 32:
    // VCVTh2sd, VCVTh2sq, VCVTh2xsd, VCVTh2xsq, VTOSHH
    O << ".s16.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 33:
    // VCVTh2ud, VCVTh2uq, VCVTh2xud, VCVTh2xuq, VTOUHH
    O << ".u16.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 34:
    // VCVTs2fd, VCVTs2fq, VCVTxs2fd, VCVTxs2fq, VSITOS, VSLTOS
    O << ".f32.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 35:
    // VCVTs2hd, VCVTs2hq, VCVTxs2hd, VCVTxs2hq, VSHTOH
    O << ".f16.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 36:
    // VCVTu2fd, VCVTu2fq, VCVTxu2fd, VCVTxu2fq, VUITOS, VULTOS
    O << ".f32.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 37:
    // VCVTu2hd, VCVTu2hq, VCVTxu2hd, VCVTxu2hq, VUHTOH
    O << ".f16.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 38:
    // VDUP16d, VDUP16q, VDUPLN16d, VDUPLN16q, VEXTd16, VEXTq16, VLD1DUPd16, ...
    O << ".16\t";
    break;
  case 39:
    // VDUP32d, VDUP32q, VDUPLN32d, VDUPLN32q, VEXTd32, VEXTq32, VGETLNi32, V...
    O << ".32\t";
    break;
  case 40:
    // VEXTq64, VLD1d64, VLD1d64Q, VLD1d64Qwb_fixed, VLD1d64Qwb_register, VLD...
    O << ".64\t";
    break;
  case 41:
    // VLD1LNd16, VLD1LNd16_UPD, VLD2LNd16, VLD2LNd16_UPD, VLD2LNq16, VLD2LNq...
    O << ".16\t{";
    break;
  case 42:
    // VLD1LNd32, VLD1LNd32_UPD, VLD2LNd32, VLD2LNd32_UPD, VLD2LNq32, VLD2LNq...
    O << ".32\t{";
    break;
  case 43:
    // VLD1LNd8, VLD1LNd8_UPD, VLD2LNd8, VLD2LNd8_UPD, VLD3DUPd8, VLD3DUPd8_U...
    O << ".8\t{";
    break;
  case 44:
    // VMSR
    O << "\tfpscr, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 45:
    // VMSR_FPEXC
    O << "\tfpexc, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 46:
    // VMSR_FPINST
    O << "\tfpinst, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 47:
    // VMSR_FPINST2
    O << "\tfpinst2, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 48:
    // VMSR_FPSID
    O << "\tfpsid, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 49:
    // VMULLp8, VMULpd, VMULpq
    O << ".p8\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 50:
    // VQADDsv1i64, VQADDsv2i64, VQMOVNsuv2i32, VQMOVNsv2i32, VQRSHLsv1i64, V...
    O << ".s64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 51:
    // VQADDuv1i64, VQADDuv2i64, VQMOVNuv2i32, VQRSHLuv1i64, VQRSHLuv2i64, VQ...
    O << ".u64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 52:
    // VSHTOD
    O << ".f64.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 53:
    // VSHTOS
    O << ".f32.s16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 54:
    // VSITOD, VSLTOD
    O << ".f64.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 55:
    // VSITOH, VSLTOH
    O << ".f16.s32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 56:
    // VTOSHD
    O << ".s16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 57:
    // VTOSHS
    O << ".s16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 58:
    // VTOSIRD, VTOSIZD, VTOSLD
    O << ".s32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 59:
    // VTOSIRH, VTOSIZH, VTOSLH
    O << ".s32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 60:
    // VTOUHD
    O << ".u16.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 61:
    // VTOUHS
    O << ".u16.f32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 62:
    // VTOUIRD, VTOUIZD, VTOULD
    O << ".u32.f64\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 63:
    // VTOUIRH, VTOUIZH, VTOULH
    O << ".u32.f16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 64:
    // VUHTOD
    O << ".f64.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 65:
    // VUHTOS
    O << ".f32.u16\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 66:
    // VUITOD, VULTOD
    O << ".f64.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 67:
    // VUITOH, VULTOH
    O << ".f16.u32\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    break;
  case 68:
    // t2ADCrr, t2ADCrs, t2ADDri, t2ADDrr, t2ADDrs, t2ADR, t2ANDrr, t2ANDrs, ...
    O << ".w\t";
    break;
  case 69:
    // t2SRSDB, t2SRSIA
    O << "\tsp, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 70:
    // t2SRSDB_UPD, t2SRSIA_UPD
    O << "\tsp!, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 71:
    // t2SUBS_PC_LR
    O << "\tpc, lr, ";
    printOperand(MI, 0, STI, O);
    return;
    break;
  case 72:
    // tADC, tADDi3, tADDi8, tADDrr, tAND, tASRri, tASRrr, tBIC, tEOR, tLSLri...
    printPredicateOperand(MI, 4, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 73:
    // tMOVi8, tMVN, tRSB
    printPredicateOperand(MI, 3, STI, O);
    O << "\t";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  }


  // Fragment 2 encoded into 6 bits for 59 unique commands.
  switch ((Bits >> 24) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    printOperand(MI, 0, STI, O);
    break;
  case 1:
    // AESD, AESE, MCR2, MCRR2, SHA1C, SHA1M, SHA1P, SHA1SU0, SHA1SU1, SHA256...
    printOperand(MI, 2, STI, O);
    break;
  case 2:
    // AESIMC, AESMC, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, CRC32W, FLDM...
    printOperand(MI, 1, STI, O);
    break;
  case 3:
    // CDP, LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OP...
    printPImmediate(MI, 0, STI, O);
    O << ", ";
    break;
  case 4:
    // CDP2
    printCImmediate(MI, 2, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 5:
    // CPS2p, CPS3p, t2CPS2p, t2CPS3p, tCPS
    printCPSIFlag(MI, 1, STI, O);
    break;
  case 6:
    // FCONSTD, FCONSTH, FCONSTS, VABDfd, VABDfq, VABDhd, VABDhq, VABSD, VABS...
    O << ", ";
    break;
  case 7:
    // ITasm, t2IT
    printMandatoryPredicateOperand(MI, 0, STI, O);
    return;
    break;
  case 8:
    // LDAEXD, LDREXD
    printGPRPairOperand(MI, 0, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 1, STI, O);
    return;
    break;
  case 9:
    // LDC2L_OFFSET, LDC2_OFFSET, STC2L_OFFSET, STC2_OFFSET
    printAddrMode5Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 10:
    // LDC2L_OPTION, LDC2L_POST, LDC2_OPTION, LDC2_POST, STC2L_OPTION, STC2L_...
    printAddrMode7Operand(MI, 2, STI, O);
    O << ", ";
    break;
  case 11:
    // LDC2L_PRE, LDC2_PRE, STC2L_PRE, STC2_PRE
    printAddrMode5Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 12:
    // MRC, t2MRC, t2MRC2
    printPImmediate(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 13:
    // MRRC, t2MRRC, t2MRRC2
    printPImmediate(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 14:
    // MSR, MSRi, t2MSR_AR, t2MSR_M
    printMSRMaskOperand(MI, 0, STI, O);
    O << ", ";
    break;
  case 15:
    // MSRbanked, t2MSRbanked
    printBankedRegOperand(MI, 0, STI, O);
    O << ", ";
    printOperand(MI, 1, STI, O);
    return;
    break;
  case 16:
    // VBICiv2i32, VBICiv4i16, VBICiv4i32, VBICiv8i16, VMOVv16i8, VMOVv1i64, ...
    printNEONModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 17:
    // VCMPEZD, VCMPEZH, VCMPEZS, VCMPZD, VCMPZH, VCMPZS, tRSB
    O << ", #0";
    return;
    break;
  case 18:
    // VCVTf2sd, VCVTf2sq, VCVTf2ud, VCVTf2uq, VCVTh2sd, VCVTh2sq, VCVTh2ud, ...
    return;
    break;
  case 19:
    // VLD1DUPd16, VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32, VLD...
    printVectorListOneAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 20:
    // VLD1DUPq16, VLD1DUPq16wb_fixed, VLD1DUPq16wb_register, VLD1DUPq32, VLD...
    printVectorListTwoAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 21:
    // VLD1d16, VLD1d16wb_fixed, VLD1d16wb_register, VLD1d32, VLD1d32wb_fixed...
    printVectorListOne(MI, 0, STI, O);
    O << ", ";
    break;
  case 22:
    // VLD1d16Q, VLD1d16Qwb_fixed, VLD1d16Qwb_register, VLD1d32Q, VLD1d32Qwb_...
    printVectorListFour(MI, 0, STI, O);
    O << ", ";
    break;
  case 23:
    // VLD1d16T, VLD1d16Twb_fixed, VLD1d16Twb_register, VLD1d32T, VLD1d32Twb_...
    printVectorListThree(MI, 0, STI, O);
    O << ", ";
    break;
  case 24:
    // VLD1q16, VLD1q16wb_fixed, VLD1q16wb_register, VLD1q32, VLD1q32wb_fixed...
    printVectorListTwo(MI, 0, STI, O);
    O << ", ";
    break;
  case 25:
    // VLD2DUPd16x2, VLD2DUPd16x2wb_fixed, VLD2DUPd16x2wb_register, VLD2DUPd3...
    printVectorListTwoSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    break;
  case 26:
    // VLD2b16, VLD2b16wb_fixed, VLD2b16wb_register, VLD2b32, VLD2b32wb_fixed...
    printVectorListTwoSpaced(MI, 0, STI, O);
    O << ", ";
    break;
  case 27:
    // VLD3DUPdAsm_16, VLD3DUPdAsm_32, VLD3DUPdAsm_8, VLD3DUPdWB_fixed_Asm_16...
    printVectorListThreeAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 28:
    // VLD3DUPqAsm_16, VLD3DUPqAsm_32, VLD3DUPqAsm_8, VLD3DUPqWB_fixed_Asm_16...
    printVectorListThreeSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 29:
    // VLD3qAsm_16, VLD3qAsm_32, VLD3qAsm_8, VLD3qWB_fixed_Asm_16, VLD3qWB_fi...
    printVectorListThreeSpaced(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 30:
    // VLD4DUPdAsm_16, VLD4DUPdAsm_32, VLD4DUPdAsm_8, VLD4DUPdWB_fixed_Asm_16...
    printVectorListFourAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 31:
    // VLD4DUPqAsm_16, VLD4DUPqAsm_32, VLD4DUPqAsm_8, VLD4DUPqWB_fixed_Asm_16...
    printVectorListFourSpacedAllLanes(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 32:
    // VLD4qAsm_16, VLD4qAsm_32, VLD4qAsm_8, VLD4qWB_fixed_Asm_16, VLD4qWB_fi...
    printVectorListFourSpaced(MI, 0, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 33:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST2LNd16_UPD, VST2LNd32_U...
    printOperand(MI, 4, STI, O);
    break;
  case 34:
    // VST1d16, VST1d32, VST1d64, VST1d8
    printVectorListOne(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 35:
    // VST1d16Q, VST1d32Q, VST1d64Q, VST1d8Q, VST2q16, VST2q32, VST2q8
    printVectorListFour(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 36:
    // VST1d16Qwb_fixed, VST1d32Qwb_fixed, VST1d64Qwb_fixed, VST1d8Qwb_fixed,...
    printVectorListFour(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 37:
    // VST1d16Qwb_register, VST1d32Qwb_register, VST1d64Qwb_register, VST1d8Q...
    printVectorListFour(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 38:
    // VST1d16T, VST1d32T, VST1d64T, VST1d8T
    printVectorListThree(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 39:
    // VST1d16Twb_fixed, VST1d32Twb_fixed, VST1d64Twb_fixed, VST1d8Twb_fixed
    printVectorListThree(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 40:
    // VST1d16Twb_register, VST1d32Twb_register, VST1d64Twb_register, VST1d8T...
    printVectorListThree(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 41:
    // VST1d16wb_fixed, VST1d32wb_fixed, VST1d64wb_fixed, VST1d8wb_fixed
    printVectorListOne(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 42:
    // VST1d16wb_register, VST1d32wb_register, VST1d64wb_register, VST1d8wb_r...
    printVectorListOne(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 43:
    // VST1q16, VST1q32, VST1q64, VST1q8, VST2d16, VST2d32, VST2d8
    printVectorListTwo(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 44:
    // VST1q16wb_fixed, VST1q32wb_fixed, VST1q64wb_fixed, VST1q8wb_fixed, VST...
    printVectorListTwo(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 45:
    // VST1q16wb_register, VST1q32wb_register, VST1q64wb_register, VST1q8wb_r...
    printVectorListTwo(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 46:
    // VST2b16, VST2b32, VST2b8
    printVectorListTwoSpaced(MI, 2, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 47:
    // VST2b16wb_fixed, VST2b32wb_fixed, VST2b8wb_fixed
    printVectorListTwoSpaced(MI, 3, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << '!';
    return;
    break;
  case 48:
    // VST2b16wb_register, VST2b32wb_register, VST2b8wb_register
    printVectorListTwoSpaced(MI, 4, STI, O);
    O << ", ";
    printAddrMode6Operand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 49:
    // t2DMB, t2DSB
    printMemBOption(MI, 0, STI, O);
    return;
    break;
  case 50:
    // t2ISB
    printInstSyncBOption(MI, 0, STI, O);
    return;
    break;
  case 51:
    // t2PLDWi12, t2PLDi12, t2PLIi12
    printAddrModeImm12Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 52:
    // t2PLDWi8, t2PLDi8, t2PLIi8
    printT2AddrModeImm8Operand<false>(MI, 0, STI, O);
    return;
    break;
  case 53:
    // t2PLDWs, t2PLDs, t2PLIs
    printT2AddrModeSoRegOperand(MI, 0, STI, O);
    return;
    break;
  case 54:
    // t2PLDpci, t2PLIpci
    printThumbLdrLabelOperand(MI, 0, STI, O);
    return;
    break;
  case 55:
    // t2TBB
    printAddrModeTBB(MI, 0, STI, O);
    return;
    break;
  case 56:
    // t2TBH
    printAddrModeTBH(MI, 0, STI, O);
    return;
    break;
  case 57:
    // tADC, tADDi8, tAND, tASRrr, tBIC, tEOR, tLSLrr, tLSRrr, tORR, tROR, tS...
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 58:
    // tPOP, tPUSH
    printRegisterList(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 3 encoded into 5 bits for 30 unique commands.
  switch ((Bits >> 30) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ADR, ANDri, ANDrr, ANDrsi,...
    O << ", ";
    break;
  case 1:
    // AESD, AESE, AESIMC, AESMC, BLX_pred, BL_pred, BXJ, BX_pred, Bcc, CPS2p...
    return;
    break;
  case 2:
    // CDP, MCR, MCRR, MSR, VABDfd, VABDfq, VABDhd, VABDhq, VABSD, VABSH, VAB...
    printOperand(MI, 1, STI, O);
    break;
  case 3:
    // FCONSTD, FCONSTH, FCONSTS, VMOVv2f32, VMOVv4f32
    printFPImmOperand(MI, 1, STI, O);
    return;
    break;
  case 4:
    // FLDMXDB_UPD, FLDMXIA_UPD, FSTMXDB_UPD, FSTMXIA_UPD, LDMDA_UPD, LDMDB_U...
    O << "!, ";
    printRegisterList(MI, 4, STI, O);
    break;
  case 5:
    // LDC2L_OPTION, LDC2_OPTION, STC2L_OPTION, STC2_OPTION
    printCoprocOptionImm(MI, 3, STI, O);
    return;
    break;
  case 6:
    // LDC2L_POST, LDC2_POST, STC2L_POST, STC2_POST
    printPostIdxImm8s4Operand(MI, 3, STI, O);
    return;
    break;
  case 7:
    // LDCL_OFFSET, LDCL_OPTION, LDCL_POST, LDCL_PRE, LDC_OFFSET, LDC_OPTION,...
    printCImmediate(MI, 1, STI, O);
    O << ", ";
    break;
  case 8:
    // MRS, t2MRS_AR
    O << ", apsr";
    return;
    break;
  case 9:
    // MRSsys, t2MRSsys_AR
    O << ", spsr";
    return;
    break;
  case 10:
    // MSRi
    printModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 11:
    // VCEQzv16i8, VCEQzv2i32, VCEQzv4i16, VCEQzv4i32, VCEQzv8i16, VCEQzv8i8,...
    O << ", #0";
    return;
    break;
  case 12:
    // VCVTf2xsd, VCVTf2xsq, VCVTf2xud, VCVTf2xuq, VCVTh2xsd, VCVTh2xsq, VCVT...
    printOperand(MI, 2, STI, O);
    break;
  case 13:
    // VGETLNs16, VGETLNs8, VGETLNu16, VGETLNu8
    printVectorIndex(MI, 2, STI, O);
    return;
    break;
  case 14:
    // VLD1DUPd16, VLD1DUPd32, VLD1DUPd8, VLD1DUPq16, VLD1DUPq32, VLD1DUPq8, ...
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 15:
    // VLD1DUPd16wb_fixed, VLD1DUPd16wb_register, VLD1DUPd32wb_fixed, VLD1DUP...
    printAddrMode6Operand(MI, 2, STI, O);
    break;
  case 16:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    O << '[';
    break;
  case 17:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    O << "[], ";
    printOperand(MI, 1, STI, O);
    O << "[], ";
    printOperand(MI, 2, STI, O);
    break;
  case 18:
    // VLD3DUPdWB_fixed_Asm_16, VLD3DUPdWB_fixed_Asm_32, VLD3DUPdWB_fixed_Asm...
    O << '!';
    return;
    break;
  case 19:
    // VMRS
    O << ", fpscr";
    return;
    break;
  case 20:
    // VMRS_FPEXC
    O << ", fpexc";
    return;
    break;
  case 21:
    // VMRS_FPINST
    O << ", fpinst";
    return;
    break;
  case 22:
    // VMRS_FPINST2
    O << ", fpinst2";
    return;
    break;
  case 23:
    // VMRS_FPSID
    O << ", fpsid";
    return;
    break;
  case 24:
    // VMRS_MVFR0
    O << ", mvfr0";
    return;
    break;
  case 25:
    // VMRS_MVFR1
    O << ", mvfr1";
    return;
    break;
  case 26:
    // VMRS_MVFR2
    O << ", mvfr2";
    return;
    break;
  case 27:
    // VSETLNi16, VSETLNi32, VSETLNi8
    printVectorIndex(MI, 3, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 28:
    // VSHTOH, VTOSHH, VTOUHH, VUHTOH
    printFBits16(MI, 2, STI, O);
    return;
    break;
  case 29:
    // VSLTOD, VSLTOH, VSLTOS, VTOSLD, VTOSLH, VTOSLS, VTOULD, VTOULH, VTOULS...
    printFBits32(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 4 encoded into 7 bits for 65 unique commands.
  switch ((Bits >> 35) & 127) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ANDri, ANDrr, ANDrsi, ASRi...
    printOperand(MI, 1, STI, O);
    break;
  case 1:
    // ADR, t2ADR
    printAdrLabelOperand<0>(MI, 1, STI, O);
    return;
    break;
  case 2:
    // BFC, t2BFC
    printBitfieldInvMaskImmOperand(MI, 2, STI, O);
    return;
    break;
  case 3:
    // BFI, CPS3p, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, CRC32W, MOVTi16...
    printOperand(MI, 2, STI, O);
    break;
  case 4:
    // CDP, MCR, MCRR, VABDfd, VABDfq, VABDhd, VABDhq, VACGEfd, VACGEfq, VACG...
    O << ", ";
    break;
  case 5:
    // CMNri, CMPri, MOVi, MVNi, TEQri, TSTri
    printModImmOperand(MI, 1, STI, O);
    return;
    break;
  case 6:
    // CMNzrsi, CMPrsi, MOVsi, MVNsi, TEQrsi, TSTrsi
    printSORegImmOperand(MI, 1, STI, O);
    return;
    break;
  case 7:
    // CMNzrsr, CMPrsr, MOVsr, MVNsr, TEQrsr, TSTrsr, t2MOVSsr, t2MOVsr
    printSORegRegOperand(MI, 1, STI, O);
    return;
    break;
  case 8:
    // FLDMXDB_UPD, FLDMXIA_UPD, FSTMXDB_UPD, FSTMXIA_UPD, LDMDA_UPD, LDMDB_U...
    return;
    break;
  case 9:
    // FLDMXIA, FSTMXIA, LDMDA, LDMDB, LDMIA, LDMIB, STMDA, STMDB, STMIA, STM...
    printRegisterList(MI, 3, STI, O);
    break;
  case 10:
    // LDA, LDAB, LDAEX, LDAEXB, LDAEXH, LDAH, LDRBT_POST, LDREX, LDREXB, LDR...
    printAddrMode7Operand(MI, 1, STI, O);
    return;
    break;
  case 11:
    // LDCL_OFFSET, LDC_OFFSET, STCL_OFFSET, STC_OFFSET, t2LDC2L_OFFSET, t2LD...
    printAddrMode5Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 12:
    // LDCL_OPTION, LDCL_POST, LDC_OPTION, LDC_POST, LDRBT_POST_IMM, LDRBT_PO...
    printAddrMode7Operand(MI, 2, STI, O);
    break;
  case 13:
    // LDCL_PRE, LDC_PRE, STCL_PRE, STC_PRE, t2LDC2L_PRE, t2LDC2_PRE, t2LDCL_...
    printAddrMode5Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 14:
    // LDRB_PRE_IMM, LDR_PRE_IMM, STRB_PRE_IMM, STR_PRE_IMM
    printAddrModeImm12Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 15:
    // LDRB_PRE_REG, LDR_PRE_REG, STRB_PRE_REG, STR_PRE_REG
    printAddrMode2Operand(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 16:
    // LDRBi12, LDRcp, LDRi12, STRBi12, STRi12, t2LDRBi12, t2LDRHi12, t2LDRSB...
    printAddrModeImm12Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 17:
    // LDRBrs, LDRrs, STRBrs, STRrs
    printAddrMode2Operand(MI, 1, STI, O);
    return;
    break;
  case 18:
    // LDRH, LDRSB, LDRSH, STRH
    printAddrMode3Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 19:
    // LDRH_PRE, LDRSB_PRE, LDRSH_PRE, STRH_PRE
    printAddrMode3Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 20:
    // MCR2
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 21:
    // MCRR2, SHA1C, SHA1M, SHA1P, SHA1SU0, SHA256H, SHA256H2, SHA256SU1, VAB...
    printOperand(MI, 3, STI, O);
    break;
  case 22:
    // MRSbanked, t2MRSbanked
    printBankedRegOperand(MI, 1, STI, O);
    return;
    break;
  case 23:
    // SSAT, SSAT16, t2SSAT, t2SSAT16
    printImmPlusOneOperand(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    break;
  case 24:
    // STLEXD, STREXD
    printGPRPairOperand(MI, 1, STI, O);
    O << ", ";
    printAddrMode7Operand(MI, 2, STI, O);
    return;
    break;
  case 25:
    // VCEQzv2f32, VCEQzv4f16, VCEQzv4f32, VCEQzv8f16, VCGEzv2f32, VCGEzv4f16...
    O << ", #0";
    return;
    break;
  case 26:
    // VLD1DUPd16wb_fixed, VLD1DUPd32wb_fixed, VLD1DUPd8wb_fixed, VLD1DUPq16w...
    O << '!';
    return;
    break;
  case 27:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST2LNd16, VST2LNd32, VST2LNd8, VST2LN...
    printNoHashImmediate(MI, 4, STI, O);
    break;
  case 28:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD, VLD2LNd16, VLD2LNd32, VLD2...
    printNoHashImmediate(MI, 6, STI, O);
    break;
  case 29:
    // VLD1LNdAsm_16, VLD1LNdAsm_32, VLD1LNdAsm_8, VLD1LNdWB_fixed_Asm_16, VL...
    printAddrMode6Operand(MI, 2, STI, O);
    break;
  case 30:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    break;
  case 31:
    // VLD3DUPd16, VLD3DUPd16_UPD, VLD3DUPd32, VLD3DUPd32_UPD, VLD3DUPd8, VLD...
    O << "[]}, ";
    break;
  case 32:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printNoHashImmediate(MI, 10, STI, O);
    O << "], ";
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 10, STI, O);
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 10, STI, O);
    break;
  case 33:
    // VLD4DUPd16, VLD4DUPd16_UPD, VLD4DUPd32, VLD4DUPd32_UPD, VLD4DUPd8, VLD...
    O << "[], ";
    printOperand(MI, 3, STI, O);
    O << "[]}, ";
    break;
  case 34:
    // VLD4LNd16_UPD, VLD4LNd32_UPD, VLD4LNd8_UPD, VLD4LNq16_UPD, VLD4LNq32_U...
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "], ";
    printOperand(MI, 3, STI, O);
    O << '[';
    printNoHashImmediate(MI, 12, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
    break;
  case 35:
    // VLDRD, VLDRS, VSTRD, VSTRS
    printAddrMode5Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 36:
    // VLDRH, VSTRH
    printAddrMode5FP16Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 37:
    // VST1LNd16, VST1LNd32, VST1LNd8
    printNoHashImmediate(MI, 3, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 38:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD, VST3LNd16, VST3LNd32, VST3...
    printNoHashImmediate(MI, 5, STI, O);
    break;
  case 39:
    // VST3LNd16_UPD, VST3LNd32_UPD, VST3LNd8_UPD, VST3LNq16_UPD, VST3LNq32_U...
    printNoHashImmediate(MI, 7, STI, O);
    O << "], ";
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 7, STI, O);
    O << "], ";
    printOperand(MI, 6, STI, O);
    O << '[';
    printNoHashImmediate(MI, 7, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 40:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    printOperand(MI, 5, STI, O);
    O << ", ";
    printOperand(MI, 6, STI, O);
    break;
  case 41:
    // VTBL1
    printVectorListOne(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 42:
    // VTBL2
    printVectorListTwo(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 43:
    // VTBL3
    printVectorListThree(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 44:
    // VTBL4
    printVectorListFour(MI, 1, STI, O);
    O << ", ";
    printOperand(MI, 2, STI, O);
    return;
    break;
  case 45:
    // VTBX1
    printVectorListOne(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 46:
    // VTBX2
    printVectorListTwo(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 47:
    // VTBX3
    printVectorListThree(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 48:
    // VTBX4
    printVectorListFour(MI, 2, STI, O);
    O << ", ";
    printOperand(MI, 3, STI, O);
    return;
    break;
  case 49:
    // sysLDMDA_UPD, sysLDMDB_UPD, sysLDMIA_UPD, sysLDMIB_UPD, sysSTMDA_UPD, ...
    O << " ^";
    return;
    break;
  case 50:
    // t2CMNzrs, t2CMPrs, t2MOVSsi, t2MOVsi, t2MVNs, t2TEQrs, t2TSTrs
    printT2SOOperand(MI, 1, STI, O);
    return;
    break;
  case 51:
    // t2LDRBT, t2LDRBi8, t2LDRHT, t2LDRHi8, t2LDRSBT, t2LDRSBi8, t2LDRSHT, t...
    printT2AddrModeImm8Operand<false>(MI, 1, STI, O);
    return;
    break;
  case 52:
    // t2LDRB_PRE, t2LDRH_PRE, t2LDRSB_PRE, t2LDRSH_PRE, t2LDR_PRE, t2STRB_PR...
    printT2AddrModeImm8Operand<true>(MI, 2, STI, O);
    O << '!';
    return;
    break;
  case 53:
    // t2LDRBpci, t2LDRHpci, t2LDRSBpci, t2LDRSHpci, t2LDRpci, tLDRpci
    printThumbLdrLabelOperand(MI, 1, STI, O);
    return;
    break;
  case 54:
    // t2LDRBs, t2LDRHs, t2LDRSBs, t2LDRSHs, t2LDRs, t2STRBs, t2STRHs, t2STRs
    printT2AddrModeSoRegOperand(MI, 1, STI, O);
    return;
    break;
  case 55:
    // t2LDREX
    printT2AddrModeImm0_1020s4Operand(MI, 1, STI, O);
    return;
    break;
  case 56:
    // t2MRS_M
    printMSRMaskOperand(MI, 1, STI, O);
    return;
    break;
  case 57:
    // tADDspi, tSUBspi
    printThumbS4ImmOperand(MI, 2, STI, O);
    return;
    break;
  case 58:
    // tADR
    printAdrLabelOperand<2>(MI, 1, STI, O);
    return;
    break;
  case 59:
    // tASRri, tLSRri
    printThumbSRImm(MI, 3, STI, O);
    return;
    break;
  case 60:
    // tLDRBi, tSTRBi
    printThumbAddrModeImm5S1Operand(MI, 1, STI, O);
    return;
    break;
  case 61:
    // tLDRBr, tLDRHr, tLDRSB, tLDRSH, tLDRr, tSTRBr, tSTRHr, tSTRr
    printThumbAddrModeRROperand(MI, 1, STI, O);
    return;
    break;
  case 62:
    // tLDRHi, tSTRHi
    printThumbAddrModeImm5S2Operand(MI, 1, STI, O);
    return;
    break;
  case 63:
    // tLDRi, tSTRi
    printThumbAddrModeImm5S4Operand(MI, 1, STI, O);
    return;
    break;
  case 64:
    // tLDRspi, tSTRspi
    printThumbAddrModeSPOperand(MI, 1, STI, O);
    return;
    break;
  }


  // Fragment 5 encoded into 5 bits for 23 unique commands.
  switch ((Bits >> 42) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADCri, ADCrr, ADCrsi, ADDri, ADDrr, ADDrsi, ANDri, ANDrr, ANDrsi, ASRi...
    O << ", ";
    break;
  case 1:
    // CDP, t2CDP, t2CDP2
    printCImmediate(MI, 2, STI, O);
    O << ", ";
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 2:
    // CLZ, CMNzrr, CMPrr, CPS3p, CRC32B, CRC32CB, CRC32CH, CRC32CW, CRC32H, ...
    return;
    break;
  case 3:
    // MCR, MCRR, VABDfd, VABDfq, VABDhd, VABDhq, VACGEfd, VACGEfq, VACGEhd, ...
    printOperand(MI, 2, STI, O);
    break;
  case 4:
    // SSAT, t2SSAT
    printShiftImmOperand(MI, 3, STI, O);
    return;
    break;
  case 5:
    // SXTB, SXTB16, SXTH, UXTB, UXTB16, UXTH, t2SXTB, t2SXTB16, t2SXTH, t2UX...
    printRotImmOperand(MI, 2, STI, O);
    return;
    break;
  case 6:
    // VDUPLN16d, VDUPLN16q, VDUPLN32d, VDUPLN32q, VDUPLN8d, VDUPLN8q, VGETLN...
    printVectorIndex(MI, 2, STI, O);
    return;
    break;
  case 7:
    // VFMAD, VFMAH, VFMAS, VFMAfd, VFMAfq, VFMAhd, VFMAhq, VFMSD, VFMSH, VFM...
    printOperand(MI, 3, STI, O);
    break;
  case 8:
    // VLD1DUPd16wb_register, VLD1DUPd32wb_register, VLD1DUPd8wb_register, VL...
    printOperand(MI, 4, STI, O);
    return;
    break;
  case 9:
    // VLD1LNd16, VLD1LNd16_UPD, VLD1LNd32, VLD1LNd32_UPD, VLD1LNd8, VLD1LNd8...
    O << "]}, ";
    break;
  case 10:
    // VLD1LNdWB_fixed_Asm_16, VLD1LNdWB_fixed_Asm_32, VLD1LNdWB_fixed_Asm_8,...
    O << '!';
    return;
    break;
  case 11:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32, VLD4LNd16, VLD4L...
    O << "], ";
    break;
  case 12:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    break;
  case 13:
    // VLD3DUPd16, VLD3DUPd32, VLD3DUPd8, VLD3DUPq16, VLD3DUPq32, VLD3DUPq8
    printAddrMode6Operand(MI, 3, STI, O);
    return;
    break;
  case 14:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6Operand(MI, 4, STI, O);
    break;
  case 15:
    // VLD4DUPd16_UPD, VLD4DUPd32_UPD, VLD4DUPd8_UPD, VLD4DUPq16_UPD, VLD4DUP...
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
    break;
  case 16:
    // VMLALslsv2i32, VMLALslsv4i16, VMLALsluv2i32, VMLALsluv4i16, VMLAslv2i3...
    printVectorIndex(MI, 4, STI, O);
    return;
    break;
  case 17:
    // VMULLslsv2i32, VMULLslsv4i16, VMULLsluv2i32, VMULLsluv4i16, VMULslv2i3...
    printVectorIndex(MI, 3, STI, O);
    return;
    break;
  case 18:
    // VST3d16_UPD, VST3d32_UPD, VST3d8_UPD, VST3q16_UPD, VST3q32_UPD, VST3q8...
    O << "}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 19:
    // VST4LNd16_UPD, VST4LNd32_UPD, VST4LNd8_UPD, VST4LNq16_UPD, VST4LNq32_U...
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    printOperand(MI, 6, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "], ";
    printOperand(MI, 7, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 20:
    // sysLDMDA, sysLDMDB, sysLDMIA, sysLDMIB, sysSTMDA, sysSTMDB, sysSTMIA, ...
    O << " ^";
    return;
    break;
  case 21:
    // t2LDRB_POST, t2LDRH_POST, t2LDRSB_POST, t2LDRSH_POST, t2LDR_POST, t2ST...
    printT2AddrModeImm8OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 22:
    // t2MOVsra_flag, t2MOVsrl_flag
    O << ", #1";
    return;
    break;
  }


  // Fragment 6 encoded into 6 bits for 36 unique commands.
  switch ((Bits >> 47) & 63) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADCri, ADDri, ANDri, BICri, EORri, ORRri, RSBri, RSCri, SBCri, SUBri
    printModImmOperand(MI, 2, STI, O);
    return;
    break;
  case 1:
    // ADCrr, ADDrr, ANDrr, ASRi, ASRr, BICrr, EORrr, LSLi, LSLr, LSRi, LSRr,...
    printOperand(MI, 2, STI, O);
    break;
  case 2:
    // ADCrsi, ADDrsi, ANDrsi, BICrsi, EORrsi, ORRrsi, RSBrsi, RSCrsi, SBCrsi...
    printSORegImmOperand(MI, 2, STI, O);
    return;
    break;
  case 3:
    // BFI, t2BFI
    printBitfieldInvMaskImmOperand(MI, 3, STI, O);
    return;
    break;
  case 4:
    // LDCL_OPTION, LDC_OPTION, STCL_OPTION, STC_OPTION, t2LDC2L_OPTION, t2LD...
    printCoprocOptionImm(MI, 3, STI, O);
    return;
    break;
  case 5:
    // LDCL_POST, LDC_POST, STCL_POST, STC_POST, t2LDC2L_POST, t2LDC2_POST, t...
    printPostIdxImm8s4Operand(MI, 3, STI, O);
    return;
    break;
  case 6:
    // LDRBT_POST_IMM, LDRBT_POST_REG, LDRB_POST_IMM, LDRB_POST_REG, LDRT_POS...
    printAddrMode2OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 7:
    // LDRD, STRD
    printAddrMode3Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 8:
    // LDRD_POST, STRD_POST, t2LDRD_POST, t2STRD_POST
    printAddrMode7Operand(MI, 3, STI, O);
    break;
  case 9:
    // LDRD_PRE, STRD_PRE
    printAddrMode3Operand<true>(MI, 3, STI, O);
    O << '!';
    return;
    break;
  case 10:
    // LDRHTi, LDRSBTi, LDRSHTi, STRHTi
    printPostIdxImm8Operand(MI, 3, STI, O);
    return;
    break;
  case 11:
    // LDRHTr, LDRSBTr, LDRSHTr, STRHTr
    printPostIdxRegOperand(MI, 3, STI, O);
    return;
    break;
  case 12:
    // LDRH_POST, LDRSB_POST, LDRSH_POST, STRH_POST
    printAddrMode3OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 13:
    // MCR, MCRR, t2MCR, t2MCR2, t2MCRR, t2MCRR2
    O << ", ";
    break;
  case 14:
    // MCRR2
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 15:
    // STLEX, STLEXB, STLEXH, STREX, STREXB, STREXH, SWP, SWPB, t2LDAEXD, t2L...
    printAddrMode7Operand(MI, 2, STI, O);
    return;
    break;
  case 16:
    // VABDfd, VABDfq, VABDhd, VABDhq, VACGEfd, VACGEfq, VACGEhd, VACGEhq, VA...
    return;
    break;
  case 17:
    // VBIFd, VBIFq, VBITd, VBITq, VBSLd, VBSLq, VLD4LNd16, VLD4LNd32, VLD4LN...
    printOperand(MI, 3, STI, O);
    break;
  case 18:
    // VLD1LNd16, VLD1LNd32, VLD1LNd8, VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8...
    printAddrMode6Operand(MI, 1, STI, O);
    break;
  case 19:
    // VLD1LNd16_UPD, VLD1LNd32_UPD, VLD1LNd8_UPD
    printAddrMode6Operand(MI, 2, STI, O);
    printAddrMode6OffsetOperand(MI, 4, STI, O);
    return;
    break;
  case 20:
    // VLD1LNdWB_register_Asm_16, VLD1LNdWB_register_Asm_32, VLD1LNdWB_regist...
    printOperand(MI, 4, STI, O);
    break;
  case 21:
    // VLD2LNd16, VLD2LNd32, VLD2LNd8, VLD2LNq16, VLD2LNq32
    printOperand(MI, 1, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 2, STI, O);
    return;
    break;
  case 22:
    // VLD2LNd16_UPD, VLD2LNd32_UPD, VLD2LNd8_UPD, VLD2LNq16_UPD, VLD2LNq32_U...
    O << "]}, ";
    printAddrMode6Operand(MI, 3, STI, O);
    printAddrMode6OffsetOperand(MI, 5, STI, O);
    return;
    break;
  case 23:
    // VLD3DUPd16_UPD, VLD3DUPd32_UPD, VLD3DUPd8_UPD, VLD3DUPq16_UPD, VLD3DUP...
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case 24:
    // VLD3LNd16, VLD3LNd32, VLD3LNd8, VLD3LNq16, VLD3LNq32
    O << "], ";
    printOperand(MI, 2, STI, O);
    O << '[';
    printNoHashImmediate(MI, 8, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 3, STI, O);
    return;
    break;
  case 25:
    // VLD3LNd16_UPD, VLD3LNd32_UPD, VLD3LNd8_UPD, VLD3LNq16_UPD, VLD3LNq32_U...
    printAddrMode6Operand(MI, 4, STI, O);
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case 26:
    // VMLAslfd, VMLAslfq, VMLAslhd, VMLAslhq, VMLSslfd, VMLSslfq, VMLSslhd, ...
    printVectorIndex(MI, 4, STI, O);
    return;
    break;
  case 27:
    // VMULslfd, VMULslfq, VMULslhd, VMULslhq
    printVectorIndex(MI, 3, STI, O);
    return;
    break;
  case 28:
    // VST2LNd16_UPD, VST2LNd32_UPD, VST2LNd8_UPD, VST2LNq16_UPD, VST2LNq32_U...
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 29:
    // VST4d16_UPD, VST4d32_UPD, VST4d8_UPD, VST4q16_UPD, VST4q32_UPD, VST4q8...
    printOperand(MI, 7, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 1, STI, O);
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 30:
    // t2ADCrs, t2ADDrs, t2ANDrs, t2BICrs, t2EORrs, t2ORNrs, t2ORRrs, t2RSBrs...
    printT2SOOperand(MI, 2, STI, O);
    return;
    break;
  case 31:
    // t2ASRri, t2LSRri
    printThumbSRImm(MI, 2, STI, O);
    return;
    break;
  case 32:
    // t2LDRD_PRE, t2STRD_PRE
    printT2AddrModeImm8s4Operand<true>(MI, 3, STI, O);
    O << '!';
    return;
    break;
  case 33:
    // t2LDRDi8, t2STRDi8
    printT2AddrModeImm8s4Operand<false>(MI, 2, STI, O);
    return;
    break;
  case 34:
    // t2STREX
    printT2AddrModeImm0_1020s4Operand(MI, 2, STI, O);
    return;
    break;
  case 35:
    // tADDrSPi
    printThumbS4ImmOperand(MI, 2, STI, O);
    return;
    break;
  }


  // Fragment 7 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 53) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // ADCrr, ADDrr, ANDrr, ASRi, ASRr, BICrr, EORrr, LSLi, LSLr, LSRi, LSRr,...
    return;
    break;
  case 1:
    // LDRD_POST, MLA, MLS, SBFX, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SML...
    O << ", ";
    break;
  case 2:
    // MCR, t2MCR, t2MCR2
    printCImmediate(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    O << ", ";
    printOperand(MI, 5, STI, O);
    return;
    break;
  case 3:
    // MCRR, t2MCRR, t2MCRR2
    printOperand(MI, 3, STI, O);
    O << ", ";
    printCImmediate(MI, 4, STI, O);
    return;
    break;
  case 4:
    // PKHBT, t2PKHBT
    printPKHLSLShiftImm(MI, 3, STI, O);
    return;
    break;
  case 5:
    // PKHTB, t2PKHTB
    printPKHASRShiftImm(MI, 3, STI, O);
    return;
    break;
  case 6:
    // SXTAB, SXTAB16, SXTAH, UXTAB, UXTAB16, UXTAH, t2SXTAB, t2SXTAB16, t2SX...
    printRotImmOperand(MI, 3, STI, O);
    return;
    break;
  case 7:
    // USAT, t2USAT
    printShiftImmOperand(MI, 3, STI, O);
    return;
    break;
  case 8:
    // VLD3d16, VLD3d16_UPD, VLD3d32, VLD3d32_UPD, VLD3d8, VLD3d8_UPD, VLD3q1...
    O << "}, ";
    break;
  case 9:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32, VST2LNd16, VST2L...
    O << '[';
    break;
  case 10:
    // VST1LNd16_UPD, VST1LNd32_UPD, VST1LNd8_UPD
    printAddrMode6OffsetOperand(MI, 3, STI, O);
    return;
    break;
  case 11:
    // t2LDRD_POST, t2STRD_POST
    printT2AddrModeImm8s4OffsetOperand(MI, 4, STI, O);
    return;
    break;
  }


  // Fragment 8 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 57) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // LDRD_POST, STRD_POST
    printAddrMode3OffsetOperand(MI, 4, STI, O);
    return;
    break;
  case 1:
    // MLA, MLS, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SMLALBT, SMLALD, SML...
    printOperand(MI, 3, STI, O);
    break;
  case 2:
    // SBFX, UBFX, t2SBFX, t2UBFX
    printImmPlusOneOperand(MI, 3, STI, O);
    return;
    break;
  case 3:
    // VLD3d16, VLD3d32, VLD3d8, VLD3q16, VLD3q32, VLD3q8
    printAddrMode6Operand(MI, 3, STI, O);
    return;
    break;
  case 4:
    // VLD3d16_UPD, VLD3d32_UPD, VLD3d8_UPD, VLD3q16_UPD, VLD3q32_UPD, VLD3q8...
    printAddrMode6Operand(MI, 4, STI, O);
    printAddrMode6OffsetOperand(MI, 6, STI, O);
    return;
    break;
  case 5:
    // VLD4LNd16, VLD4LNd32, VLD4LNd8, VLD4LNq16, VLD4LNq32
    printNoHashImmediate(MI, 10, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 4, STI, O);
    return;
    break;
  case 6:
    // VST2LNd16, VST2LNd32, VST2LNd8, VST2LNq16, VST2LNq32
    printNoHashImmediate(MI, 4, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 7:
    // VST3LNd16, VST3LNd32, VST3LNd8, VST3LNq16, VST3LNq32
    printNoHashImmediate(MI, 5, STI, O);
    O << "], ";
    printOperand(MI, 4, STI, O);
    O << '[';
    printNoHashImmediate(MI, 5, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 8:
    // VST3d16, VST3d32, VST3d8, VST3q16, VST3q32, VST3q8
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 9:
    // VST4LNd16, VST4LNd32, VST4LNd8, VST4LNq16, VST4LNq32
    printNoHashImmediate(MI, 6, STI, O);
    O << "], ";
    printOperand(MI, 4, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "], ";
    printOperand(MI, 5, STI, O);
    O << '[';
    printNoHashImmediate(MI, 6, STI, O);
    O << "]}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 10:
    // VST4d16, VST4d32, VST4d8, VST4q16, VST4q32, VST4q8
    printOperand(MI, 5, STI, O);
    O << "}, ";
    printAddrMode6Operand(MI, 0, STI, O);
    return;
    break;
  case 11:
    // t2STLEXD, t2STREXD
    printAddrMode7Operand(MI, 3, STI, O);
    return;
    break;
  }


  // Fragment 9 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 61) & 1) {
    // VLD4d16, VLD4d16_UPD, VLD4d32, VLD4d32_UPD, VLD4d8, VLD4d8_UPD, VLD4q1...
    O << "}, ";
  } else {
    // MLA, MLS, SMLABB, SMLABT, SMLAD, SMLADX, SMLALBB, SMLALBT, SMLALD, SML...
    return;
  }


  // Fragment 10 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 62) & 1) {
    // VLD4d16_UPD, VLD4d32_UPD, VLD4d8_UPD, VLD4q16_UPD, VLD4q32_UPD, VLD4q8...
    printAddrMode6Operand(MI, 5, STI, O);
    printAddrMode6OffsetOperand(MI, 7, STI, O);
    return;
  } else {
    // VLD4d16, VLD4d32, VLD4d8, VLD4q16, VLD4q32, VLD4q8
    printAddrMode6Operand(MI, 4, STI, O);
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *ARMInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 289 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'D', '4', '_', 'D', '6', '_', 'D', '8', '_', 'D', '1', '0', 0,
  /* 13 */ 'D', '7', '_', 'D', '8', '_', 'D', '9', '_', 'D', '1', '0', 0,
  /* 26 */ 'Q', '7', '_', 'Q', '8', '_', 'Q', '9', '_', 'Q', '1', '0', 0,
  /* 39 */ 'd', '1', '0', 0,
  /* 43 */ 'q', '1', '0', 0,
  /* 47 */ 'r', '1', '0', 0,
  /* 51 */ 's', '1', '0', 0,
  /* 55 */ 'D', '1', '4', '_', 'D', '1', '6', '_', 'D', '1', '8', '_', 'D', '2', '0', 0,
  /* 71 */ 'D', '1', '7', '_', 'D', '1', '8', '_', 'D', '1', '9', '_', 'D', '2', '0', 0,
  /* 87 */ 'd', '2', '0', 0,
  /* 91 */ 's', '2', '0', 0,
  /* 95 */ 'D', '2', '4', '_', 'D', '2', '6', '_', 'D', '2', '8', '_', 'D', '3', '0', 0,
  /* 111 */ 'D', '2', '7', '_', 'D', '2', '8', '_', 'D', '2', '9', '_', 'D', '3', '0', 0,
  /* 127 */ 'd', '3', '0', 0,
  /* 131 */ 's', '3', '0', 0,
  /* 135 */ 'd', '0', 0,
  /* 138 */ 'q', '0', 0,
  /* 141 */ 'm', 'v', 'f', 'r', '0', 0,
  /* 147 */ 's', '0', 0,
  /* 150 */ 'D', '9', '_', 'D', '1', '0', '_', 'D', '1', '1', 0,
  /* 161 */ 'D', '5', '_', 'D', '7', '_', 'D', '9', '_', 'D', '1', '1', 0,
  /* 174 */ 'Q', '8', '_', 'Q', '9', '_', 'Q', '1', '0', '_', 'Q', '1', '1', 0,
  /* 188 */ 'R', '1', '0', '_', 'R', '1', '1', 0,
  /* 196 */ 'd', '1', '1', 0,
  /* 200 */ 'q', '1', '1', 0,
  /* 204 */ 'r', '1', '1', 0,
  /* 208 */ 's', '1', '1', 0,
  /* 212 */ 'D', '1', '9', '_', 'D', '2', '0', '_', 'D', '2', '1', 0,
  /* 224 */ 'D', '1', '5', '_', 'D', '1', '7', '_', 'D', '1', '9', '_', 'D', '2', '1', 0,
  /* 240 */ 'd', '2', '1', 0,
  /* 244 */ 's', '2', '1', 0,
  /* 248 */ 'D', '2', '9', '_', 'D', '3', '0', '_', 'D', '3', '1', 0,
  /* 260 */ 'D', '2', '5', '_', 'D', '2', '7', '_', 'D', '2', '9', '_', 'D', '3', '1', 0,
  /* 276 */ 'd', '3', '1', 0,
  /* 280 */ 's', '3', '1', 0,
  /* 284 */ 'Q', '0', '_', 'Q', '1', 0,
  /* 290 */ 'R', '0', '_', 'R', '1', 0,
  /* 296 */ 'd', '1', 0,
  /* 299 */ 'q', '1', 0,
  /* 302 */ 'm', 'v', 'f', 'r', '1', 0,
  /* 308 */ 's', '1', 0,
  /* 311 */ 'D', '6', '_', 'D', '8', '_', 'D', '1', '0', '_', 'D', '1', '2', 0,
  /* 325 */ 'D', '9', '_', 'D', '1', '0', '_', 'D', '1', '1', '_', 'D', '1', '2', 0,
  /* 340 */ 'Q', '9', '_', 'Q', '1', '0', '_', 'Q', '1', '1', '_', 'Q', '1', '2', 0,
  /* 355 */ 'd', '1', '2', 0,
  /* 359 */ 'q', '1', '2', 0,
  /* 363 */ 'r', '1', '2', 0,
  /* 367 */ 's', '1', '2', 0,
  /* 371 */ 'D', '1', '6', '_', 'D', '1', '8', '_', 'D', '2', '0', '_', 'D', '2', '2', 0,
  /* 387 */ 'D', '1', '9', '_', 'D', '2', '0', '_', 'D', '2', '1', '_', 'D', '2', '2', 0,
  /* 403 */ 'd', '2', '2', 0,
  /* 407 */ 's', '2', '2', 0,
  /* 411 */ 'D', '0', '_', 'D', '2', 0,
  /* 417 */ 'D', '0', '_', 'D', '1', '_', 'D', '2', 0,
  /* 426 */ 'Q', '1', '_', 'Q', '2', 0,
  /* 432 */ 'd', '2', 0,
  /* 435 */ 'q', '2', 0,
  /* 438 */ 'm', 'v', 'f', 'r', '2', 0,
  /* 444 */ 's', '2', 0,
  /* 447 */ 'f', 'p', 'i', 'n', 's', 't', '2', 0,
  /* 455 */ 'D', '7', '_', 'D', '9', '_', 'D', '1', '1', '_', 'D', '1', '3', 0,
  /* 469 */ 'D', '1', '1', '_', 'D', '1', '2', '_', 'D', '1', '3', 0,
  /* 481 */ 'Q', '1', '0', '_', 'Q', '1', '1', '_', 'Q', '1', '2', '_', 'Q', '1', '3', 0,
  /* 497 */ 'd', '1', '3', 0,
  /* 501 */ 'q', '1', '3', 0,
  /* 505 */ 's', '1', '3', 0,
  /* 509 */ 'D', '1', '7', '_', 'D', '1', '9', '_', 'D', '2', '1', '_', 'D', '2', '3', 0,
  /* 525 */ 'D', '2', '1', '_', 'D', '2', '2', '_', 'D', '2', '3', 0,
  /* 537 */ 'd', '2', '3', 0,
  /* 541 */ 's', '2', '3', 0,
  /* 545 */ 'D', '1', '_', 'D', '3', 0,
  /* 551 */ 'D', '1', '_', 'D', '2', '_', 'D', '3', 0,
  /* 560 */ 'Q', '0', '_', 'Q', '1', '_', 'Q', '2', '_', 'Q', '3', 0,
  /* 572 */ 'R', '2', '_', 'R', '3', 0,
  /* 578 */ 'd', '3', 0,
  /* 581 */ 'q', '3', 0,
  /* 584 */ 'r', '3', 0,
  /* 587 */ 's', '3', 0,
  /* 590 */ 'D', '8', '_', 'D', '1', '0', '_', 'D', '1', '2', '_', 'D', '1', '4', 0,
  /* 605 */ 'D', '1', '1', '_', 'D', '1', '2', '_', 'D', '1', '3', '_', 'D', '1', '4', 0,
  /* 621 */ 'Q', '1', '1', '_', 'Q', '1', '2', '_', 'Q', '1', '3', '_', 'Q', '1', '4', 0,
  /* 637 */ 'd', '1', '4', 0,
  /* 641 */ 'q', '1', '4', 0,
  /* 645 */ 's', '1', '4', 0,
  /* 649 */ 'D', '1', '8', '_', 'D', '2', '0', '_', 'D', '2', '2', '_', 'D', '2', '4', 0,
  /* 665 */ 'D', '2', '1', '_', 'D', '2', '2', '_', 'D', '2', '3', '_', 'D', '2', '4', 0,
  /* 681 */ 'd', '2', '4', 0,
  /* 685 */ 's', '2', '4', 0,
  /* 689 */ 'D', '0', '_', 'D', '2', '_', 'D', '4', 0,
  /* 698 */ 'D', '1', '_', 'D', '2', '_', 'D', '3', '_', 'D', '4', 0,
  /* 710 */ 'Q', '1', '_', 'Q', '2', '_', 'Q', '3', '_', 'Q', '4', 0,
  /* 722 */ 'd', '4', 0,
  /* 725 */ 'q', '4', 0,
  /* 728 */ 'r', '4', 0,
  /* 731 */ 's', '4', 0,
  /* 734 */ 'D', '9', '_', 'D', '1', '1', '_', 'D', '1', '3', '_', 'D', '1', '5', 0,
  /* 749 */ 'D', '1', '3', '_', 'D', '1', '4', '_', 'D', '1', '5', 0,
  /* 761 */ 'Q', '1', '2', '_', 'Q', '1', '3', '_', 'Q', '1', '4', '_', 'Q', '1', '5', 0,
  /* 777 */ 'd', '1', '5', 0,
  /* 781 */ 'q', '1', '5', 0,
  /* 785 */ 's', '1', '5', 0,
  /* 789 */ 'D', '1', '9', '_', 'D', '2', '1', '_', 'D', '2', '3', '_', 'D', '2', '5', 0,
  /* 805 */ 'D', '2', '3', '_', 'D', '2', '4', '_', 'D', '2', '5', 0,
  /* 817 */ 'd', '2', '5', 0,
  /* 821 */ 's', '2', '5', 0,
  /* 825 */ 'D', '1', '_', 'D', '3', '_', 'D', '5', 0,
  /* 834 */ 'D', '3', '_', 'D', '4', '_', 'D', '5', 0,
  /* 843 */ 'Q', '2', '_', 'Q', '3', '_', 'Q', '4', '_', 'Q', '5', 0,
  /* 855 */ 'R', '4', '_', 'R', '5', 0,
  /* 861 */ 'd', '5', 0,
  /* 864 */ 'q', '5', 0,
  /* 867 */ 'r', '5', 0,
  /* 870 */ 's', '5', 0,
  /* 873 */ 'D', '1', '0', '_', 'D', '1', '2', '_', 'D', '1', '4', '_', 'D', '1', '6', 0,
  /* 889 */ 'D', '1', '3', '_', 'D', '1', '4', '_', 'D', '1', '5', '_', 'D', '1', '6', 0,
  /* 905 */ 'd', '1', '6', 0,
  /* 909 */ 's', '1', '6', 0,
  /* 913 */ 'D', '2', '0', '_', 'D', '2', '2', '_', 'D', '2', '4', '_', 'D', '2', '6', 0,
  /* 929 */ 'D', '2', '3', '_', 'D', '2', '4', '_', 'D', '2', '5', '_', 'D', '2', '6', 0,
  /* 945 */ 'd', '2', '6', 0,
  /* 949 */ 's', '2', '6', 0,
  /* 953 */ 'D', '0', '_', 'D', '2', '_', 'D', '4', '_', 'D', '6', 0,
  /* 965 */ 'D', '3', '_', 'D', '4', '_', 'D', '5', '_', 'D', '6', 0,
  /* 977 */ 'Q', '3', '_', 'Q', '4', '_', 'Q', '5', '_', 'Q', '6', 0,
  /* 989 */ 'd', '6', 0,
  /* 992 */ 'q', '6', 0,
  /* 995 */ 'r', '6', 0,
  /* 998 */ 's', '6', 0,
  /* 1001 */ 'D', '1', '1', '_', 'D', '1', '3', '_', 'D', '1', '5', '_', 'D', '1', '7', 0,
  /* 1017 */ 'D', '1', '5', '_', 'D', '1', '6', '_', 'D', '1', '7', 0,
  /* 1029 */ 'd', '1', '7', 0,
  /* 1033 */ 's', '1', '7', 0,
  /* 1037 */ 'D', '2', '1', '_', 'D', '2', '3', '_', 'D', '2', '5', '_', 'D', '2', '7', 0,
  /* 1053 */ 'D', '2', '5', '_', 'D', '2', '6', '_', 'D', '2', '7', 0,
  /* 1065 */ 'd', '2', '7', 0,
  /* 1069 */ 's', '2', '7', 0,
  /* 1073 */ 'D', '1', '_', 'D', '3', '_', 'D', '5', '_', 'D', '7', 0,
  /* 1085 */ 'D', '5', '_', 'D', '6', '_', 'D', '7', 0,
  /* 1094 */ 'Q', '4', '_', 'Q', '5', '_', 'Q', '6', '_', 'Q', '7', 0,
  /* 1106 */ 'R', '6', '_', 'R', '7', 0,
  /* 1112 */ 'd', '7', 0,
  /* 1115 */ 'q', '7', 0,
  /* 1118 */ 'r', '7', 0,
  /* 1121 */ 's', '7', 0,
  /* 1124 */ 'D', '1', '2', '_', 'D', '1', '4', '_', 'D', '1', '6', '_', 'D', '1', '8', 0,
  /* 1140 */ 'D', '1', '5', '_', 'D', '1', '6', '_', 'D', '1', '7', '_', 'D', '1', '8', 0,
  /* 1156 */ 'd', '1', '8', 0,
  /* 1160 */ 's', '1', '8', 0,
  /* 1164 */ 'D', '2', '2', '_', 'D', '2', '4', '_', 'D', '2', '6', '_', 'D', '2', '8', 0,
  /* 1180 */ 'D', '2', '5', '_', 'D', '2', '6', '_', 'D', '2', '7', '_', 'D', '2', '8', 0,
  /* 1196 */ 'd', '2', '8', 0,
  /* 1200 */ 's', '2', '8', 0,
  /* 1204 */ 'D', '2', '_', 'D', '4', '_', 'D', '6', '_', 'D', '8', 0,
  /* 1216 */ 'D', '5', '_', 'D', '6', '_', 'D', '7', '_', 'D', '8', 0,
  /* 1228 */ 'Q', '5', '_', 'Q', '6', '_', 'Q', '7', '_', 'Q', '8', 0,
  /* 1240 */ 'd', '8', 0,
  /* 1243 */ 'q', '8', 0,
  /* 1246 */ 'r', '8', 0,
  /* 1249 */ 's', '8', 0,
  /* 1252 */ 'D', '1', '3', '_', 'D', '1', '5', '_', 'D', '1', '7', '_', 'D', '1', '9', 0,
  /* 1268 */ 'D', '1', '7', '_', 'D', '1', '8', '_', 'D', '1', '9', 0,
  /* 1280 */ 'd', '1', '9', 0,
  /* 1284 */ 's', '1', '9', 0,
  /* 1288 */ 'D', '2', '3', '_', 'D', '2', '5', '_', 'D', '2', '7', '_', 'D', '2', '9', 0,
  /* 1304 */ 'D', '2', '7', '_', 'D', '2', '8', '_', 'D', '2', '9', 0,
  /* 1316 */ 'd', '2', '9', 0,
  /* 1320 */ 's', '2', '9', 0,
  /* 1324 */ 'D', '3', '_', 'D', '5', '_', 'D', '7', '_', 'D', '9', 0,
  /* 1336 */ 'D', '7', '_', 'D', '8', '_', 'D', '9', 0,
  /* 1345 */ 'Q', '6', '_', 'Q', '7', '_', 'Q', '8', '_', 'Q', '9', 0,
  /* 1357 */ 'R', '8', '_', 'R', '9', 0,
  /* 1363 */ 'd', '9', 0,
  /* 1366 */ 'q', '9', 0,
  /* 1369 */ 'r', '9', 0,
  /* 1372 */ 's', '9', 0,
  /* 1375 */ 'R', '1', '2', '_', 'S', 'P', 0,
  /* 1382 */ 'p', 'c', 0,
  /* 1385 */ 'f', 'p', 'e', 'x', 'c', 0,
  /* 1391 */ 'f', 'p', 's', 'i', 'd', 0,
  /* 1397 */ 'i', 't', 's', 't', 'a', 't', 'e', 0,
  /* 1405 */ 's', 'p', 0,
  /* 1408 */ 'f', 'p', 's', 'c', 'r', 0,
  /* 1414 */ 'l', 'r', 0,
  /* 1417 */ 'a', 'p', 's', 'r', 0,
  /* 1422 */ 'c', 'p', 's', 'r', 0,
  /* 1427 */ 's', 'p', 's', 'r', 0,
  /* 1432 */ 'f', 'p', 'i', 'n', 's', 't', 0,
  /* 1439 */ 'f', 'p', 's', 'c', 'r', '_', 'n', 'z', 'c', 'v', 0,
  /* 1450 */ 'a', 'p', 's', 'r', '_', 'n', 'z', 'c', 'v', 0,
  };

  static const uint16_t RegAsmOffset[] = {
    1417, 1450, 1422, 1385, 1432, 1408, 1439, 1391, 1397, 1414, 1382, 1405, 1427, 135, 
    296, 432, 578, 722, 861, 989, 1112, 1240, 1363, 39, 196, 355, 497, 637, 
    777, 905, 1029, 1156, 1280, 87, 240, 403, 537, 681, 817, 945, 1065, 1196, 
    1316, 127, 276, 447, 141, 302, 438, 138, 299, 435, 581, 725, 864, 992, 
    1115, 1243, 1366, 43, 200, 359, 501, 641, 781, 144, 305, 441, 584, 728, 
    867, 995, 1118, 1246, 1369, 47, 204, 363, 147, 308, 444, 587, 731, 870, 
    998, 1121, 1249, 1372, 51, 208, 367, 505, 645, 785, 909, 1033, 1160, 1284, 
    91, 244, 407, 541, 685, 821, 949, 1069, 1200, 1320, 131, 280, 411, 545, 
    692, 828, 959, 1079, 1210, 1330, 6, 167, 317, 461, 597, 741, 881, 1009, 
    1132, 1260, 63, 232, 379, 517, 657, 797, 921, 1045, 1172, 1296, 103, 268, 
    284, 426, 566, 716, 849, 983, 1100, 1234, 1351, 32, 180, 347, 489, 629, 
    769, 560, 710, 843, 977, 1094, 1228, 1345, 26, 174, 340, 481, 621, 761, 
    1375, 290, 572, 855, 1106, 1357, 188, 417, 551, 701, 834, 968, 1085, 1219, 
    1336, 16, 150, 328, 469, 609, 749, 893, 1017, 1144, 1268, 75, 212, 391, 
    525, 669, 805, 933, 1053, 1184, 1304, 115, 248, 689, 825, 956, 1076, 1207, 
    1327, 3, 164, 314, 458, 593, 737, 877, 1005, 1128, 1256, 59, 228, 375, 
    513, 653, 793, 917, 1041, 1168, 1292, 99, 264, 953, 1073, 1204, 1324, 0, 
    161, 311, 455, 590, 734, 873, 1001, 1124, 1252, 55, 224, 371, 509, 649, 
    789, 913, 1037, 1164, 1288, 95, 260, 420, 704, 971, 1222, 19, 332, 613, 
    897, 1148, 79, 395, 673, 937, 1188, 119, 698, 965, 1216, 13, 325, 605, 
    889, 1140, 71, 387, 665, 929, 1180, 111, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool ARMInstPrinter::printAliasInstr(const MCInst *MI, const MCSubtargetInfo &STI, raw_ostream &OS) {
  const char *AsmString;
  switch (MI->getOpcode()) {
  default: return false;
  case ARM::HINT:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 0 &&
        !STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6KOps]) {
      // (HINT 0, pred:$p)
      AsmString = "nop$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 1 &&
        !STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6KOps]) {
      // (HINT 1, pred:$p)
      AsmString = "yield$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 2 &&
        !STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6KOps]) {
      // (HINT 2, pred:$p)
      AsmString = "wfe$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 3 &&
        !STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6KOps]) {
      // (HINT 3, pred:$p)
      AsmString = "wfi$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 4 &&
        !STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6KOps]) {
      // (HINT 4, pred:$p)
      AsmString = "sev$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 5 &&
        !STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV8Ops]) {
      // (HINT 5, pred:$p)
      AsmString = "sevl$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 16 &&
        !STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureRAS]) {
      // (HINT 16, pred:$p)
      AsmString = "esb$\xFF\x02\x01";
      break;
    }
    return false;
  case ARM::t2HINT:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 0 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2]) {
      // (t2HINT 0, pred:$p)
      AsmString = "nop$\xFF\x02\x01.w";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 1 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2]) {
      // (t2HINT 1, pred:$p)
      AsmString = "yield$\xFF\x02\x01.w";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 2 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2]) {
      // (t2HINT 2, pred:$p)
      AsmString = "wfe$\xFF\x02\x01.w";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 3 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2]) {
      // (t2HINT 3, pred:$p)
      AsmString = "wfi$\xFF\x02\x01.w";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 4 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2]) {
      // (t2HINT 4, pred:$p)
      AsmString = "sev$\xFF\x02\x01.w";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 5 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2] &&
        STI.getFeatureBits()[ARM::HasV8Ops]) {
      // (t2HINT 5, pred:$p)
      AsmString = "sevl$\xFF\x02\x01.w";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 16 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2] &&
        STI.getFeatureBits()[ARM::FeatureRAS]) {
      // (t2HINT 16, pred:$p)
      AsmString = "esb$\xFF\x02\x01.w";
      break;
    }
    return false;
  case ARM::t2SUBS_PC_LR:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 0 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2] &&
        STI.getFeatureBits()[ARM::FeatureVirtualization]) {
      // (t2SUBS_PC_LR 0, pred:$p)
      AsmString = "eret$\xFF\x02\x01";
      break;
    }
    return false;
  case ARM::tHINT:
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 0 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6MOps]) {
      // (tHINT 0, pred:$p)
      AsmString = "nop$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 1 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6MOps]) {
      // (tHINT 1, pred:$p)
      AsmString = "yield$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 2 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6MOps]) {
      // (tHINT 2, pred:$p)
      AsmString = "wfe$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 3 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6MOps]) {
      // (tHINT 3, pred:$p)
      AsmString = "wfi$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 4 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::HasV6MOps]) {
      // (tHINT 4, pred:$p)
      AsmString = "sev$\xFF\x02\x01";
      break;
    }
    if (MI->getNumOperands() == 3 &&
        MI->getOperand(0).isImm() &&
        MI->getOperand(0).getImm() == 5 &&
        STI.getFeatureBits()[ARM::ModeThumb] &&
        STI.getFeatureBits()[ARM::FeatureThumb2] &&
        STI.getFeatureBits()[ARM::HasV8Ops]) {
      // (tHINT 5, pred:$p)
      AsmString = "sevl$\xFF\x02\x01";
      break;
    }
    return false;
  }

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t')      OS << '\t';
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, STI, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, STI, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void ARMInstPrinter::printCustomAliasOperand(
         const MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         const MCSubtargetInfo &STI,
         raw_ostream &OS) {
  switch (PrintMethodIdx) {
  default:
    llvm_unreachable("Unknown PrintMethod kind");
    break;
  case 0:
    printPredicateOperand(MI, OpIdx, STI, OS);
    break;
  }
}

#endif // PRINT_ALIAS_INSTR
